<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.ProcessEnvironment$ExternalData: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder lessonCompleted(boolean)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.util.List getAssignments()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver: void setApplicationContext(org.springframework.context.ApplicationContext)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.text.AttributeEntry: java.lang.Object getKey()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><java.util.Optional: void ifPresent(java.util.function.Consumer)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DecimalStyle: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponents: java.lang.String getTitle()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><java.util.Date: java.util.Date from(java.time.Instant)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.service.LessonInfoService: void <init>(org.owasp.webgoat.session.WebSession)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: java.util.Optional parseJson(java.lang.String)>-><com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.web.servlet.ModelAndView: void <init>(org.springframework.web.servlet.View,java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.TzdbZoneRulesProvider: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.StringJoiner: java.lang.String toString()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder accepted()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.classic.LoggerContext: java.lang.String toString()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder lessonCompleted(boolean)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.field.UnsupportedDurationField: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.http.HttpEntity: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Object: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.internal.info.MigrationInfoImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Formatter$FixedString: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: void <init>(java.lang.Class,java.lang.Class,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getKey()>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.users.WebGoatUser: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><java.io.File: boolean exists()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyFixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><java.io.PrintStream: void println(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.challenges.Email: void <init>(java.time.LocalDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.AbstractCollection: java.lang.String toString()>
<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><java.lang.String: int hashCode()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>-><org.thymeleaf.TemplateEngine: void addDialect(org.thymeleaf.dialect.IDialect)>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><org.springframework.http.converter.json.MappingJacksonValue: void setSerializationView(java.lang.Class)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.license.Edition: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.annotation.TypeAnnotation: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.users.LessonTracker: java.util.Optional getAssignment(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.lang.Throwable: java.lang.String toString()>
<org.owasp.webgoat.assignments.AttackResult: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder builder(org.owasp.webgoat.i18n.PluginMessages)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: void <init>(org.owasp.webgoat.i18n.PluginMessages)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.LocalGregorianCalendar$Date: java.lang.String toString()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer formLogin()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.util.Random: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><java.util.Random: int nextInt(int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.JsonMappingException$Reference: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.security.Provider: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Optional: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.jruby.ir.operands.ClosureLocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.Provider: java.lang.String toString()>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><org.owasp.webgoat.challenges.Email: java.time.LocalDateTime getTime()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.org.objectweb.asm.Label: java.lang.String toString()>
<org.owasp.webwolf.mailbox.MailboxController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.AppenderBase: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.ChallengeIntro: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$4: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.StandardError: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: boolean hasId(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.joran.action.Action: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toLowerCase()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>-><java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.requests.Requests: boolean lambda$get$0(org.springframework.security.core.userdetails.UserDetails,org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>
<org.owasp.webgoat.lessons.CourseConfiguration: void lambda$course$1(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: void setComplete(boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.RowType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView start()>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.deser.impl.CreatorCandidate: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>-><org.springframework.security.core.token.Sha512DigestUtils: java.lang.String shaHex(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><java.util.ArrayList: boolean contains(java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController: void <init>(org.owasp.webwolf.user.UserValidator,org.owasp.webwolf.user.UserService,org.springframework.security.authentication.AuthenticationManager)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><org.joda.time.DateTime: org.joda.time.DateTime now()>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><org.springframework.security.core.context.SecurityContextImpl: org.springframework.security.core.Authentication getAuthentication()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.owasp.webgoat.users.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.springframework.validation.BindException: void rejectValue(java.lang.String,java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyFile$SelfPermission: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.LessonMenuItem: void <init>()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController: void <init>(org.owasp.webwolf.mailbox.MailboxRepository)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getPath(java.lang.Class)>-><org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$LessonStatistics: void setNumberOfAttempts(int)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getName()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Strength: com.nulabinc.zxcvbn.AttackTimes$CrackTimeSeconds getCrackTimeSeconds()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder lessonCompleted(boolean)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.lang.Throwable: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$TextPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.deser.UnresolvedId: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><org.apache.commons.lang3.RandomStringUtils: java.lang.String randomAlphabetic(int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.apache.logging.log4j.Level: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanParameterInfo: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.jruby.RubyArray: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.api.Location: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.X509CertImpl: java.lang.String toString()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.lang.System: long currentTimeMillis()>
<org.owasp.webgoat.session.WebSession: void <init>()>-><org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>
<org.owasp.webwolf.requests.Requests: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: int getRole()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubyThread: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: boolean check_text(java.lang.String,java.lang.String)>-><java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.jruby.util.collections.ConcurrentWeakHashMap$Segment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.owasp.webgoat.users.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.owasp.webgoat.users.UserForm: java.lang.String getUsername()>
<org.owasp.webgoat.client_side_filtering.Salaries: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.org.objectweb.asm.Label: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.nio.ByteBuffer: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtBuilder builder()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void copy(org.owasp.webgoat.challenges.challenge7.MD5$MD5State)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.net.URI: java.lang.String getScheme()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getTitle()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.hsqldb.types.CharacterType: java.lang.String convertJavaTimeObject(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.UUID: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: java.util.List compileFromString(java.lang.String)>-><javax.tools.ToolProvider: javax.tools.JavaCompiler getSystemJavaCompiler()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])>
<org.owasp.webgoat.xxe.Comments: java.util.Optional parseJson(java.lang.String)>-><java.util.Optional: java.util.Optional of(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.constants.platform.RLIMIT: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Messages messageSource(org.owasp.webgoat.i18n.Language)>-><org.owasp.webgoat.i18n.Messages: void <init>(org.owasp.webgoat.i18n.Language)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><org.owasp.webgoat.session.Course: java.util.List getCategories()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer formLogin()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Float: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$LessonStatistics: void <init>(org.owasp.webgoat.service.ReportCardService)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><org.springframework.util.FileCopyUtils: byte[] copyToByteArray(java.io.InputStream)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><org.springframework.util.LinkedMultiValueMap: void putAll(java.util.Map)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjection: java.lang.String getTitle()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.http.HttpEntity: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.ThreadPoolExecutor: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.io.File: boolean exists()>
<org.owasp.webgoat.service.LessonMenuService: int lambda$showLeftNav$1(org.owasp.webgoat.lessons.LessonMenuItem,org.owasp.webgoat.lessons.LessonMenuItem)>-><org.owasp.webgoat.lessons.LessonMenuItem: int getRanking()>
<org.owasp.webgoat.csrf.CSRFLogin: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String)>
<org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.Base64Codec: byte[] decode(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.users.UserService: java.util.List getAllUsers()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.session.Course course()>-><java.util.stream.ReferencePipeline$Head: void forEach(java.util.function.Consumer)>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: java.lang.Long getId()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.DateTimeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.io.BufferedReader: java.lang.String readLine()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Currency: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.challenges.Email: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String getSender()>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.springframework.http.HttpMethod: boolean matches(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.joran.spi.ElementPath: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.util.Properties: void <init>()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: javax.sql.DataSource dataSource(java.lang.String,java.lang.String)>-><org.springframework.jdbc.datasource.DriverManagerDataSource: void <init>(java.lang.String)>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Character: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.joran.action.Action: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.io.FileInputStream: void close()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubyObject: java.lang.String toString()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyThread: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.UserProfile: void <init>(java.lang.String)>-><org.owasp.webgoat.idor.UserProfile: void setProfileFromId(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.thoughtworks.xstream.core.util.FastField: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webwolf.requests.LandingPage: org.springframework.http.ResponseEntity lambda$ok$0(javax.servlet.http.HttpServletRequest)>-><org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Date: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.NullBean: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(byte[],java.lang.Class)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.session.LabelDebugger labelDebugger()>-><org.owasp.webgoat.session.LabelDebugger: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.node.BaseJsonNode: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.stream.Collectors: java.util.stream.Collector counting()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.csrf.CSRFFeedback: boolean hostOrRefererDifferentHost(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.path_traversal.ProfileUpload: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.javasupport.JavaArray: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.io.FileInputStream: void <init>(java.io.File)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Integer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.zone.ZoneOffsetTransition: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.net.www.protocol.https.HttpsURLConnectionImpl: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.auth_bypass.AuthBypass: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.UTCDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.Collections$UnmodifiableList: java.lang.Object get(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><io.jsonwebtoken.impl.JwtMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><java.util.Properties: void <init>()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList$1: java.lang.Object next()>
<org.owasp.webgoat.users.Scoreboard: java.lang.String toLessonTitle(java.lang.String)>-><java.util.Optional: java.lang.Object get()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><org.owasp.webgoat.session.LabelDebugger: boolean isEnabled()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.ReferenceType: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.DateTimeZone: java.lang.String toString()>
<org.owasp.webgoat.deserialization.InsecureDeserialization: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.xxe.Comments: java.util.Optional parseJson(java.lang.String)>-><java.util.Optional: java.util.Optional empty()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ThreadPoolExecutor: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.NamedInheritableThreadLocal: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.FileServer$UploadedFile: void <init>(org.owasp.webwolf.FileServer,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String[] split(java.lang.String)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.session.UserSessionData: void <init>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap: java.util.Set entrySet()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<org.springframework.web.util.UriUtils: void lambda$encodeUriVariables$0(java.util.Map,java.lang.String,java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getMethod()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.PatternEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.field.BaseDateTimeField: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.security.core.context.SecurityContextImpl: org.springframework.security.core.Authentication getAuthentication()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.challenges.challenge5.Challenge5: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Locale: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.Vector: boolean add(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.owasp.webgoat.missing_ac.Users$3: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.io.File: java.io.File getParentFile()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<register-finalize <org.owasp.webgoat.lessons.LessonMenuItemType: void <clinit>()>-><java.lang.ref.Finalizer: void register(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: org.owasp.webwolf.requests.Requests$Tracert lambda$get$1(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.owasp.webwolf.requests.Requests: java.lang.String path(org.springframework.boot.actuate.trace.http.HttpTrace)>
<register-finalize <org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.lang.ref.Finalizer: void register(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.http_basics.HttpBasics: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$LessonStatistics: void setName(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.locks.ReentrantLock: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.database.base.Function: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.cia.CIA: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.util.collections.WeakHashSet: java.lang.String toString()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.FilterReturn: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.session.Course: java.util.List getCategories()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream distinct()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>-><java.security.MessageDigest: void update(byte[])>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.stream.SpinedBuffer: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.lang.String: byte[] getBytes()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: int size()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.SubList: java.lang.Object get(int)>
<org.owasp.webgoat.WebGoat: org.springframework.web.client.RestTemplate restTemplate()>-><org.springframework.web.client.RestTemplate: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaConstructor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webgoat.i18n.PluginMessages: java.util.Properties getMessages()>-><org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.AppenderBase: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: java.lang.String toString()>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$3: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictions: java.lang.String getTitle()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.DurationFieldType$StandardDurationFieldType: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$CacheControlConfig: org.springframework.security.config.annotation.web.configurers.HeadersConfigurer disable()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><javax.servlet.ServletRequestWrapper: java.util.Enumeration getParameterNames()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<register-finalize <org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.lang.ref.Finalizer: void register(java.lang.Object)>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.users.UserTracker: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.apache.commons.exec.OS: boolean isFamilyUnix()>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.JavaObjectData: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer: org.springframework.security.config.annotation.web.HttpSecurityBuilder disable()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtBuilder builder()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.xxe.Comments: org.owasp.webgoat.xxe.Comment parseXml(java.lang.String)>-><javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jcodings.Encoding: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractCollection: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.internal.database.base.Schema: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionMitigations: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Throwable: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.io.ByteArrayResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder title(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String getUserHash()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.util.HashMap: java.util.Collection values()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.text.ParsePosition: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><org.springframework.http.MediaType: org.springframework.http.MediaType parseMediaType(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder builder(org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.challenges.Email: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String getContents()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.session.Course course()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.net.www.protocol.https.HttpsURLConnectionImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString(java.lang.String)>-><org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$TextPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer permitAll()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>-><java.lang.String: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOR: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DecimalFormat: void setMaximumFractionDigits(int)>
<org.jruby.ir.operands.ClosureLocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.lessons.Hint: int hashCode()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getAssignmentPath()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.WeekFields$ComputedDayOfField: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getUserId()>
<org.hsqldb.persist.Cache$CachedObjectComparator: int hashCode(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector$Itr: boolean hasNext()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.WebGoatUser: void <init>(java.lang.String,java.lang.String)>-><org.owasp.webgoat.users.WebGoatUser: void createUser()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity$BodyBuilder contentType(org.springframework.http.MediaType)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.database.base.SchemaObject: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Locale: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<org.owasp.webwolf.MvcConfiguration: void addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)>-><org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration: org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration addResourceLocations(java.lang.String[])>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><org.owasp.webwolf.mailbox.Email: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String,java.lang.String,java.lang.String)>-><org.springframework.util.StringUtils: boolean isEmpty(java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.http.ResponseEntity lambda$sendEmail$0(org.owasp.webwolf.mailbox.Email)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.crypto.CryptoUtil: java.lang.String getPrivateKeyInPEM(java.security.KeyPair)>-><java.lang.String: void <init>(byte[],java.nio.charset.Charset)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.text.DateFormat: java.lang.String format(java.util.Date)>
<org.owasp.webgoat.webwolf_introduction.WebWolfIntroduction: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.CsrfConfigurer csrf()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email build()>-><org.owasp.webgoat.challenges.Email: void <init>(java.time.LocalDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.BaseDurationField: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKey(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.nio.charset.Charset: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.net.SocketImpl: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.font.AttributeValues: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.Boolean: boolean booleanValue()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Instant: java.time.Instant plus(java.time.temporal.TemporalAmount)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.jruby.RubyHash: int size()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Date: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyFloat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><org.joda.time.DateTime: org.joda.time.DateTime now()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><java.lang.Throwable: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.BuddhistCalendar: java.lang.String toString()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.representations.ExceptionRegion: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email: org.owasp.webgoat.challenges.Email$EmailBuilder builder()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.field.MillisDurationField: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.URL: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.validation.ObjectError: java.lang.String toString()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictions: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.ZoneInfo: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DecimalStyle: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.chrono.BasicChronology: java.lang.String toString()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.Collections$SynchronizedList: java.lang.Object get(int)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.util.ObjectIdentifier: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<java.text.AttributeEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.jwt.JWT: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.HsqlException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.owasp.webgoat.csrf.CSRFLogin: void markAssignmentSolvedWithRealUser(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Self: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.jruby.RubyArray: boolean add(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: int size()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.pkcs.SignerInfo: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$SettingsParser: java.lang.String toString()>
<org.owasp.webgoat.service.ReportCardService$LessonStatistics: void <init>(org.owasp.webgoat.service.ReportCardService)>-><java.lang.Object: void <init>()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$1: void <init>(org.owasp.webgoat.missing_ac.Users,java.sql.SQLException)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.StackTraceElement: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.owasp.webgoat.crypto.HashingAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UnboxedFloat: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.introduction.WebGoatIntroduction: java.lang.String getTitle()>
<org.owasp.webgoat.missing_ac.DisplayUser: void <init>(org.owasp.webgoat.users.WebGoatUser)>-><org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String genUserHash(java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.Fixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Date: java.util.Date from(java.time.Instant)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webgoat.missing_ac.Users$1: void <init>(org.owasp.webgoat.missing_ac.Users,java.sql.SQLException)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.mitigation.CrossSiteScriptingMitigation: java.lang.String getTitle()>
<org.owasp.webgoat.template.LessonTemplate: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.SymbolProc: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyHash$ConvertingEntry: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String lambda$new$0(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.SymbolProc: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard: java.util.List challengesSolved(org.owasp.webgoat.users.UserTracker)>-><java.util.List: java.util.List of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.io.File: java.io.File getAbsoluteFile()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.IntervalSecondData: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.MD5: void transform(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,int[])>-><org.owasp.webgoat.challenges.challenge7.MD5: int HH(int,int,int,int,int,int,int)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer defaultSuccessUrl(java.lang.String,boolean)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.deser.CreatorProperty: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.UserSessionData: void <init>(java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.TimeData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: org.owasp.webgoat.webwolf_introduction.Email build()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.misc.Signal: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><javax.crypto.Mac: void init(java.security.Key)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer logout()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream sorted(java.util.Comparator)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.validation.ObjectError: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.jar.Attributes: int size()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.io.File: boolean exists()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.util.Hashtable: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.MD5: byte[] getHash()>-><org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void copy(org.owasp.webgoat.challenges.challenge7.MD5$MD5State)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge8.Challenge8: java.lang.String getTitle()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getColor()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.awt.Color: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.SimpleXXE: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.apache.commons.lang3.StringUtils: boolean contains(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webwolf.MvcConfiguration: void createDirectory()>-><java.io.File: boolean exists()>
<org.owasp.webgoat.LessonTemplateResolver: void <init>(org.springframework.core.io.ResourceLoader)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.AjaxAuthenticationEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>-><org.springframework.security.web.util.OnCommittedResponseWrapper: void sendError(int,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UnboxedBoolean: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.lang.Boolean lambda$getLessonOverview$4(org.owasp.webgoat.lessons.Assignment)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.api.callback.Event: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: void <init>(java.lang.String)>
<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.InputStreamResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.field.MillisDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.apache.commons.lang.exception.ExceptionUtils: java.lang.String getFullStackTrace(java.lang.Throwable)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.Row: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionAdvanced: java.lang.String getTitle()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: java.lang.String compact()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.util.Pair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.NamedThreadLocal: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.Provider$Service: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.SimpleType: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.jruby.RubyArray: boolean add(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.crypto.CryptoPermission: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.util.RegexpOptions: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.URI: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webwolf.requests.Requests: java.lang.String toJsonString(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getContents()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.AsciiDoctorTemplateResolver asciiDoctorTemplateResolver(org.owasp.webgoat.i18n.Language)>-><org.owasp.webgoat.AsciiDoctorTemplateResolver: void <init>(org.owasp.webgoat.i18n.Language)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.Signature: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$ReportCard: void setNumberOfLessonsSolved(int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanNotificationInfo: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Instant: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.text.PatternEntry: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile: boolean isEmpty()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.DateFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>-><java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<org.owasp.webgoat.lessons.Hint: int hashCode()>-><java.lang.String: int hashCode()>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.List: java.util.List of()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><org.owasp.webgoat.service.LabelDebugService: java.util.Map createResponse(java.lang.Boolean)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.BeanMetadataAttribute: java.lang.String toString()>
<org.owasp.webgoat.session.Course: int getTotalOfAssignments()>-><java.util.stream.ReferencePipeline: java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><java.security.SecureRandom: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.CodeSource: java.lang.String toString()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.jruby.ir.runtime.IRReturnJump: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List getHints(java.lang.Class)>-><java.lang.Class: java.lang.annotation.Annotation[] getAnnotationsByType(java.lang.Class)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.IRScope: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.Collections$EmptyList: java.lang.Object get(int)>
<org.owasp.webwolf.user.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.owasp.webwolf.user.UserForm: java.lang.String getUsername()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.IRScriptBody: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.MillisDurationField: java.lang.String toString()>
<org.owasp.webgoat.xxe.SimpleXXE: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.apache.commons.exec.OS: boolean isFamilyMac()>
<java.util.AbstractSet: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.util.DerValue: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<org.owasp.webgoat.session.Course: java.util.List getCategories()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream sorted()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.missing_ac.MissingFunctionAC: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.owasp.webgoat.users.UserForm: java.lang.String getMatchingPassword()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: void <clinit>()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.HashMap: int size()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.jsoup.helper.ChangeNotifyingArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.LinkedList: java.lang.Object get(int)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionMitigations: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.PropertyName: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.AbstractMap: void putAll(java.util.Map)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.springframework.validation.BindException: boolean hasErrors()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.BoundMethodHandle$SpeciesData: java.lang.String toString()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.jruby.ir.operands.LocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.Collections$SingletonList: java.lang.Object get(int)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.TreeMap$Entry: java.lang.String toString()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry: java.lang.Object anyRequest()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.apache.commons.exec.OS: boolean isFamilyMac()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.IntervalSecondData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: java.lang.String getPrivateKeyInPEM(java.security.KeyPair)>-><java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<org.owasp.webgoat.csrf.ForgedReviews: java.util.Collection retrieveReviews()>-><com.beust.jcommander.internal.Lists: java.util.List newArrayList()>
<org.jruby.util.collections.ConcurrentWeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>-><com.beust.jcommander.internal.Lists: java.util.List newArrayList()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><java.io.File: java.lang.String getCanonicalPath()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.LessonInfoModel: void <init>(java.lang.String,boolean,boolean,boolean)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webwolf.user.UserForm: java.lang.String getPassword()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.jca.ProviderConfig: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfLessonsSolved()>-><org.owasp.webgoat.users.LessonTracker: boolean isLessonSolved()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.TreeMap: int size()>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.users.UserTracker: void <init>(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder signWith(io.jsonwebtoken.SignatureAlgorithm,java.lang.String)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.template.LessonTemplate: java.lang.String getTitle()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void initVotes()>-><org.owasp.webgoat.jwt.votes.Vote: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: java.lang.String path(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.springframework.boot.actuate.trace.http.HttpTrace: org.springframework.boot.actuate.trace.http.HttpTrace$Request getRequest()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList$1: boolean hasNext()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.MediaType: org.springframework.http.MediaType parseMediaType(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity ok(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.ClobDataID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.runtime.Block: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.LessonMenuItemType: void <init>(java.lang.String,int)>-><java.lang.Enum: void <init>(java.lang.String,int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String substring(int,int)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: java.util.List usersService(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.users.UserService: java.util.List getAllUsers()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webwolf.user.UserValidator: void <init>(org.owasp.webwolf.user.UserRepository)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Collections$UnmodifiableMap: java.lang.String toString()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.ZoneOffsetTransitionRule: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.MethodInfo: java.lang.String toString()>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.springframework.http.ResponseEntity: void <init>(java.lang.Object,org.springframework.http.HttpStatus)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.CharacterType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.assignments.AttackResult: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String,boolean)>-><org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeJson(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void <clinit>()>-><java.security.SecureRandom: void <init>()>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webwolf.requests.WebWolfTraceRepository: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswords: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webwolf.WebSecurityConfig: org.springframework.security.crypto.password.NoOpPasswordEncoder passwordEncoder()>-><org.springframework.security.crypto.password.NoOpPasswordEncoder: org.springframework.security.crypto.password.PasswordEncoder getInstance()>
<org.owasp.webgoat.missing_ac.Users$5: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String nextFieldName()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.springframework.web.util.UriUtils: java.lang.String lambda$encodeUriVariables$1(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.concurrent.ConcurrentHashMap: int size()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.FrozenString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.UUID: java.lang.String toString()>
<org.owasp.webgoat.service.ReportCardService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.springframework.boot.actuate.trace.http.HttpTrace: org.springframework.boot.actuate.trace.http.HttpTrace$Request getRequest()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.PluginMessages pluginMessages(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setFallbackToSystemLocale(boolean)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: java.util.List compileFromString(java.lang.String)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: javax.tools.SimpleJavaFileObject getJavaFileContentsAsString(java.lang.String)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.JsonMappingException$Reference: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StackTraceElement: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.logging.Level: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.net.www.protocol.https.HttpsURLConnectionImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.asm.Label: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.TimestampData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.ser.BeanSerializer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.DurationFieldType$StandardDurationFieldType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.nio.charset.CoderResult: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.Users$2: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String toHex(byte[])>-><java.lang.StringBuffer: void <init>(int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.IntervalSecondData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: java.lang.String getMessage(java.lang.String,java.lang.Object[])>-><org.springframework.context.support.AbstractMessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.util.Locale)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.stream.SpinedBuffer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyFloat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.csrf.CSRFFeedback: boolean requestContainsWebGoatCookie(javax.servlet.http.Cookie[])>
<com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Character: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.Salaries: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.text.AttributeEntry: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.servlet.http.HttpServletResponseWrapper: void addCookie(javax.servlet.http.Cookie)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.LinkedHashMap: java.util.Collection values()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.font.AttributeValues: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList: void <init>()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.thymeleaf.standard.expression.RestrictedRequestAccessUtils$RestrictedRequestWrapper: java.lang.String getParameter(java.lang.String)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.UTCDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.http_basics.HttpBasics: java.lang.String getTitle()>
<org.owasp.webgoat.service.LabelDebugService: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Nil: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<java.util.TreeMap$Entry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><java.time.LocalDateTime: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.io.File: boolean exists()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.UserProfile: java.util.Map profileToMap()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: void printStackTrace()>
<org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String,java.lang.String,java.util.List)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.io.File: java.io.File[] listFiles()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$1: java.lang.Object next()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: java.lang.String path(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.springframework.boot.actuate.trace.http.HttpTrace$Request: java.net.URI getUri()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.i18n.PluginMessages: void <init>(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setBasename(java.lang.String)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.IsoFields$Field$2: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><sun.misc.CompoundEnumeration: boolean hasMoreElements()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Double: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.ChallengeIntro: java.lang.String getTitle()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity$BodyBuilder contentType(org.springframework.http.MediaType)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Label: java.lang.String toString()>
<org.jruby.ir.operands.LocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.csrf.CSRF: java.lang.String getTitle()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Date: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.binding.AssignedName: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><java.io.File: java.io.File getCanonicalFile()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer exceptionHandling()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.util.RegexpOptions: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.field.MillisDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfLessonsSolved()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.UUID: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.constants.platform.Signal: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.HashSet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.lang.String: byte[] getBytes(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String,java.lang.String,java.util.List)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.BlobDataID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Formatter$FormatSpecifier: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard: java.lang.String lambda$challengesSolved$4(org.owasp.webgoat.users.LessonTracker)>-><org.owasp.webgoat.users.LessonTracker: java.lang.String getLessonName()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: java.util.List usersService(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.missing_ac.DisplayUser: void <init>(org.owasp.webgoat.users.WebGoatUser)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.MapType: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String nextFieldName()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponents: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><java.lang.Long: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.UnboxedBoolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.ffi.Platform$CPU: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.File: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.StringLiteral: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.zone.ZoneOffsetTransitionRule: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Rational: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.thymeleaf.standard.expression.RestrictedRequestAccessUtils$RestrictedRequestWrapper: java.lang.String getParameter(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask1: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKey(java.lang.String)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><java.util.Calendar: java.util.Date getTime()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.locale.BaseLocale: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><sun.net.www.MeteredStream: void close()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String genUserHash(java.lang.String,java.lang.String)>-><java.lang.String: byte[] getBytes(java.lang.String)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><java.lang.Boolean: boolean booleanValue()>
<org.owasp.webgoat.lessons.CourseConfiguration: boolean lambda$getMapping$3(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.WeekFields$ComputedDayOfField: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.HashMap: java.util.Set entrySet()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector$Itr: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap: java.util.Set entrySet()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.Parsed: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getPath(java.lang.Class)>-><org.owasp.webgoat.lessons.CourseConfiguration: boolean methodReturnTypeIsOfTypeAttackResult(java.lang.reflect.Method)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><java.lang.String: int length()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<java.text.AttributeEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.util.ObjectIdentifier: java.lang.String toString()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.session.WebSession: void setCurrentLesson(org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.text.DigitList: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String nextFieldName()>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.AsciiDoctorTemplateResolver asciiDoctorTemplateResolver(org.owasp.webgoat.i18n.Language)>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setOrder(java.lang.Integer)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.RegexpOptions: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder sender(java.lang.String)>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.hsqldb.persist.Cache$CachedObjectComparator: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaClass: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: boolean exists()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.database.base.SchemaObject: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
<org.hsqldb.types.CharacterType: java.lang.String convertJavaTimeObject(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webwolf.user.WebGoatUser: boolean isAccountNonLocked()>-><org.springframework.security.core.userdetails.User: boolean isAccountNonLocked()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.idor.UserProfile: java.util.Map profileToMap()>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.Crypto: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>-><java.lang.String: byte[] getBytes()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: boolean check_text(java.lang.String,java.lang.String)>-><java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Hash: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.ZoneId: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.DigitList: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.owasp.webgoat.xxe.Comment: java.lang.String getText()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><org.springframework.core.io.ClassPathResource: void <init>(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.stored.CrossSiteScriptingStored: java.lang.String getTitle()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.logging.Level: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.session.Course: java.lang.Integer lambda$getTotalOfAssignments$2(java.lang.Integer,org.owasp.webgoat.lessons.Lesson)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.springframework.util.LinkedMultiValueMap: int size()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.representations.ExceptionRegion: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webwolf.user.WebGoatUser: boolean isAccountNonExpired()>-><org.springframework.security.core.userdetails.User: boolean isAccountNonExpired()>
<java.util.concurrent.CopyOnWriteArraySet: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.springframework.web.servlet.LocaleResolver localeResolver()>-><org.springframework.web.servlet.i18n.SessionLocaleResolver: void <init>()>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.owasp.webgoat.i18n.Messages: java.util.Properties getMessages()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.net.ProgressSource: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.Expression: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setExpiration(java.util.Date)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.session.Course: void <init>(java.util.List)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getContents()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder title(java.lang.String)>
<org.owasp.webwolf.mailbox.Email: java.lang.String toString()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getContents()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.util.Base64$Encoder: byte[] encode(byte[])>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.StringBuffer getRequestURL()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.text.SimpleDateFormat: void <init>(java.lang.String)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.UnboxedFloat: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.HashMap$Node: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.AsString: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email$EmailBuilder time(java.time.LocalDateTime)>
<com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.MBeanAttributeInfo: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.owasp.webwolf.mailbox.Email: java.lang.String toString()>-><org.owasp.webwolf.mailbox.Email: java.lang.Long getId()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean canEqual(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity ok(java.lang.Object)>
<org.owasp.webgoat.i18n.Language: void <init>(org.springframework.web.servlet.LocaleResolver)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webwolf.MvcConfiguration: void createDirectory()>-><java.io.File: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCacheable(boolean)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.xss.Comment: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.HintService: org.owasp.webgoat.lessons.Hint lambda$createHint$2(org.owasp.webgoat.lessons.Assignment,java.lang.String)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getPath()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean add(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.challenges.Flag: void lambda$initFlags$0(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nullOrToString(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.controller.StartLesson: boolean lambda$lessonPage$0(java.lang.String,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.lang.String getId()>
<org.owasp.webgoat.session.Course: java.lang.Integer lambda$getTotalOfAssignments$2(java.lang.Integer,org.owasp.webgoat.lessons.Lesson)>-><java.lang.Integer: int intValue()>
<org.owasp.webwolf.requests.Requests: void <init>(org.owasp.webwolf.requests.WebWolfTraceRepository,com.fasterxml.jackson.databind.ObjectMapper)>-><java.lang.Object: void <init>()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webwolf.mailbox.Email: java.lang.String getTime()>-><java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector: java.util.Iterator iterator()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.owasp.webgoat.xxe.Comment: void setDateTime(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer permitAll()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><org.springframework.http.ResponseEntity: void <init>(java.lang.Object,org.springframework.http.HttpStatus)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.license.Edition: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.i18n.PluginMessages: java.lang.String getMessage(java.lang.String,java.lang.Object[])>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(java.lang.String,java.lang.String)>-><java.util.Base64: java.util.Base64$Encoder getEncoder()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.format.InternalParserDateTimeParser: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: java.lang.String getOutput()>
<org.owasp.webwolf.MvcConfiguration: void addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)>-><org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry: org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration addResourceHandler(java.lang.String[])>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>-><javax.xml.bind.DatatypeConverter: java.lang.String printHexBinary(byte[])>
<org.owasp.webgoat.challenges.Email: org.owasp.webgoat.challenges.Email$EmailBuilder builder()>-><org.owasp.webgoat.challenges.Email$EmailBuilder: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile)>-><org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile: java.lang.String getOriginalFilename()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Hashtable: java.lang.String toString()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: java.util.Optional getLessonTracker(java.lang.String)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.support.EncodedResource: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setAudience(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.ZoneOffset: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.io.BufferedReader: void <init>(java.io.Reader)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.LambdaFormEditor$Transform: java.lang.String toString()>
<org.owasp.webgoat.service.ReportCardService$ReportCard: void <init>(org.owasp.webgoat.service.ReportCardService)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.MessageDigest: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><io.jsonwebtoken.impl.JwtMap: int size()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Self: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.javasupport.JavaAccessibleObject: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.EnumMap$1: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: void addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)>-><org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration: org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration addResourceLocations(java.lang.String[])>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.runtime.ivars.VariableAccessor: java.lang.String toString()>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><io.jsonwebtoken.impl.JwtMap: int size()>
<org.owasp.webgoat.AsciiDoctorTemplateResolver: void <clinit>()>-><org.asciidoctor.Asciidoctor$Factory: org.asciidoctor.Asciidoctor create()>
<org.owasp.webwolf.WebSecurityConfig: void configureGlobal(org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder)>-><org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder: org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer userDetailsService(org.springframework.security.core.userdetails.UserDetailsService)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.FrozenString: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.IntervalMonthData: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubyFile: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String toHex(byte[])>-><java.lang.Integer: java.lang.String toHexString(int)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: void <clinit>()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.java.proxies.ArrayJavaProxy: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.users.WebGoatUser: void createUser()>-><org.owasp.webgoat.users.WebGoatUser: java.util.Collection getAuthorities()>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getName()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.web.util.HierarchicalUriComponents: void lambda$getQuery$0(java.lang.StringBuilder,java.lang.String,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: void <init>(javax.sql.DataSource)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.zip.ZipEntry: java.lang.String toString()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: java.util.Optional getLessonTracker(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.Float: float parseFloat(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.Color: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.constants.platform.RLIMIT: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: javax.tools.SimpleJavaFileObject getJavaFileContentsAsString(java.lang.String)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$JavaObjectFromString: void <init>(org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b,java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.LessonTemplateResolver lessonTemplateResolver(org.springframework.core.io.ResourceLoader)>-><org.owasp.webgoat.LessonTemplateResolver: void <init>(org.springframework.core.io.ResourceLoader)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry: java.lang.Object antMatchers(java.lang.String[])>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xxe.XXE: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<org.springframework.web.util.UriUtils: java.lang.String lambda$encodeUriVariables$1(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.InputStreamResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.cglib.core.ClassInfo: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.Boolean: boolean booleanValue()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.io.xml.DomDriver: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><java.net.URI: java.lang.String getQuery()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.awt.Color: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toUpperCase()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.factory.support.NullBean: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$1: void <init>(org.owasp.webgoat.jwt.JWTFinalEndpoint,java.lang.String[])>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.io.ObjectStreamClass: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.HashMap$Node: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.javasupport.JavaArray: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<java.util.EnumMap: int entryHashCode(int)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><java.util.Base64$Encoder: byte[] encode(byte[])>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <clinit>()>-><java.util.Random: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.atomic.AtomicReference: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.idor.UserProfile: int getRole()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Properties getProperties()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Period: java.lang.String toString()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><java.io.File: java.io.File getParentFile()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: boolean attemptWasMade(java.io.File,java.io.File)>-><java.io.File: java.lang.String getCanonicalPath()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: void <init>(org.owasp.webgoat.i18n.PluginMessages)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.DeserializationFeature)>
<org.owasp.webgoat.users.UserTracker: void reset(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.users.LessonTracker: void reset()>
<org.owasp.webgoat.lessons.CourseConfiguration: boolean methodReturnTypeIsOfTypeAttackResult(java.lang.reflect.Method)>-><java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonInfoService: org.owasp.webgoat.lessons.LessonInfoModel getLessonInfo()>-><org.owasp.webgoat.lessons.LessonInfoModel: void <init>(java.lang.String,boolean,boolean,boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.format.InternalParserDateTimeParser: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity body(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.template.LessonTemplate: java.lang.String getTitle()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<java.util.TreeMap$Entry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,byte[],int,int)>-><org.owasp.webgoat.challenges.challenge7.MD5: int[] decode(byte[],int,int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.owasp.webgoat.sql_injection.mitigation.Servers$Server: void <init>(org.owasp.webgoat.sql_injection.mitigation.Servers,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.security.MessageDigest: void update(byte[])>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.UnsynchronizedAppenderBase: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><org.springframework.security.core.context.SecurityContextImpl: org.springframework.security.core.Authentication getAuthentication()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><java.lang.String: java.lang.String toUpperCase()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry permitAll()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.MemberName: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.IsoFields$Field$3: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.session.Course course()>-><org.owasp.webgoat.session.Course: void <init>(java.util.List)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><io.jsonwebtoken.impl.AbstractTextCodec: java.lang.String decodeToString(java.lang.String)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.session.Course: java.util.List getLessons()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.net.URL: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.io.File: boolean mkdir()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.Era: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.thymeleaf.standard.expression.RestrictedRequestAccessUtils$RestrictedRequestWrapper: java.lang.String getQueryString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.client_side_filtering.ClientSideFiltering: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.springframework.web.util.UriUtils: void lambda$encodeUriVariables$0(java.util.Map,java.lang.String,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.security.Provider: java.util.Collection values()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: java.lang.String extractUsername(java.lang.String)>-><java.lang.String: int indexOf(java.lang.String)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.springframework.web.servlet.ViewResolver viewResolver(org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setCharacterEncoding(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: boolean hasId(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.util.DerValue: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.net.URI: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.RowType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionMitigations: java.lang.String getTitle()>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.security.Principal getUserPrincipal()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.ParsePosition: java.lang.String toString()>
<org.owasp.webwolf.user.UserService: void addUser(java.lang.String,java.lang.String)>-><org.owasp.webwolf.user.WebGoatUser: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder signWith(io.jsonwebtoken.SignatureAlgorithm,java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.sql.DriverInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.AsciiDoctorTemplateResolver: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toUpperCase()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder assignment(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.zip.ZipEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.EnumMap: java.util.Collection values()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.LocalDate: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.Spread: java.lang.String toString()>
<org.owasp.webgoat.lessons.Assignment: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: void <clinit>()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.TemporaryVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUpload: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: void <init>(java.lang.Class,java.lang.Class,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><java.lang.System: long currentTimeMillis()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity body(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.ScopeModule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Locale: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.CrossSiteScripting: java.lang.String getTitle()>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwt: java.lang.Object getBody()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xss.Comment: void setUser(java.lang.String)>
<java.util.AbstractSet: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.IsoFields$Field$1: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.TemporaryVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Label: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String toString()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getSender()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><javax.xml.bind.DatatypeConverter: java.lang.String printHexBinary(byte[])>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.io.FileOutputStream: void <init>(java.io.File)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,byte[],int,int)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setIssuer(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Messages messageSource(org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setFallbackToSystemLocale(boolean)>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.users.UserValidator: void <init>(org.owasp.webgoat.users.UserRepository)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Clock$SystemClock: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.format.InternalParserDateTimeParser: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.ArrayList$SubList: java.lang.Object get(int)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.springframework.http.ResponseEntity ok(java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder ok()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.Symbol: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.IntervalMonthData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.WebGoatUser: java.util.Collection getAuthorities()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: void <init>(java.lang.String)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionAdvanced: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.client_side_filtering.ClientSideFiltering: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.FilterReturn: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKey(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.SValue: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.ClaimJwtException: io.jsonwebtoken.Claims getClaims()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.dirgra.Vertex: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.sql.DriverInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.DatabaseInitialization: void <init>(javax.sql.DataSource,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.owasp.webgoat.i18n.PluginMessages: java.util.Properties getMessages()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UndefinedValue: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.Throwable: void printStackTrace()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ArrayBlockingQueue: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: void <init>()>-><java.lang.Object: void <init>()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.path_traversal.PathTraversal: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><java.lang.String: int hashCode()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: boolean add(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.file.OpenOption[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.HsqlNameManager$HsqlName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.String toString()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webwolf.mailbox.Email: java.lang.String getSummary()>-><java.lang.String: java.lang.String substring(int,int)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder attemptWasMade()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.users.UserForm: java.lang.String getUsername()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.session.Course: java.util.List getLessons(org.owasp.webgoat.lessons.Category)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><org.thymeleaf.standard.expression.RestrictedRequestAccessUtils$RestrictedRequestWrapper: java.lang.String getParameter(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: void shutdown()>-><org.hsqldb.server.Server: void shutdownCatalogs(int)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyLocalJumpError$Reason: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.Cookie[] getCookies()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Formatter$FixedString: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><java.lang.String: char charAt(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.awt.Font: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.status.StatusBase: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void <init>()>-><javax.servlet.http.HttpServlet: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.naming.NamingException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge5.Challenge5: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authorizeRequests()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getColor()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.Operation: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.MD5: void <init>()>-><org.owasp.webgoat.challenges.challenge7.MD5: void reset()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.headius.invokebinder.Signature: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.ChronoField: java.lang.String toString()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.sql.Timestamp: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: boolean isLessonCompleted()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: java.lang.String getFeedback()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.lib.tar.RB: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <clinit>()>-><java.util.Random: int nextInt(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Long: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.ffi.Platform$OS: java.lang.String toString()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder assignment(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><java.lang.String: java.lang.String toLowerCase()>
<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.database.base.Schema: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.util.KeyValuePair: java.lang.String toString()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration configuration(java.util.Map)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><java.lang.String: int indexOf(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.EnumMap: int size()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.javasupport.binding.AssignedName: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge7.Challenge7: java.lang.String getTitle()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.owasp.webgoat.users.UserService: org.owasp.webgoat.users.WebGoatUser loadUserByUsername(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.IsoFields$Unit: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder assignment(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getTitle()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.BlobDataID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><java.util.UUID: java.util.UUID randomUUID()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.StringLiteral: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>-><com.beust.jcommander.internal.Lists: java.util.List newArrayList()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.util.Set keySet()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.TryFinally: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.font.EAttribute: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.String toString()>
<org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.HashMap: java.util.Collection values()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.font.EAttribute: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Zxcvbn: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>
<org.springframework.web.util.UriUtils: java.lang.String lambda$encodeUriVariables$1(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.io.InputStreamResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.servlet.http.Cookie: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.AbstractMap$SimpleEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: void lambda$createNewUser$0(org.owasp.webgoat.xxe.Comment)>-><org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.constants.platform.windows.LastError: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.csrf.CSRF: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjection: java.lang.String getTitle()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList: void <init>()>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getTime()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.beans.FeatureDescriptor: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.stream.Stream lambda$createAssignmentHints$1(java.util.List)>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.status.StatusBase: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><sun.net.www.http.HttpCaptureInputStream: void close()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.SimpleType: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>-><java.security.MessageDigest: byte[] digest()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getPrincipal()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><org.springframework.http.ResponseEntity: void <init>(java.lang.Object,org.springframework.http.HttpStatus)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.ResultSetMetaData getMetaData()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.core.io.ClassPathResource git()>-><org.springframework.core.io.ClassPathResource: void <init>(java.lang.String)>
<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: boolean hasId(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.slf4j.event.Level: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setSuffix(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Symbol: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Challenge8: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.jruby.RubyHash: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.provider.PolicyFile$PolicyEntry: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>
<org.owasp.webgoat.users.UserTracker: boolean lambda$getLessonTracker$1(java.lang.String,org.owasp.webgoat.users.LessonTracker)>-><org.owasp.webgoat.users.LessonTracker: java.lang.String getLessonName()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.net.www.http.KeepAliveKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.spi.Provider: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.net.InetAddress: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.service.LessonTitleService: void <init>(org.owasp.webgoat.session.WebSession)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void fakeClickingLinkEmail(java.lang.String,java.lang.String)>-><org.springframework.http.HttpEntity: void <init>(org.springframework.util.MultiValueMap)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.database.base.Schema: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder claim(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.session.Course: java.util.List getLessons(org.owasp.webgoat.lessons.Category)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.Arity: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.jruby.RubyHash: int size()>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: boolean lambda$get$0(java.lang.String,org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.lang.Math: double ceil(double)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String concat(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.ResultSetMetaData getMetaData()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.constants.platform.OpenFlags: java.lang.String toString()>
<org.springframework.web.util.HierarchicalUriComponents: void lambda$getQuery$0(java.lang.StringBuilder,java.lang.String,java.util.List)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry: java.lang.Object antMatchers(java.lang.String[])>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.Throwable: void printStackTrace()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String getAssignmentPath()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.TreeMap: java.util.Collection values()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Instant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>-><org.springframework.web.servlet.i18n.SessionLocaleResolver: java.util.Locale resolveLocale(javax.servlet.http.HttpServletRequest)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.ProtectionDomain: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.BoundMethodHandle$SpeciesData: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>
<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.ImmutableDescriptor: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.Insert: java.lang.String toString()>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubyString: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UnboxedFixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xxe.SimpleXXE: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Boolean: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanConstructorInfo: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><java.net.URI: java.lang.String getPath()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.header.Header: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.servlet.http.HttpServletResponseWrapper: void setStatus(int)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Short: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.users.UserService: org.owasp.webgoat.users.WebGoatUser loadUserByUsername(java.lang.String)>-><org.springframework.security.core.userdetails.UsernameNotFoundException: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge8.Challenge8: java.lang.String getTitle()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>-><org.apache.commons.lang3.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>
<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.locks.ReentrantLock: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: java.util.List compileFromString(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.LabelDebugger: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setPrefix(java.lang.String)>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.owasp.webgoat.users.WebGoatUser: java.lang.String getUsername()>
<org.owasp.webgoat.service.RestartLessonService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.flywaydb.core.Flyway)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><io.jsonwebtoken.impl.JwtMap: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.AsciiDoctorTemplateResolver asciiDoctorTemplateResolver(org.owasp.webgoat.i18n.Language)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCacheable(boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.PermissionCollection: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String toString()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getRecipient()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void error(java.lang.Object,java.lang.Throwable)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.SubList$1: java.lang.Object next()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: java.lang.Long getId()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void lambda$vote$0(org.owasp.webgoat.jwt.votes.Vote)>-><org.owasp.webgoat.jwt.votes.Vote: void incrementNumberOfVotes(int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.net.www.protocol.https.HttpsURLConnectionImpl: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.runtime.callsite.CacheEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.net.InetSocketAddress: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.Provider$Service: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.security.Signature: void initVerify(java.security.PublicKey)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.xml.sax.SAXException: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$SettingsParser: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfLessonsSolved()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.Row: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.session.Course: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.mitigation.CrossSiteScriptingMitigation: java.lang.String getTitle()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.InjectionPoint: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Long: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer reverse()>
<org.owasp.webgoat.HammerHead: org.springframework.web.servlet.ModelAndView attack(org.springframework.security.core.Authentication,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.RestartLessonService: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.joda.time.DateTime: org.joda.time.DateTime now()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.String toString()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.sun.beans.WildcardTypeImpl: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubySymbol: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.UnsupportedDateTimeField: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.util.Comparator: java.util.Comparator comparingLong(java.util.function.ToLongFunction)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.net.URL: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer loginPage(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.LocalVariable: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Optional: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder recipient(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyHash: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonTitleService: java.lang.String showPlan()>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity body(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: void lambda$course$1(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: void setAssignments(java.util.List)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.lang.Long: int intValue()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><java.util.Date: void <init>(long)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Boolean: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.lang.Boolean: boolean booleanValue()>
<org.owasp.webwolf.user.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.owasp.webwolf.user.UserForm: java.lang.String getMatchingPassword()>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><org.joda.time.base.AbstractInstant: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(byte[],int,int)>-><org.owasp.webgoat.challenges.challenge7.MD5: void update(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,byte[],int,int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.dataflow.DataFlowProblem: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.dataflow.DataFlowProblem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.LessonMenuItem: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.AsciiDoctorTemplateResolver asciiDoctorTemplateResolver(org.owasp.webgoat.i18n.Language)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<java.util.EnumMap: int entryHashCode(int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String genUserHash(java.lang.String,java.lang.String)>-><java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtBuilder builder()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.owasp.webgoat.users.WebGoatUser: java.lang.String getPassword()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity ok(java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.owasp.webgoat.xxe.Comment: void setUser(java.lang.String)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.Collections$SynchronizedMap: void putAll(java.util.Map)>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.Signature: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.net.URI: void <init>(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.UserProfile: void <init>(java.lang.String)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.PropertyName: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List getHints(java.lang.Class)>-><java.util.Collections: java.util.List emptyList()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.representations.BasicBlock: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.SValue: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getName()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.Permission: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Short: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String genUserHash(java.lang.String,java.lang.String)>-><java.security.MessageDigest: byte[] digest(byte[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.ObjectName: java.lang.String toString()>
<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.SimpleType: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: void <clinit>()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.users.Scoreboard: java.lang.String toLessonTitle(java.lang.String)>-><org.owasp.webgoat.i18n.PluginMessages: java.lang.String getMessage(java.lang.String,java.lang.String,java.lang.Object[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Short: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.runtime.Arity: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Long: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: java.lang.String toString()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.types.IntervalMonthData: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.Users$3: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.lang.Throwable: java.lang.Throwable getCause()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getContents()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.csrf.Review: void setDateTime(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRF: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.StandardError: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyHash: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.IdentityHashMap: int size()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.constants.platform.Signal: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.Collections$SynchronizedCollection: boolean containsAll(java.util.Collection)>
<org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webwolf.user.UserService: void addUser(java.lang.String,java.lang.String)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.WeakHashMap: java.util.Collection values()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Byte: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><java.util.HashSet: boolean add(java.lang.Object)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: boolean attemptWasMade(java.io.File,java.io.File)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.BinaryData: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: org.owasp.webwolf.requests.Requests$Tracert lambda$get$1(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.springframework.boot.actuate.trace.http.HttpTrace: java.time.Instant getTimestamp()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><java.time.LocalDateTime: java.time.LocalDateTime now()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.Self: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Array: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.javasupport.JavaConstructor: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.util.List getAssignments()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void <init>()>-><java.util.HashMap: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.concurrent.ConcurrentHashMap: int size()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.DateTimeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.X509CRLEntryImpl: java.lang.String toString()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: boolean methodReturnTypeIsOfTypeAttackResult(java.lang.reflect.Method)>-><java.lang.reflect.Method: java.lang.Class getReturnType()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyMatchData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.hsqldb.types.CharacterType: java.lang.String convertJavaTimeObject(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: boolean checkIfLinkIsFromTom(java.lang.String)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.springframework.http.MediaType: org.springframework.http.MediaType parseMediaType(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.util.RawValue: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$UnmodifiableMap: java.util.Collection values()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$JavaObjectFromString: void <init>(org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b,java.lang.String,java.lang.String)>-><java.net.URI: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectInputStream: void close()>
<org.owasp.webgoat.crypto.EncodingAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<org.hsqldb.types.Type: int hashCode(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.impl.DefaultClaims: io.jsonwebtoken.Claims setIssuedAt(java.util.Date)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder contents(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><java.util.ArrayList: boolean contains(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.UTCDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.Course: int getTotalOfAssignments()>-><java.util.Collection: java.util.stream.Stream stream()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.ZoneOffsetTransition: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry: org.springframework.security.config.annotation.web.HttpSecurityBuilder and()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer: org.springframework.security.config.annotation.web.HttpSecurityBuilder disable()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.math.BigInteger: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.MethodHandle: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.IRException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.Fold: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.lessons.Assignment lambda$createAssignment$2(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.lessons.CourseConfiguration: java.util.List getHints(java.lang.Class)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.Instant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.users.LessonTracker: void reset()>-><java.util.HashSet: void clear()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubySymbol: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setAddress(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder sender(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><org.owasp.webwolf.mailbox.Email: java.lang.Long getId()>
<org.owasp.webgoat.challenges.Flag: void lambda$initFlags$0(int)>-><java.util.UUID: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.UndefinedValue: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.javasupport.JavaUtil$JavaConverter: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.javasupport.JavaObject: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: void setLink(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.runtime.Frame: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.asm.Label: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.persist.CachedObjectBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson3: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.Expression: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$4: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Short: java.lang.String toString()>
<org.owasp.webgoat.WebSecurityConfig: org.springframework.security.authentication.AuthenticationManager authenticationManager()>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: org.springframework.security.authentication.AuthenticationManager authenticationManager()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authorizeRequests()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setClaims(io.jsonwebtoken.Claims)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Messages messageSource(org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setBasename(java.lang.String)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><org.owasp.webwolf.mailbox.Email: java.lang.String getContents()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setDaemon(boolean)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: boolean checkIfLinkIsFromTom(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(int)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.jruby.ir.operands.LocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ast.SymbolNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer: org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer authenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.net.www.http.HttpClient: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users: void <init>(org.owasp.webgoat.session.UserSessionData,javax.sql.DataSource)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.UnsupportedDurationField: java.lang.String toString()>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><org.flywaydb.core.Flyway: void clean()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.jsoup.helper.ChangeNotifyingArrayList: boolean add(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.BinaryData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.XStream: java.lang.Object fromXML(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.Challenge7: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.springframework.http.ResponseEntity ok(java.lang.String)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.MemberName: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.Email: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Thread: java.lang.String toString()>
<org.owasp.webgoat.users.LessonTracker: void <init>()>-><java.lang.Object: void <init>()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><sun.misc.CompoundEnumeration: java.lang.Object nextElement()>
<org.owasp.webgoat.users.UserTracker: boolean lambda$getLessonTracker$0(org.owasp.webgoat.lessons.Lesson,org.owasp.webgoat.users.LessonTracker)>-><org.owasp.webgoat.lessons.Lesson: java.lang.String getId()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectInputStream: void <init>(java.io.InputStream)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Instant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList$1: java.lang.Object next()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebSecurityConfig: void <init>(org.owasp.webwolf.user.UserService)>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.jruby.util.collections.ConcurrentWeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.WeakHashMap$Entry: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.session.Course: java.util.List getLessons(org.owasp.webgoat.lessons.Category)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: org.springframework.security.crypto.password.NoOpPasswordEncoder passwordEncoder()>-><org.springframework.security.crypto.password.NoOpPasswordEncoder: org.springframework.security.crypto.password.PasswordEncoder getInstance()>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><java.util.Vector: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.apache.commons.io.FileUtils: java.lang.String byteCountToDisplaySize(long)>
<org.owasp.webgoat.challenges.challenge7.MD5: void reset()>-><org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void reset()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><org.hsqldb.jdbc.JDBCResultSet: void beforeFirst()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjection: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void fakeClickingLinkEmail(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webwolf.user.WebGoatUser: void <init>(java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: void <init>(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.LocalDateTime: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webwolf.requests.WebWolfTraceRepository: void <init>()>-><com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.CurrentScope: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.util.KCode: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toLowerCase()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.FileServer: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.Period: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.subst.Token: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.AttackTimes$CrackTimeSeconds: double getOnlineNoThrottling10perSecond()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email build()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><java.nio.file.Files: java.nio.file.Path createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.LocalDate: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.io.FileOutputStream: void <init>(java.io.File)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List getHints(java.lang.Class)>-><java.util.List: java.util.List of(java.lang.Object[])>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Hint: void <init>(java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><javax.servlet.http.HttpServletRequestWrapper: boolean isRequestedSessionIdFromURL()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Class: java.lang.ClassLoader getClassLoader()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Float: java.lang.String toString()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile: byte[] getBytes()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.i18n.PluginMessages: java.util.Properties getMessages()>-><org.springframework.context.support.ReloadableResourceBundleMessageSource: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder getMergedProperties(java.util.Locale)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService$LessonOverview: void <init>(org.owasp.webgoat.lessons.Assignment,java.lang.Boolean)>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.joran.spi.ElementPath: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity getVotes()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$1: java.lang.Object next()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.springframework.web.util.UriUtils: void lambda$encodeUriVariables$0(java.util.Map,java.lang.String,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity$BodyBuilder contentType(org.springframework.http.MediaType)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.ser.BeanSerializer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.DurationFieldType: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.CodeSigner: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.springframework.core.io.buffer.LimitedDataBufferList: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DigitList: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Symbol: java.lang.String toString()>
<org.owasp.webgoat.chrome_dev_tools.ChromeDevTools: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.HashMap: java.util.Set entrySet()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.springframework.util.FileCopyUtils: byte[] copyToByteArray(java.io.InputStream)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Vector: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.util.Random: int nextInt(int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Collections$SynchronizedCollection: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Optional: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getResetLink()>
<org.owasp.webgoat.xxe.SimpleXXE: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.owasp.webgoat.xxe.Comment: java.lang.String getText()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Splat: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.IRScope: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: java.lang.String toString()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flywayLessons()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.Flyway load()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.util.concurrent.ForkJoinWorkerThread$InnocuousForkJoinWorkerThread: java.lang.ClassLoader getContextClassLoader()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.access.SecurityConfig: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.TimeData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.RecursiveComparator$Pair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String)>-><org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String,java.lang.String,java.util.List)>
<org.jruby.ir.operands.ClosureLocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.Provider$UString: java.lang.String toString()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.JavaObjectData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Optional: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.XStream: void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.FrozenString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.ArrayType: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.ChronoUnit: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getTitle()>
<org.owasp.webgoat.users.UserTracker: void reset(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.asciidoc.EnvironmentExposure: void <init>()>-><java.lang.Object: void <init>()>
<org.hsqldb.persist.Cache$CachedObjectComparator: int hashCode(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector: java.util.Iterator iterator()>
<org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.web.util.HierarchicalUriComponents: void lambda$getQuery$0(java.lang.StringBuilder,java.lang.String,java.util.List)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.security.Provider: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List lessonOverview()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyParser$DomainEntry: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getPrincipal()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.io.FileInputStream: void <init>(java.io.File)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: int length()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><java.util.UUID: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer usernameParameter(java.lang.String)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><java.time.Instant: java.time.Instant plusSeconds(long)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<org.owasp.webgoat.xxe.Comment: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaUtil$JavaConverter: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: org.owasp.webwolf.mailbox.Email$EmailBuilder builder()>-><org.owasp.webwolf.mailbox.Email$EmailBuilder: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView illegalCall()>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.jruby.org.objectweb.asm.tree.MethodNode$1: boolean add(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: void lambda$assignmentSolved$1(org.owasp.webgoat.lessons.Assignment)>-><java.util.HashSet: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Fixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.util.TypeKey: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder builder()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.WeakHashMap: int size()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.slf4j.event.Level: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix: org.springframework.http.ResponseEntity getProfilePicture()>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.stream.IntPipeline: int sum()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.Email: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.CompositeType: java.lang.String toString()>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.String convertJavaTimeObject(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><java.lang.Throwable: void printStackTrace()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKey(java.lang.String)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard: java.lang.String toLessonTitle(java.lang.String)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder ok()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(java.lang.String,java.lang.String)>-><java.lang.String: byte[] getBytes()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.beans.FeatureDescriptor: java.lang.String toString()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder attemptWasMade()>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><org.owasp.webgoat.challenges.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xss.Comment: void setDateTime(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Optional: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.stream.Nodes$FixedNodeBuilder: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.HeadersConfigurer headers()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.security.Signature: boolean verify(byte[])>
<org.owasp.webgoat.missing_ac.Users$2: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.Arrays$ArrayList: java.lang.Object get(int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanInfo: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.IRScope: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.asm.Type: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.Period: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.owasp.webgoat.missing_ac.Users$6: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$SynchronizedCollection: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.ssrf.SSRF: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.joda.time.base.AbstractInstant: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setSubject(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><org.owasp.webgoat.service.LabelDebugService: java.util.Map createResponse(java.lang.Boolean)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webgoat.users.WebGoatUser: boolean isAccountNonLocked()>-><org.springframework.security.core.userdetails.User: boolean isAccountNonLocked()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.csrf.Review: void setStars(java.lang.Integer)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><java.io.PrintWriter: void println(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Calendar: java.lang.String toString()>
<org.owasp.webwolf.requests.WebWolfTraceRepository: void <init>()>-><com.google.common.collect.EvictingQueue: com.google.common.collect.EvictingQueue create(int)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString()>-><org.owasp.webgoat.challenges.challenge7.MD5: byte[] getHash()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyMatchData: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.XStream: void setClassLoader(java.lang.ClassLoader)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.password_reset.TriedQuestions: void incr(java.lang.String)>-><java.util.HashSet: boolean add(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.Spread: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Character: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyModule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flywayLessons()>-><org.flywaydb.core.Flyway: org.flywaydb.core.api.configuration.FluentConfiguration configure()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.xss.Comment parseJson(java.lang.String)>-><org.owasp.webgoat.xss.Comment: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.Servers$Server: void <init>(org.owasp.webgoat.sql_injection.mitigation.Servers,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.IsoFields$Field$3: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.users.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$3: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: java.util.List usersService(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><java.util.Optional: java.lang.Object get()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.joran.spi.ConsoleTarget: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.api.Location: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer deleteCookies(java.lang.String[])>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><org.jruby.RubyHash: void putAll(java.util.Map)>
<org.owasp.webwolf.user.WebGoatUser: boolean isCredentialsNonExpired()>-><org.springframework.security.core.userdetails.User: boolean isCredentialsNonExpired()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.client_side_filtering.ClientSideFiltering: java.lang.String getTitle()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.X509CRLEntryImpl: java.lang.String toString()>
<org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail build()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: void <init>(java.time.LocalDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void fakeClickingLinkEmail(java.lang.String,java.lang.String)>-><org.springframework.web.client.RestTemplate: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.base.AbstractDateTime: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>-><org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect: void <init>()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.net.URI: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString(java.lang.String)>-><org.owasp.webgoat.challenges.challenge7.MD5: void <init>()>
<java.util.Hashtable: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void <init>(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.LambdaForm: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String getContents()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flywayLessons()>-><java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$6: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.javasupport.JavaObject: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getSender()>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><java.util.Optional: java.lang.Object get()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.HeadersConfigurer: org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$CacheControlConfig cacheControl()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.AbstractList: boolean add(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.OperandType: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.charset.CoderResult: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Float: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.LinkedList: boolean add(java.lang.Object)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><org.owasp.webwolf.mailbox.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getUserId()>
<org.owasp.webgoat.crypto.XOREncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.xss.Comment: void <init>(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.String: java.lang.String toLowerCase()>
<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge7.Challenge7: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<org.springframework.web.util.UriUtils: java.lang.String lambda$encodeUriVariables$1(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Vector: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.CalendarDate: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.PatternEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.service.SessionService: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.javasupport.JavaClass: boolean equals(java.lang.Object)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><javax.servlet.ServletResponseWrapper: void setContentType(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UnboxedBoolean: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><java.time.Instant: java.time.Instant now()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.StringLiteral: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Boolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.Row: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webwolf.user.UserForm: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.session.WebSession: void <init>()>-><org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getPrincipal()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getName()>
<org.owasp.webgoat.controller.StartLesson: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.session.Course)>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><org.jruby.RubyHash: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.HashMap: int size()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: java.lang.String getShortSender()>-><java.lang.String: int indexOf(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.runtime.backtrace.RubyStackTraceElement: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.ScopeModule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.WebSession: void <init>()>-><java.lang.Object: void <init>()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Float: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.lessons.LessonMenuItem: void addChild(org.owasp.webgoat.lessons.LessonMenuItem)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.api.callback.Event: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Character$Subset: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jcodings.Encoding: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.dirgra.Vertex: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ast.Node: java.lang.String toString()>
<org.owasp.webgoat.i18n.Messages: java.util.Properties getMessages()>-><org.springframework.context.support.ReloadableResourceBundleMessageSource: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder getMergedProperties(java.util.Locale)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.util.List)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.web.servlet.view.RedirectView: void <init>(java.lang.String,boolean)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.AbstractList: boolean add(java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$Item: void <init>(org.owasp.webgoat.template.SampleAttack,java.lang.String,java.lang.String,double)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Vector: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.crypto.XOREncodingAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.runtime.IRReturnJump: java.lang.String toString()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.thoughtworks.xstream.io.path.Path: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.xxe.Comments: org.owasp.webgoat.xxe.Comment parseXml(java.lang.String)>-><javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Period: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: java.lang.Object get(int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><org.owasp.webwolf.mailbox.Email: java.lang.String getTime()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity getVotes()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Thread: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.AjaxAuthenticationEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>-><org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String,java.lang.String,java.util.List)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Duration: java.time.Duration ofDays(long)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFFeedback: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><java.lang.String: byte[] getBytes()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: java.lang.Object get(int)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.access.SecurityConfig: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.ResourceBundle$1: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.UUID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><javax.xml.bind.DatatypeConverter: java.lang.String printHexBinary(byte[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getPath()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$UnmodifiableMap: int size()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email$EmailBuilder contents(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.locale.provider.RuleBasedBreakIterator: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.CurrentScope: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.calendar.ZoneInfo: java.lang.String toString()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.net.SocketInputStream: void close()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.LandingPage: org.springframework.http.ResponseEntity lambda$ok$0(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder ok()>
<org.owasp.webwolf.user.UserService: void <init>(org.owasp.webwolf.user.UserRepository)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.database.base.Schema: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder title(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.regex.Pattern: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.MBeanNotificationInfo: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.owasp.webgoat.session.Course: int getTotalOfAssignments()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubySymbol: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: void <init>(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractMessageSource: void setParentMessageSource(org.springframework.context.MessageSource)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.HashMap: java.util.Collection values()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.PermissionCollection: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Vector$Itr: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><org.owasp.webgoat.session.LabelDebugger: void setEnabled(boolean)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.RDN: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer permitAll()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getSha256(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.deserialization.InsecureDeserialization: java.lang.String getTitle()>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.StringBuffer getRequestURL()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.springframework.util.FileSystemUtils: boolean deleteRecursively(java.io.File)>
<org.owasp.webwolf.user.WebGoatUser: void <init>(java.lang.String,java.lang.String)>-><org.owasp.webwolf.user.WebGoatUser: void createUser()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>
<org.owasp.webgoat.idor.UserProfile: void setProfileFromId(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.mitigation.CrossSiteScriptingMitigation: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><javax.sql.rowset.RowSetMetaDataImpl: int getColumnCount()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webwolf.requests.Requests: org.owasp.webwolf.requests.Requests$Tracert lambda$get$1(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.owasp.webwolf.requests.Requests$Tracert: void <init>(org.owasp.webwolf.requests.Requests,java.time.Instant,java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: javax.tools.SimpleJavaFileObject getJavaFileContentsAsString(java.lang.String)>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.math.BigDecimal: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>
<org.owasp.webgoat.users.Scoreboard: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.SymbolProc: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.IntervalMonthData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.AVA: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: void putAll(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Label: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.java.proxies.ArrayJavaProxy: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.users.LessonTracker: boolean isLessonSolved()>-><java.util.HashSet: int size()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.core.util.FastField: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.net.www.http.KeepAliveKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.StringJoiner: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.util.EnumMap)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.csrf.Review: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.io.File: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.UserProfile: java.util.Map profileToMap()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard: java.util.List getRankings()>-><org.owasp.webgoat.users.Scoreboard$Ranking: void <init>(org.owasp.webgoat.users.Scoreboard,java.lang.String,java.util.List)>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.i18n.PluginMessages: java.lang.String getMessage(java.lang.String,java.lang.Object[])>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.springframework.util.StringUtils: boolean isEmpty(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.jruby.ir.operands.LocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$SynchronizedMap: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwt: java.lang.Object getBody()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.atomic.AtomicBoolean: java.lang.String toString()>
<org.owasp.webgoat.jwt.votes.Vote: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)>-><java.lang.Object: void <init>()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.util.Collection values()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: void setName(java.lang.String)>
<org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>-><java.security.SecureRandom: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><ch.qos.logback.classic.Logger: void error(java.lang.String)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.service.HintService: java.util.stream.Stream lambda$createAssignmentHints$1(java.util.List)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.ByteArrayResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ByteArrayInputStream: void <init>(byte[])>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.password_reset.TriedQuestions: boolean isComplete()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.users.UserTracker: boolean lambda$numberOfAssignmentsSolved$2(java.lang.Boolean)>-><java.lang.Boolean: boolean booleanValue()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.missing_ac.Users$4: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.Vector: java.lang.Object get(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponents: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getMethod()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: void <clinit>()>-><com.beust.jcommander.internal.Maps: java.util.Map newHashMap()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.api.Location: java.lang.String toString()>
<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: boolean hasId(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.StringLiteral: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.HsqlNameManager$HsqlName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><javax.xml.xpath.XPathFactory: javax.xml.xpath.XPathFactory newInstance()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.http.HttpStatus: int value()>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.lessons.Assignment lambda$createAssignment$2(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getPath(java.lang.Class)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: boolean containsHeader(javax.servlet.http.HttpServletRequest)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void <init>(org.owasp.webgoat.challenges.challenge7.MD5)>-><org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void reset()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.asm.Type: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.NumberFormat: java.lang.String format(double)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Formatter$FormatSpecifier: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><java.util.Calendar: java.util.Calendar getInstance()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.http.HttpStatus: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: void addViewControllers(org.springframework.web.servlet.config.annotation.ViewControllerRegistry)>-><org.springframework.web.servlet.config.annotation.ViewControllerRegistration: void setViewName(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.Extension: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfLessonsSolved()>-><java.util.HashSet: java.util.Iterator iterator()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.Flyway load()>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><org.owasp.webwolf.mailbox.Email: java.lang.Long getId()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: java.util.Optional get(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.provider.PolicyFile$SelfPermission: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.secure_password.SecurePasswords: java.lang.String getTitle()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void <init>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: java.lang.String getMessage(java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.ImmutableDescriptor: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.validation.FieldError: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><sun.net.www.protocol.https.HttpsURLConnectionImpl: java.io.InputStream getInputStream()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.http.ResponseEntity lambda$sendEmail$0(org.owasp.webwolf.mailbox.Email)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><org.flywaydb.core.Flyway: org.flywaydb.core.api.configuration.FluentConfiguration configure()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.jruby.org.objectweb.asm.tree.MethodNode$1: boolean add(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.sql.Date: java.lang.String toString()>
<org.owasp.webgoat.users.Scoreboard: java.lang.String toLessonTitle(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><org.springframework.http.converter.json.MappingJacksonValue: void <init>(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><org.joda.time.base.AbstractInstant: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getSender()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.springframework.validation.BindException: void rejectValue(java.lang.String,java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><org.owasp.webgoat.challenges.Email: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.calendar.LocalGregorianCalendar$Date: java.lang.String toString()>
<org.springframework.web.util.UriComponents: java.lang.String getVariableValueAsString(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.internal.util.Pair: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.LandingPage: org.springframework.http.ResponseEntity lambda$ok$0(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.StringBuffer getRequestURL()>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: java.lang.String toString()>
<org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>-><java.security.spec.RSAKeyGenParameterSpec: void <init>(int,java.math.BigInteger)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webwolf.user.WebGoatUser: java.util.Collection getAuthorities()>-><org.owasp.webwolf.user.WebGoatUser: java.lang.String getRole()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.api.Location: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.springframework.validation.BindException: boolean hasErrors()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Hashtable$Entry: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.jsoup.helper.ChangeNotifyingArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email$EmailBuilder title(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.instructions.Instr: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArraySet: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flywayLessons()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration dataSource(javax.sql.DataSource)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.hsqldb.types.Type: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.ByteList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.LocalVariable: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.env.PropertySource: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: void <init>(java.lang.Class,java.lang.Class,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: int indexOf(java.lang.String)>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.ArrayList: java.lang.Object get(int)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.TabularType: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArraySet: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.NamedThreadLocal: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<java.util.AbstractList: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><org.owasp.webgoat.session.Course: java.util.List getLessons(org.owasp.webgoat.lessons.Category)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.DefaultSecurityFilterChain: java.lang.String toString()>
<org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: void login(java.lang.String,java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyFile$PolicyEntry: java.lang.String toString()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.AbstractMap: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.chrome_dev_tools.ChromeDevTools: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><java.io.File: boolean mkdirs()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.ByteBuffer: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.AbstractResource: java.lang.String toString()>
<org.owasp.webgoat.session.Course: int getTotalOfAssignments()>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xss.Comment: java.lang.String getText()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.HsqlException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: java.lang.String extractUsername(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Bignum: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.UnparseableExtension: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: java.lang.String toJsonString(org.springframework.boot.actuate.trace.http.HttpTrace)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubySymbol: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.tools.SimpleJavaFileObject: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$1: boolean hasNext()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><org.flywaydb.core.Flyway: int migrate()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.PluginMessages pluginMessages(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setBasenames(java.lang.String[])>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.crypto.SigningAssignment: java.lang.String getPrivateKey(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.crypto.CryptoUtil: java.lang.String getPrivateKeyInPEM(java.security.KeyPair)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.csrf.CSRFLogin: void markAssignmentSolvedWithRealUser(java.lang.String)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.owasp.webgoat.xxe.Comments: org.owasp.webgoat.xxe.Comment parseXml(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.LabelDebugService: void <init>(org.owasp.webgoat.session.LabelDebugger)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.xxe.Ping: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$InstantPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Boolean: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: void login(java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$JavaObjectFromString: void <init>(org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b,java.lang.String,java.lang.String)>-><javax.tools.SimpleJavaFileObject: void <init>(java.net.URI,javax.tools.JavaFileObject$Kind)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><java.io.InputStream: byte[] readAllBytes()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.reflect.annotation.TypeAnnotation: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.LinkedList: boolean add(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.logging.Level: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.AsciiDoctorTemplateResolver asciiDoctorTemplateResolver(org.owasp.webgoat.i18n.Language)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCharacterEncoding(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.lessons.Hint: int hashCode()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getHint()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.io.BufferedReader: void close()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.Collections: void sort(java.util.List)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.i18n.Messages: java.util.Properties getMessages()>-><org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.MethodType: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.users.RegistrationController: void <init>(org.owasp.webgoat.users.UserValidator,org.owasp.webgoat.users.UserService,org.springframework.security.authentication.AuthenticationManager)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.WrappedIRClosure: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.util.List)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.util.RawValue: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><java.lang.String: boolean endsWith(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getRecipient()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.UnboxedFixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.ScopeModule: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyHash$ConvertingEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Calendar: java.lang.String toString()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comment: void <init>(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.missing_ac.Users$1: void <init>(org.owasp.webgoat.missing_ac.Users,java.sql.SQLException)>-><java.sql.SQLException: int getErrorCode()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.lib.RefCapablePropertyResourceBundle: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.ObjectClass: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><org.jruby.runtime.ObjectSpace$ObjectGroup: java.lang.Object get(int)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: void <init>(java.time.LocalDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$SynchronizedMap: java.util.Collection values()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer defaultSuccessUrl(java.lang.String,boolean)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.Base64UrlCodec: java.lang.String encode(byte[])>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Byte: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.BlobDataID: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: org.owasp.webgoat.webwolf_introduction.Email build()>-><org.owasp.webgoat.webwolf_introduction.Email: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.java.proxies.ArrayJavaProxy: java.lang.String toString()>
<org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webwolf.user.UserForm: java.lang.String getUsername()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.ZonedDateTime: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.LessonTemplateResolver: void <init>(org.springframework.core.io.ResourceLoader)>-><java.util.Set: java.util.Set of(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity body(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<org.owasp.webgoat.challenges.challenge7.MD5: byte[] getHash()>-><org.owasp.webgoat.challenges.challenge7.MD5: byte[] encode(long)>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>-><java.util.Random: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.calendar.Era: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwt: java.lang.Object getBody()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>-><java.util.Set: java.util.Set of(java.lang.Object,java.lang.Object,java.lang.Object)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.missing_ac.Users$5: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.validation.FieldError: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Integer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Date: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: void <init>()>-><java.time.LocalDateTime: java.time.LocalDateTime now()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.String: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.cglib.core.MethodInfo: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: java.lang.String getShortSender()>-><java.lang.String: java.lang.String substring(int,int)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>-><org.thymeleaf.TemplateEngine: void setTemplateResolvers(java.util.Set)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.pkcs.PKCS9Attribute: java.lang.String toString()>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>-><org.thymeleaf.spring5.SpringTemplateEngine: void setEnableSpringELCompiler(boolean)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.locale.UnicodeLocaleExtension: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><sun.net.www.http.KeepAliveStream: void close()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.IRScope: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.TabularType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.PasswordReset: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>-><java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Class: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.URI: java.lang.String toString()>
<org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.jar.Attributes: java.util.Collection values()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.CodeSigner: java.lang.String toString()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: java.io.File[] listFiles(java.io.FileFilter)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ast.Node: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$EmptyMap: int size()>
<org.owasp.webgoat.WebSecurityConfig: void configureGlobal(org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder)>-><org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder: org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer userDetailsService(org.springframework.security.core.userdetails.UserDetailsService)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.xss.Comment parseJson(java.lang.String)>-><com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.ChronoUnit: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder builder()>-><org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.database.base.Schema: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Class: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.io.PrintStream: void println(java.lang.String)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.javasupport.JavaMethod: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.AbstractList: boolean add(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.CurrentScope: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.Vector: boolean add(java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard: java.util.List challengesSolved(org.owasp.webgoat.users.UserTracker)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.UnparseableExtension: java.lang.String toString()>
<org.owasp.webgoat.challenges.Flag: void initFlags()>-><java.util.stream.IntPipeline$Head: void forEach(java.util.function.IntConsumer)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.BuddhistCalendar: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.net.www.protocol.https.HttpsURLConnectionImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Zxcvbn: com.nulabinc.zxcvbn.Strength measure(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.util.ByteList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.io.File: java.lang.String getName()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.SymbolProc: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.auth_bypass.AuthBypass: java.lang.String getTitle()>
<org.owasp.webgoat.MvcConfiguration: void addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)>-><org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry: org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration addResourceHandler(java.lang.String[])>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: java.util.List compileFromString(java.lang.String)>-><javax.tools.DiagnosticCollector: java.util.List getDiagnostics()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.jdbc.DatabaseType: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.EnumMap: void putAll(java.util.Map)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile: java.lang.String getOriginalFilename()>
<org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>-><java.util.Collections: void reverse(java.util.List)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: boolean attemptWasMade(java.io.File,java.io.File)>-><java.io.File: java.io.File getParentFile()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.owasp.webgoat.service.HintService: java.util.stream.Stream lambda$createAssignmentHints$1(java.util.List)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void fakeClickingLinkEmail(java.lang.String,java.lang.String)>-><org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.owasp.webgoat.challenges.Email: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.zone.ZoneRules: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.DurationFieldType$StandardDurationFieldType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: boolean add(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Float: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><java.io.File: java.nio.file.Path toPath()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.jwt.JWT: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.ChronoField: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList: java.util.Iterator iterator()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.assignments.AttackResult: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String,boolean)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><java.lang.String: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSetMetaData: int getColumnCount()>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.sun.beans.WildcardTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.users.WebGoatUser: java.util.Collection getAuthorities()>-><org.owasp.webgoat.users.WebGoatUser: java.lang.String getRole()>
<org.jruby.util.collections.ConcurrentWeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.user.WebGoatUser: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: void <clinit>()>-><java.math.BigInteger: java.math.BigInteger valueOf(long)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.IdentityHashMap: void putAll(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.security.Principal getUserPrincipal()>
<org.owasp.webgoat.csrf.ForgedReviews: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.io.FileInputStream: void close()>
<org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>-><java.util.Random: int nextInt(int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(java.lang.String,java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionAC: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.passes.CompilerPass: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><java.util.Base64: java.util.Base64$Encoder getEncoder()>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.JavaObjectData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>-><com.beust.jcommander.internal.Lists: java.util.List newArrayList()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.ThreadGroup: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: java.lang.String toString()>
<org.owasp.webgoat.lessons.LessonMenuItemType: void <clinit>()>-><org.owasp.webgoat.lessons.LessonMenuItemType: void <init>(java.lang.String,int)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DateFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.base.AbstractDateTime: java.lang.String toString()>
<org.owasp.webgoat.users.LessonTracker: boolean lambda$getAssignment$0(java.lang.String,org.owasp.webgoat.lessons.Assignment)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getName()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Vector: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Hash: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests$Tracert: void <init>(org.owasp.webwolf.requests.Requests,java.time.Instant,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.users.Scoreboard$Ranking: void <init>(org.owasp.webgoat.users.Scoreboard,java.lang.String,java.util.List)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: java.util.List lambda$createAssignmentHints$0(org.owasp.webgoat.lessons.Assignment)>-><org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.IntervalSecondData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getContents()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.field.BaseDurationField: java.lang.String toString()>
<org.jruby.ir.operands.ClosureLocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.jruby.util.collections.ConcurrentWeakHashMap$Segment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyMatchData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.util.FileCopyUtils: int copy(java.io.InputStream,java.io.OutputStream)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.FrozenString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatter: java.lang.String toString()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><org.owasp.webgoat.challenges.Email: java.lang.String getContents()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.EnumMap$1: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.sql.Time: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.NullBlock: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.time.LocalDateTime: java.time.LocalDateTime now()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.jruby.util.collections.ConcurrentWeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Character$Subset: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.stored.CrossSiteScriptingStored: java.lang.String getTitle()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.tools.SimpleJavaFileObject: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String genUserHash(java.lang.String,java.lang.String)>-><java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.classic.Logger: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.Expression: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.Font: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream flatMap(java.util.function.Function)>
<org.owasp.webgoat.users.WebGoatUser: boolean isEnabled()>-><org.springframework.security.core.userdetails.User: boolean isEnabled()>
<org.owasp.webgoat.users.LessonTracker: void assignmentSolved(java.lang.String)>-><org.owasp.webgoat.users.LessonTracker: java.util.Optional getAssignment(java.lang.String)>
<java.util.AbstractSet: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.users.Scoreboard: java.util.List getRankings()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.field.UnsupportedDateTimeField: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<java.util.EnumMap: boolean equals(java.util.EnumMap)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.io.InputStream: void close()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Bignum: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.provider.RuleBasedBreakIterator: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector$Itr: boolean hasNext()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.UnicodeLocaleExtension: java.lang.String toString()>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><java.io.PrintWriter: void <init>(java.io.File)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<org.hsqldb.types.Type: int hashCode(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.hsqldb.types.Type: int hashCode(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.Operation: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.users.Scoreboard: java.lang.String toLessonTitle(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.AbstractTextCodec: java.lang.String encode(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: javax.tools.SimpleJavaFileObject getJavaFileContentsAsString(java.lang.String)>-><java.lang.Throwable: void printStackTrace()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.PropertyValue: java.lang.String toString()>
<java.util.TreeMap$Entry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Reference: java.lang.String toString()>
<org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>-><java.util.HashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.WrappedIRClosure: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.Signature: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.LessonTemplateResolver lessonTemplateResolver(org.springframework.core.io.ResourceLoader)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.csrf.ForgedReviews: java.util.Collection retrieveReviews()>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: java.util.List getHints()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.owasp.webgoat.users.WebGoatUser: java.lang.String getRole()>
<org.owasp.webgoat.xxe.XXE: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.html_tampering.HtmlTampering: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaArray: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.WeakHashMap: int size()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Boolean: java.lang.String toString()>
<org.owasp.webwolf.user.WebGoatUser: java.util.Collection getAuthorities()>-><java.util.Collections: java.util.Set singleton(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.springframework.web.util.UriComponents: java.lang.String getVariableValueAsString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.util.HashMap: java.util.Collection values()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<register-finalize <org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.lang.ref.Finalizer: void register(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.Vector$Itr: boolean hasNext()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Messages messageSource(org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setDefaultEncoding(java.lang.String)>
<org.owasp.webgoat.users.WebGoatUser: void <init>(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.Drop: java.lang.String toString()>
<org.owasp.webgoat.lessons.Hint: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getAssignmentPath()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webwolf.user.WebGoatUser: java.util.Collection getAuthorities()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: void <init>(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void fakeClickingLinkEmail(java.lang.String,java.lang.String)>-><org.springframework.http.HttpHeaders: void <init>()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.session.Course: java.util.List getLessons()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$UnmodifiableMap: int size()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.AbstractMap: java.lang.String toString()>
<org.owasp.webgoat.WebGoat: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>-><org.owasp.webgoat.assignments.AttackResult: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String,boolean)>
<org.owasp.webgoat.users.UserForm: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.text.FieldPosition: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyFile: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.cia.CIA: java.lang.String getTitle()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.stream.SpinedBuffer$OfInt: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.LocalTime: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.io.FileInputStream: void close()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.time.LocalDateTime getTime()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity$HeadersBuilder location(java.net.URI)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.util.RecursiveComparator$Pair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer passwordParameter(java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><java.lang.String: int indexOf(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.zone.TzdbZoneRulesProvider: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.Collections$UnmodifiableMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean canEqual(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.util.MimeType: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><org.joda.time.base.AbstractInstant: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: java.util.List getHints()>
<org.owasp.webgoat.challenges.Flag: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.pkcs.PKCS9Attribute: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge5.Challenge5: java.lang.String getTitle()>
<org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String getHint()>
<org.owasp.webgoat.session.Course: java.util.List getLessons(org.owasp.webgoat.lessons.Category)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.joda.time.DateTime: org.joda.time.DateTime now()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.path_traversal.PathTraversal: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.util.Base64$Encoder: byte[] encode(byte[])>
<org.owasp.webgoat.cia.CIAQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.Flag: void lambda$initFlags$0(int)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.Font: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.idor.IDOR: java.lang.String getTitle()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: void setResetLink(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Period: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Complex: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><org.owasp.webgoat.xxe.Comment: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.users.UserTracker: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.io.ByteArrayOutputStream: java.lang.String toString()>
<org.hsqldb.types.CharacterType: java.lang.String convertJavaTimeObject(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><org.thymeleaf.standard.expression.RestrictedRequestAccessUtils$RestrictedRequestWrapper: java.lang.String getParameter(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.UnboxedBoolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.TreeMap: void putAll(java.util.Map)>
<org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.lang.String getId()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: boolean checkIfLinkIsFromTom(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Long: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><org.jruby.RubyArray: java.lang.Object get(int)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.LessonTemplateResolver lessonTemplateResolver(org.springframework.core.io.ResourceLoader)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCharacterEncoding(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.BaseDateTimeField: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><org.owasp.webgoat.csrf.Review: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.net.URL: void <init>(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyThread: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictions: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List lessonOverview()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webwolf.mailbox.Email: void <init>(java.lang.Long,java.time.LocalDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.RowType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.TryFinally: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyHash$ConvertingEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.DateTimeFieldType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.DynamicSymbol: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.users.UserService: org.owasp.webgoat.users.WebGoatUser loadUserByUsername(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.ObjectClass: java.lang.String toString()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.dirgra.Edge: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.lessons.Assignment lambda$createAssignment$2(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String,java.lang.String,java.util.List)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email$EmailBuilder recipient(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.missing_ac.DisplayUser: void <init>(org.owasp.webgoat.users.WebGoatUser)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKey(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.classic.LoggerContext: java.lang.String toString()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getRecipient()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanOperationInfo: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Enum: java.lang.String toString()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.lang.Thread: java.lang.Thread currentThread()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Enum: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getTitle()>
<org.owasp.webwolf.user.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.springframework.validation.BindException: void rejectValue(java.lang.String,java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity body(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.AsciiDoctorTemplateResolver: void <init>(org.owasp.webgoat.i18n.Language)>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setResolvablePatterns(java.util.Set)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.io.File: java.nio.file.Path toPath()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.xxe.Comments: org.owasp.webgoat.xxe.Comment parseXml(java.lang.String)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.Vector: boolean add(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void <clinit>()>-><org.apache.commons.lang3.RandomStringUtils: java.lang.String randomAlphabetic(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.cli.Category: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.security.web.util.OnCommittedResponseWrapper: javax.servlet.ServletOutputStream getOutputStream()>
<org.owasp.webgoat.controller.Welcome: org.springframework.web.servlet.ModelAndView welcome(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArraySet: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><java.io.File: java.lang.String getName()>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><org.owasp.webgoat.challenges.Email: java.lang.String getSender()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: long length()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.text.AttributedCharacterIterator$Attribute: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.xml.bind.JAXBException: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.IRScriptBody: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List getHints(java.lang.Class)>-><java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nullOrToString(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.ClobDataID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration schemas(java.lang.String[])>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.Arity: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.owasp.webgoat.csrf.CSRF: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Fixnum: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.IsoFields$Field$2: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.lang.String,int)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.cglib.core.Signature: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: java.lang.String toString()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: java.util.List usersService(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<java.util.AbstractSet: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyHash: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.users.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.owasp.webgoat.users.UserForm: java.lang.String getPassword()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: java.lang.String extractUsername(java.lang.String)>-><java.lang.String: int length()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><org.owasp.webwolf.requests.WebWolfTraceRepository: java.util.List findAllTraces()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream sorted(java.util.Comparator)>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry: org.springframework.security.config.annotation.web.HttpSecurityBuilder and()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: void <clinit>()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.PropertyValue: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.Drop: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.net.URI: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Strength: com.nulabinc.zxcvbn.Feedback getFeedback()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.jar.Attributes$Name: java.lang.String toString()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration locations(java.lang.String[])>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: java.lang.String extractUsername(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.RegexpOptions: java.lang.String toString()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry: java.lang.Object anyRequest()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.Symbol: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.javasupport.JavaMethod: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.URL: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setIssuedAt(java.util.Date)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><io.jsonwebtoken.impl.Base64Codec: byte[] decode(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Currency: java.lang.String toString()>
<org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>-><java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.IdentityHashMap: int size()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void lambda$resetVotes$1(org.owasp.webgoat.jwt.votes.Vote)>-><org.owasp.webgoat.jwt.votes.Vote: void reset()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<org.owasp.webgoat.crypto.XOREncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.chrono.ISOChronology: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.missing_ac.DisplayUser: void <init>(org.owasp.webgoat.users.WebGoatUser)>
<org.owasp.webgoat.jwt.votes.Vote: long calculateStars(int)>-><java.lang.Math: long round(double)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.csrf.Review: void setUser(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.challenge7.PasswordResetLink: void <init>()>
<org.owasp.webgoat.service.LabelDebugService: java.util.Map createResponse(java.lang.Boolean)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.HsqlException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>
<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Language language(org.springframework.web.servlet.LocaleResolver)>-><org.owasp.webgoat.i18n.Language: void <init>(org.springframework.web.servlet.LocaleResolver)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.WeakHashMap: void putAll(java.util.Map)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.LambdaFormEditor$Transform: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getSize()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.sql.DriverInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.DurationFieldType: java.lang.String toString()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.stream.Nodes$IntFixedNodeBuilder: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.i18n.PluginMessages: void <init>(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.ReloadableResourceBundleMessageSource: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(java.lang.String,java.lang.String)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><java.lang.String: int lastIndexOf(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder contents(java.lang.String)>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><org.owasp.webwolf.mailbox.Email: java.lang.String getSender()>
<org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.Boolean: boolean booleanValue()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.UserProfile: void <init>(java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.regex.Pattern: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.Course: java.util.List getCategories()>-><java.util.Collection: java.util.stream.Stream parallelStream()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webwolf.MvcConfiguration: void addViewControllers(org.springframework.web.servlet.config.annotation.ViewControllerRegistry)>-><org.springframework.web.servlet.config.annotation.ViewControllerRegistry: org.springframework.web.servlet.config.annotation.ViewControllerRegistration addViewController(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyObject: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.util.EnumMap)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.CurrentScope: java.lang.String toString()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getPrincipal()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.Fold: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.TemporaryVariable: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jcodings.Encoding: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.ArrayType: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.users.UserTracker: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webgoat.users.UserTracker: java.util.Optional getLessonTracker(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setDatabaseName(int,java.lang.String)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.owasp.webwolf.user.WebGoatUser: java.lang.String getUsername()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.net.ProgressSource: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyModule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.options.Option: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.xxe.CommentsEndpoint: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jws parseClaimsJws(java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScripting: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.session.Course: java.util.List getLessons(org.owasp.webgoat.lessons.Category)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.Cast: java.lang.String toString()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.IdentityHashMap: java.util.Collection values()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authenticated()>
<org.owasp.webgoat.path_traversal.ProfileUpload: org.springframework.http.ResponseEntity getProfilePicture()>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.jar.Attributes: void putAll(java.util.Map)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><io.jsonwebtoken.impl.AndroidBase64Codec: byte[] decode(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean add(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.subst.Node: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.SubList$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.options.Option: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.javasupport.JavaConstructor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.ScopeModule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.Vector: java.util.Iterator iterator()>
<org.owasp.webgoat.i18n.PluginMessages: java.lang.String getMessage(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.users.WebGoatUser: java.util.Collection getAuthorities()>-><java.util.Collections: java.util.Set singleton(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Hint: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getHint()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.util.List getAssignments()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.ZoneRules: java.lang.String toString()>
<org.owasp.webgoat.users.LessonTracker: java.util.Optional getAssignment(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Hashtable: int size()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.DateTimeType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.UserSessionData: void <init>(java.lang.String,java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.mailbox.Email: java.lang.String toString()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><com.thoughtworks.xstream.core.util.WeakCache: int size()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.springframework.core.io.buffer.LimitedDataBufferList: boolean add(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><java.util.Optional: boolean isPresent()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectStreamClass: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><java.util.ArrayList: boolean remove(java.lang.Object)>
<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.dataflow.analyses.UnboxableOpsAnalysisNode: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCStatement: void close()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.UnexecutableNil: java.lang.String toString()>
<org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.springframework.validation.BindException: boolean hasErrors()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.challenges.Flag: void initFlags()>-><java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.springframework.web.util.HierarchicalUriComponents: void lambda$getQuery$0(java.lang.StringBuilder,java.lang.String,java.util.List)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.jca.ProviderConfig: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String toHex(byte[])>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.crypto.SigningAssignment: java.lang.String getPrivateKey(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyBasicObject: boolean equals(java.lang.Object)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.util.EnumMap)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.security.Signature: java.security.Signature getInstance(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.idor.UserProfile: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.springframework.web.util.UriComponents: java.lang.String getVariableValueAsString(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.api.Location: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.users.Scoreboard: java.util.List getRankings()>-><org.owasp.webgoat.users.Scoreboard: java.util.List challengesSolved(org.owasp.webgoat.users.UserTracker)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.runtime.Arity: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.http.HttpEntity: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.subst.Token: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setTemplateMode(org.thymeleaf.templatemode.TemplateMode)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.UnresolvedPermission: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.StringBuffer getRequestURL()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.constants.platform.Errno: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.TriedQuestions: void <init>()>-><java.util.HashSet: void <init>()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(java.lang.String)>-><org.owasp.webgoat.challenges.challenge7.MD5: void update(byte[])>
<org.owasp.webgoat.AjaxAuthenticationEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getSha256(javax.servlet.http.HttpServletRequest)>-><java.util.Random: void <init>()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Symbol: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.Collections$UnmodifiableMap: void putAll(java.util.Map)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.ClassKey: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webwolf.mailbox.Email: java.lang.String toString()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.dataflow.analyses.UnboxableOpsAnalysisNode: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Collections$SynchronizedMap: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>
<org.springframework.web.util.UriComponents: java.lang.String getVariableValueAsString(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.TemporaryVariable: java.lang.String toString()>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyFixnum: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: java.lang.String toString()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.KeyValuePair: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String toHex(byte[])>-><java.lang.StringBuffer: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.UUID: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: void <init>(org.owasp.webgoat.session.WebSession)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.introspect.MemberKey: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>-><org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString(java.lang.String)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyBasicObject: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.owasp.webgoat.users.UserTracker: void assignmentFailed(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><io.jsonwebtoken.impl.JwtMap: java.util.Collection values()>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<java.util.EnumMap: boolean equals(java.util.EnumMap)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.DefaultSecurityFilterChain: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: java.lang.String getSummary()>-><java.lang.String: int length()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Feedback: java.util.List getSuggestions()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.MapType: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.awt.Font: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: java.util.List compileFromString(java.lang.String)>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.naming.NamingException: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.owasp.webgoat.challenges.Email: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.time.LocalDateTime getTime()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.info.MigrationInfoImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.security.Signature: void update(byte[])>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><org.hsqldb.jdbc.JDBCResultSetMetaData: int getColumnCount()>
<org.owasp.webwolf.MvcConfiguration: void createDirectory()>-><java.io.File: boolean mkdirs()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$LessonStatistics: void setSolved(boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nullOrToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: java.lang.String getTime()>-><java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><org.owasp.webgoat.xss.Comment: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String scramble(java.util.Random,java.lang.String)>-><java.lang.String: void <init>(char[])>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.passes.CompilerPass: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.xss.Comment parseJson(java.lang.String)>-><com.fasterxml.jackson.databind.ObjectMapper: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.DateFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.TriedQuestions: boolean isComplete()>-><java.util.HashSet: int size()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.MD5: void transform(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,int[])>-><org.owasp.webgoat.challenges.challenge7.MD5: int GG(int,int,int,int,int,int,int)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.sql.Timestamp: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.Permute: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Nil: java.lang.String toString()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webwolf.requests.LandingPage: org.springframework.http.ResponseEntity lambda$ok$0(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.lang.String: java.lang.String replace(char,char)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.springframework.boot.actuate.trace.http.HttpTrace$Request: java.net.URI getUri()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.ObjectName: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.BaseLocale: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: void <init>()>-><java.lang.Object: void <init>()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.Cast: java.lang.String toString()>
<org.owasp.webgoat.i18n.Messages: java.util.Properties getMessages()>-><org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Properties getProperties()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.Signature: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setTrace(boolean)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Throwable: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: int size()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ResourceBundle$CacheKey: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.persist.CachedObjectBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String scramble(java.util.Random,java.lang.String)>-><java.util.Random: int nextInt(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.math.BigInteger: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Self: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.calendar.CalendarDate: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.runtime.IRReturnJump: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.InetSocketAddress: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.crypto.Crypto: java.lang.String getTitle()>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><java.lang.String: int hashCode()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>-><java.util.stream.Collectors: java.util.stream.Collector groupingBy(java.util.function.Function)>
<org.owasp.webgoat.xxe.Ping: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><org.xml.sax.InputSource: void <init>(java.io.InputStream)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.InvokerBytecodeGenerator$CpPatch: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Double: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: java.lang.String getFeedback()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Vector: java.util.Iterator iterator()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$ReportCard: void setTotalNumberOfAssignments(int)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.atomic.AtomicReference: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Long: java.lang.String toString()>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getPath()>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><java.util.Random: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.LandingPage: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.apache.commons.lang3.RandomUtils: int nextInt(int,int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.atomic.AtomicBoolean: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Locale: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.util.LinkedMultiValueMap: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.LocalDateTime: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.ZonedDateTime: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: java.lang.String toLowerCase()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Instant: java.time.Instant now()>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.database.oracle.OracleSchema$ObjectType: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.http.HttpStatus: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.util.FileCopyUtils: byte[] copyToByteArray(java.io.File)>
<org.jruby.util.collections.ConcurrentWeakHashMap$Segment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.IsoFields$Field$4: java.lang.String toString()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration dataSource(javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.springframework.core.io.buffer.LimitedDataBufferList: boolean add(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String,boolean)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.util.HashMap$Values: void forEach(java.util.function.Consumer)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Double: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nullOrToString(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: void <init>(java.lang.Long,java.time.LocalDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.time.LocalDateTime: java.time.LocalDateTime now()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.UnboxedBoolean: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfLessonsSolved()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Regexp: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getSender()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.LessonTemplateResolver: void <init>(org.springframework.core.io.ResourceLoader)>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setResolvablePatterns(java.util.Set)>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><java.util.Collections$EmptyList: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebGoat: org.owasp.webgoat.session.UserSessionData userSessionData()>-><org.owasp.webgoat.session.UserSessionData: void <init>(java.lang.String,java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UnboxedFixnum: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.AsciiDoctorTemplateResolver: void <init>(org.owasp.webgoat.i18n.Language)>-><java.util.Set: java.util.Set of(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.io.support.EncodedResource: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.Label: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.UnresolvedPermission: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: int executeUpdate(java.lang.String)>
<org.owasp.webgoat.challenges.Email$EmailBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.MvcConfiguration: void addViewControllers(org.springframework.web.servlet.config.annotation.ViewControllerRegistry)>-><org.springframework.web.servlet.config.annotation.ViewControllerRegistration: void setViewName(java.lang.String)>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String getSender()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.Boolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.security.Provider: void putAll(java.util.Map)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.xml.bind.JAXBException: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: java.lang.String getSummary()>-><java.lang.Math: int min(int,int)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jcodings.Encoding: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard: boolean lambda$challengesSolved$1(java.util.Optional)>-><java.util.Optional: boolean isPresent()>
<org.hsqldb.types.Type: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.provider.PolicyParser$DomainEntry: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>-><java.util.HashSet: void <init>()>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.springframework.web.servlet.i18n.AbstractLocaleResolver: void setDefaultLocale(java.util.Locale)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.impl.JwtMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.util.ByteList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList$1: boolean hasNext()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.AndroidBase64Codec: byte[] decode(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.users.WebGoatUser: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.users.UserTracker: int numberOfLessonsSolved()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.insecure_login.InsecureLogin: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>-><java.lang.String: boolean matches(java.lang.String)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity ok(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.ivars.VariableAccessor: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard: java.util.Optional lambda$challengesSolved$0(org.owasp.webgoat.users.UserTracker,java.lang.String)>-><org.owasp.webgoat.users.UserTracker: java.util.Optional getLessonTracker(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.stream.StreamSpliterators$DelegatingSpliterator: java.lang.String toString()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubyLocalJumpError$Reason: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.ScopeModule: java.lang.String toString()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.apache.commons.lang3.StringUtils: boolean contains(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getPassword()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.password_reset.TriedQuestions: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><java.net.URI: void <init>(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.stream.ReferencePipeline: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,byte[],int,int)>-><org.owasp.webgoat.challenges.challenge7.MD5: void transform(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,int[])>
<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jdk.internal.org.xml.sax.SAXParseException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.ClassInfo: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView illegalCall()>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.Vector$Itr: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector: java.util.Iterator iterator()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.jruby.org.objectweb.asm.tree.MethodNode$1: boolean add(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><com.beust.jcommander.internal.Lists: java.util.List newArrayList()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: boolean check_text(java.lang.String,java.lang.String)>-><java.util.regex.Matcher: boolean find()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.xss.Comment parseJson(java.lang.String)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.insecure_login.InsecureLogin: java.lang.String getTitle()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getPath(java.lang.Class)>-><java.lang.Class: java.lang.reflect.Method[] getMethods()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.CurrentScope: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.MD5: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.session.Course: int getTotalOfLessons()>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.lessons.Assignment lambda$createAssignment$2(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Vector: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: java.util.Optional get(java.lang.String)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: java.lang.String getPrivateKeyInPEM(java.security.KeyPair)>-><java.util.Base64: java.util.Base64$Encoder getEncoder()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.awt.Font: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.convert.TypeDescriptor: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ByteArrayOutputStream: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: void assignmentSolved(org.owasp.webgoat.lessons.Lesson,java.lang.String)>-><org.owasp.webgoat.users.LessonTracker: void assignmentSolved(java.lang.String)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.springframework.util.LinkedMultiValueMap: int size()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ast.SymbolNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder builder()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: java.util.Map profileToMap()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.core.util.WeakCache: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.BinaryData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.deserialization.InsecureDeserialization: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder time(java.time.LocalDateTime)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.io.File: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void <clinit>()>-><io.jsonwebtoken.impl.AbstractTextCodec: java.lang.String encode(java.lang.String)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatter: java.lang.String toString()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: java.lang.String extractUsername(java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.Permute: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaAccessibleObject: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.io.path.Path: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.JavaObjectData: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.net.www.http.HttpClient: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.MethodHandle: java.lang.String toString()>
<org.owasp.webgoat.idor.UserProfile: java.util.Map profileToMap()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: void <clinit>()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.BitSet: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.Course: int getTotalOfLessons()>-><java.util.Vector: int size()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.net.URL: java.net.URLConnection openConnection()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.secure_password.SecurePasswords: java.lang.String getTitle()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder ok()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.http_proxies.HttpProxies: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.util.Calendar: java.util.Date getTime()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.webwolf_introduction.WebWolfIntroduction: java.lang.String getTitle()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jdk.internal.org.xml.sax.SAXParseException: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String toString()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.time.LocalDateTime getTime()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getPath(java.lang.Class)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.owasp.webgoat.session.WebSession: void <init>()>-><org.springframework.security.core.context.SecurityContextImpl: org.springframework.security.core.Authentication getAuthentication()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.Provider$UString: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.passes.CompilerPass: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.missing_ac.MissingFunctionAC: java.lang.String getTitle()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.instructions.Instr: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWT: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.classic.Logger: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity getVotes()>-><java.util.stream.Collectors: java.util.stream.Collector toMap(java.util.function.Function,java.util.function.Function)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.BitSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.io.File: boolean mkdirs()>
<org.owasp.webgoat.users.Scoreboard: org.owasp.webgoat.users.LessonTracker lambda$challengesSolved$2(java.util.Optional)>-><java.util.Optional: java.lang.Object get()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.missing_ac.Users$5: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.IsoFields$Unit: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.GeneralName: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><org.owasp.webgoat.session.LabelDebugger: boolean isEnabled()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.SimpleType: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: void <clinit>()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.HashMap: void putAll(java.util.Map)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void <init>(java.lang.String)>-><java.io.File: boolean mkdirs()>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.System: long currentTimeMillis()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: java.util.Optional get(java.lang.String)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getSender()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.Instant: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder ok()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: java.lang.String compact()>
<org.owasp.webwolf.requests.Requests: java.lang.String path(org.springframework.boot.actuate.trace.http.HttpTrace)>-><java.net.URI: java.lang.String getPath()>
<org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean canEqual(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.database.oracle.OracleSchema$ObjectType: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.RDN: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.info.MigrationInfoImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Hashtable: int size()>
<org.owasp.webgoat.missing_ac.Users$2: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.classic.jmx.JMXConfigurator: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.user.WebGoatUser: boolean isEnabled()>-><org.springframework.security.core.userdetails.User: boolean isEnabled()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.Frame: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwt: java.lang.Object getBody()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: void assignmentSolved(org.owasp.webgoat.lessons.Lesson,java.lang.String)>-><org.owasp.webgoat.users.LessonTracker: void incrementAttempts()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.crypto.XOREncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><com.thoughtworks.xstream.core.util.WeakCache: int size()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.factory.InjectionPoint: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xxe.XXE: java.lang.String getTitle()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: javax.tools.SimpleJavaFileObject getJavaFileContentsAsString(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.callsite.CacheEntry: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.owasp.webwolf.FileServer$UploadedFile: void <init>(org.owasp.webwolf.FileServer,java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.io.File: java.io.File[] listFiles()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.SymbolProc: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.Email$EmailBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><javax.servlet.http.HttpServletRequestWrapper: boolean isRequestedSessionIdFromCookie()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder builder()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.headius.invokebinder.Signature: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.lessons.CourseConfiguration: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.lang.String,int)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.security.web.header.Header: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.ArrayBlockingQueue: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.springframework.web.util.UriUtils: void lambda$encodeUriVariables$0(java.util.Map,java.lang.String,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void <clinit>()>-><java.util.Random: int nextInt(int)>
<org.hsqldb.persist.Cache$CachedObjectComparator: int hashCode(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.javasupport.JavaClass: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$SingletonMap: int size()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: java.lang.String replace(char,char)>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: java.util.Optional parseJson(java.lang.String)>-><com.fasterxml.jackson.databind.ObjectMapper: void <init>()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$SynchronizedMap: int size()>
<org.owasp.webgoat.users.LessonTracker: boolean lambda$getLessonOverview$2(org.owasp.webgoat.lessons.Assignment)>-><java.util.HashSet: boolean contains(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.UnsynchronizedAppenderBase: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getName()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity$HeadersBuilder header(java.lang.String,java.lang.String[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.cia.CIA: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.lessons.Lesson: java.lang.String getId()>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jcodings.Encoding: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyString: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String nextFieldName()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyParser$KeyStoreEntry: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.stream.SpinedBuffer$OfInt: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><java.util.ArrayList: void <init>()>
<org.owasp.webwolf.requests.LandingPage: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.challenges.ChallengeIntro: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.controller.Welcome: org.springframework.web.servlet.ModelAndView welcome(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.Color: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.security.MessageDigest: byte[] digest()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toUpperCase()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getSha256(javax.servlet.http.HttpServletRequest)>-><java.util.Random: int nextInt(int)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Regexp: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge1.Challenge1: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.ffi.Platform$CPU: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.MD5: void transform(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,int[])>-><org.owasp.webgoat.challenges.challenge7.MD5: int FF(int,int,int,int,int,int,int)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder builder(org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.LambdaForm: java.lang.String toString()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getContents()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: boolean isLessonCompleted()>
<org.owasp.webgoat.session.Course: java.util.List getCategories()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.ffi.Platform$OS: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge7.MD5: void transform(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,int[])>-><org.owasp.webgoat.challenges.challenge7.MD5: int II(int,int,int,int,int,int,int)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$1: java.lang.Object next()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: void addViewControllers(org.springframework.web.servlet.config.annotation.ViewControllerRegistry)>-><org.springframework.web.servlet.config.annotation.ViewControllerRegistry: org.springframework.web.servlet.config.annotation.ViewControllerRegistration addViewController(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.UserProfile: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap$SimpleEntry: java.lang.String toString()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Base64$Decoder: byte[] decode(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.database.base.Function: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>
<org.owasp.webgoat.http_proxies.HttpProxies: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.UUID: java.util.UUID randomUUID()>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.util.Base64: java.util.Base64$Encoder getEncoder()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.PluginMessages pluginMessages(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setDefaultEncoding(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.jar.Attributes: int size()>
<org.owasp.webgoat.AjaxAuthenticationEntryPoint: void <init>(java.lang.String)>-><org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.xxe.Comments: java.util.Optional parseJson(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.servlet.ServletResponseWrapper: void setContentType(java.lang.String)>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.LambdaForm$Name: java.lang.String toString()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<register-finalize <org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.lang.ref.Finalizer: void register(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$6: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.AjaxAuthenticationEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity getVotes()>-><java.util.HashMap: java.util.Set entrySet()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.NamedInheritableThreadLocal: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void initVotes()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String concat(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>-><java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ReferenceType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.crypto.XOREncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.AVA: java.lang.String toString()>
<org.owasp.webgoat.xxe.SimpleXXE: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard: java.lang.String lambda$challengesSolved$5(java.lang.String)>-><org.owasp.webgoat.users.Scoreboard: java.lang.String toLessonTitle(java.lang.String)>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.apache.commons.lang.exception.ExceptionUtils: java.lang.String getFullStackTrace(java.lang.Throwable)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.lib.RefCapablePropertyResourceBundle: java.lang.String toString()>
<com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.io.AbstractResource: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.webwolf_introduction.WebWolfIntroduction: java.lang.String getTitle()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder recipient(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.http.HttpEntity: java.lang.String toString()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile: void transferTo(java.io.File)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.io.BufferedInputStream: void close()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.types.JavaObjectData: java.lang.String toString()>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFGetFlag: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.URI: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.ZoneOffset: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><javax.crypto.Mac: byte[] doFinal(byte[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>-><org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes currentRequestAttributes()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.util.Random: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.sql.DriverInfo: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <clinit>()>-><java.util.List: java.util.List of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.HammerHead: org.springframework.web.servlet.ModelAndView attack(org.springframework.security.core.Authentication,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.thoughtworks.xstream.core.util.WeakCache: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: boolean lambda$getAssignment$0(java.lang.String,org.owasp.webgoat.lessons.Assignment)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: void setRole(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.util.Pair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.CodeSource: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><org.jruby.RubyHash: java.util.Collection values()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.MBeanOperationInfo: java.lang.String toString()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.MemberKey: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.sql.DriverInfo: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.core.io.SerializedString: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.header.Header: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.util.StringUtils: java.lang.String arrayToCommaDelimitedString(java.lang.Object[])>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><java.lang.Long: int hashCode()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.challenges.Flag: void lambda$initFlags$0(int)>-><java.util.UUID: java.util.UUID randomUUID()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flywayLessons()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration configuration(java.util.Map)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.controller.Welcome: org.springframework.web.servlet.ModelAndView welcome(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.jruby.RubyHash: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Vector$Itr: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webwolf.mailbox.Email: java.lang.String toString()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getSender()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.constants.platform.Errno: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.stream.StreamSpliterators$DelegatingSpliterator: java.lang.String toString()>
<org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>-><java.util.List: java.util.List of()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.classic.jmx.JMXConfigurator: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getUserId()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.deser.CreatorProperty: java.lang.String toString()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.AttributedCharacterIterator$Attribute: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.xxe.Comments: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.header.Header: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.types.IntervalSecondData: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.joda.time.DateTime: org.joda.time.DateTime now()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Assignment: void setPath(java.lang.String)>
<org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.owasp.webgoat.service.HintService: java.util.List getHints()>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webgoat.users.UserService: void <init>(org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.users.UserTrackerRepository)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><org.joda.time.DateTime: org.joda.time.DateTime now()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.IRScope: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder accepted()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.xxe.ContentTypeAssignment: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.HsqlNameManager$HsqlName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$SynchronizedMap: int size()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.springframework.web.servlet.ViewResolver viewResolver(org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void <init>()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.security.Provider: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack: java.util.List getItemsInBasket(java.lang.String)>-><org.owasp.webgoat.template.SampleAttack$Item: void <init>(org.owasp.webgoat.template.SampleAttack,java.lang.String,java.lang.String,double)>
<org.owasp.webwolf.requests.Requests: java.lang.String toJsonString(org.springframework.boot.actuate.trace.http.HttpTrace)>-><com.fasterxml.jackson.databind.ObjectMapper: java.lang.String writeValueAsString(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.Fixnum: boolean equals(java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.DateTimeZone: java.lang.String toString()>
<org.owasp.webgoat.WebSecurityConfig: void <init>(org.owasp.webgoat.users.UserService)>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: void <init>()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.owasp.webgoat.challenges.challenge7.MD5: byte[] getHash()>-><org.owasp.webgoat.challenges.challenge7.MD5: void update(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,byte[],int,int)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: boolean add(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.challenges.challenge1.Assignment1: boolean containsHeader(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.BaseJsonNode: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.util.Base64$Decoder: byte[] decode(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.DynamicSymbol: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.deser.UnresolvedId: java.lang.String toString()>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>
<org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Float: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFLogin: void markAssignmentSolvedWithRealUser(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.util.LinkedMultiValueMap: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.jwt.votes.Vote: void incrementNumberOfVotes(int)>-><org.owasp.webgoat.jwt.votes.Vote: long calculateStars(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ArrayType: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.auth_bypass.AccountVerificationHelper: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView start()>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebSecurityConfig: org.springframework.security.authentication.AuthenticationManager authenticationManager()>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: org.springframework.security.authentication.AuthenticationManager authenticationManager()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.backtrace.RubyStackTraceElement: java.lang.String toString()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: java.lang.String getName()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toLowerCase()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyModule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder sender(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.Level: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.sql.Date: java.lang.String toString()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setDatabasePath(int,java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.String lambda$getVotes$0(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKeyResolver(io.jsonwebtoken.SigningKeyResolver)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: java.lang.String toJsonString(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.stream.Nodes$IntFixedNodeBuilder: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.X509CertImpl: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: void <init>(org.springframework.context.support.ReloadableResourceBundleMessageSource,java.util.Properties,long)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.owasp.webgoat.users.WebGoatUser: java.lang.String getUsername()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: void assignmentSolved(java.lang.String)>-><java.util.Optional: void ifPresent(java.util.function.Consumer)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.idor.UserProfile: void <init>(java.lang.String)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder builder()>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.MvcConfiguration: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$InstantPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><java.util.ArrayList: boolean contains(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.io.File: boolean createNewFile()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.sql.Time: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.Block: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Optional: java.util.Optional of(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: javax.sql.DataSource dataSource(java.lang.String,java.lang.String)>-><org.springframework.jdbc.datasource.DriverManagerDataSource: void setDriverClassName(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebGoat: org.owasp.webgoat.session.WebSession webSession()>-><org.owasp.webgoat.session.WebSession: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Collections$UnmodifiableCollection: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$EmptyMap: java.util.Collection values()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.logging.Level: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyIO: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.springframework.util.StringUtils: boolean isEmpty(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <clinit>()>-><io.jsonwebtoken.impl.AbstractTextCodec: java.lang.String encode(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webwolf.requests.LandingPage: org.springframework.http.ResponseEntity lambda$ok$0(javax.servlet.http.HttpServletRequest)>-><ch.qos.logback.classic.Logger: void trace(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder ok()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$ReportCard: void <init>(org.owasp.webgoat.service.ReportCardService)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: int indexOf(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.TreeMap: int size()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.io.ObjectStreamField: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: boolean attemptWasMade(java.io.File,java.io.File)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.AbstractCollection: boolean containsAll(java.util.Collection)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.net.URL: java.net.URI toURI()>
<org.owasp.webgoat.service.HintService: org.owasp.webgoat.lessons.Hint lambda$createHint$2(org.owasp.webgoat.lessons.Assignment,java.lang.String)>-><org.owasp.webgoat.lessons.Hint: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
<java.util.AbstractSet: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<org.owasp.webwolf.user.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.owasp.webwolf.user.UserForm: java.lang.String getPassword()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.WeekFields: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String[] split(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.MessageDigest: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.InetAddress: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$SingletonMap: int size()>
<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.FrozenString: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$SingletonMap: java.util.Collection values()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Double: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder recipient(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.thymeleaf.exceptions.TemplateProcessingException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString()>-><org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String toHex(byte[])>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.Self: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.http_proxies.HttpProxies: java.lang.String getTitle()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.joda.time.base.AbstractInstant: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String toUpperCase()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Float: java.lang.String toString()>
<org.owasp.webgoat.service.LabelDebugService: java.util.Map createResponse(java.lang.Boolean)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.TypeDescriptor: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setSilent(boolean)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.Label: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getSender()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.constants.platform.OpenFlags: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><org.owasp.webgoat.lessons.Assignment: java.util.List getHints()>
<org.owasp.webgoat.HammerHead: void <init>(org.owasp.webgoat.session.Course)>-><java.lang.Object: void <init>()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.PatternEntry: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.ByteList: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Date: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyFloat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.Lesson: void <init>()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.jruby.util.collections.ConcurrentWeakHashMap$Segment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.MethodType: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.lang.String: byte[] getBytes()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.MBeanParameterInfo: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.BitSet: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Enum: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.CrossSiteScriptingStored: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder badRequest()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: java.util.Optional get(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.jwt.votes.Vote: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)>-><org.owasp.webgoat.jwt.votes.Vote: long calculateStars(int)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.owasp.webgoat.AjaxAuthenticationEntryPoint: void <init>(java.lang.String)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ResourceBundle$1: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Package: java.lang.String toString()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getSender()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.GeneralName: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.persist.CachedObjectBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.constants.platform.Fcntl: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: boolean lambda$get$0(java.lang.String,org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode: java.lang.String getCode()>
<org.owasp.webwolf.user.WebGoatUser: void createUser()>-><org.springframework.security.core.userdetails.User: void <init>(java.lang.String,java.lang.String,java.util.Collection)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.util.FileCopyUtils: void copy(byte[],java.io.OutputStream)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void fakeClickingLinkEmail(java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.AsciiDoctorTemplateResolver: void <init>(org.owasp.webgoat.i18n.Language)>-><org.thymeleaf.templateresolver.FileTemplateResolver: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.org.objectweb.asm.Type: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyBasicObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getContents()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSetMetaData: java.lang.String getColumnName(int)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.IntervalMonthData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.EnumMap: int size()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.WebGoat: java.io.File pluginTargetDirectory(java.lang.String)>-><java.io.File: void <init>(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Hashtable: java.util.Collection values()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.IsoFields$Field$1: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.chrome_dev_tools.ChromeDevTools: java.lang.String getTitle()>
<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: java.util.List compileFromString(java.lang.String)>-><javax.tools.DiagnosticCollector: void <init>()>
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.owasp.webgoat.csrf.CSRFFeedback: boolean hostOrRefererDifferentHost(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xxe.Comments: org.owasp.webgoat.xxe.Comment parseXml(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.Claims claims()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.time.LocalDateTime getTime()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setOrder(java.lang.Integer)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.ISOChronology: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><javax.servlet.ServletRequestWrapper: java.lang.String getContentType()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.users.UserTracker: void assignmentFailed(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.users.LessonTracker: void incrementAttempts()>
<org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.users.UserForm: java.lang.String getPassword()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelService: void <init>(org.springframework.web.servlet.LocaleResolver,org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.PluginMessages)>-><java.lang.Object: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer failureUrl(java.lang.String)>
<org.owasp.webgoat.session.Course: java.util.List getCategories()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.parser.StaticScope: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: void <init>(java.lang.Class,java.lang.Class,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: boolean checkIfLinkIsFromTom(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack: java.util.List getItemsInBasket(java.lang.String)>-><java.util.List: java.util.List of(java.lang.Object,java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.util.List getChildren()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>
<org.owasp.webgoat.challenges.challenge7.MD5: void <init>()>-><org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void <init>(org.owasp.webgoat.challenges.challenge7.MD5)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.net.URI: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>-><java.security.KeyPairGenerator$Delegate: java.security.KeyPair generateKeyPair()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.List getHints()>-><org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.users.Scoreboard: boolean lambda$toLessonTitle$6(java.lang.String,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.lang.String getId()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.deser.impl.CreatorCandidate: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.owasp.webgoat.assignments.AttackResult notUsed()>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.misc.Signal: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.idor.IDOR: java.lang.String getTitle()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webwolf.requests.Requests: org.owasp.webwolf.requests.Requests$Tracert lambda$get$1(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.owasp.webwolf.requests.Requests: java.lang.String toJsonString(org.springframework.boot.actuate.trace.http.HttpTrace)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><java.util.Vector: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.util.List getAssignments()>
<org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webwolf.user.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.ClobDataID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.ArrayType: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: void <clinit>()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer loginPage(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.stream.IntPipeline: int reduce(int,java.util.function.IntBinaryOperator)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: boolean delete()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.owasp.webgoat.introduction.WebGoatIntroduction: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.TimestampData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKey(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>
<org.hsqldb.persist.Cache$CachedObjectComparator: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$EmptyMap: int size()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.Date: void <init>(long)>
<org.springframework.web.util.UriUtils: void lambda$encodeUriVariables$0(java.util.Map,java.lang.String,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String concat(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<java.util.EnumMap: int entryHashCode(int)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Character: java.lang.String toString()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>
<org.owasp.webgoat.xxe.CommentsEndpoint: java.util.Collection retrieveComments()>-><org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge1.Challenge1: java.lang.String getTitle()>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getContents()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.session.Course: int getTotalOfAssignments()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Splat: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><org.springframework.util.LinkedMultiValueMap: java.util.Collection values()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.apache.commons.logging.LogAdapter$Log4jLog: void error(java.lang.Object,java.lang.Throwable)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.util.Base64: java.util.Base64$Decoder getDecoder()>
<java.text.AttributeEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.springframework.context.support.ReloadableResourceBundleMessageSource: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.security.web.header.Header: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UnexecutableNil: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getSha256(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.AttributeEntry: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.CrossSiteScripting: java.lang.String getTitle()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webwolf.requests.LandingPage: org.springframework.http.ResponseEntity lambda$ok$0(javax.servlet.http.HttpServletRequest)>-><org.slf4j.helpers.NOPLogger: void trace(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.Provider: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectStreamField: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer invalidateHttpSession(boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.password_reset.PasswordReset: java.lang.String getTitle()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.PatternEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.Extension: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.users.UserTracker: void <init>(java.lang.String)>-><java.util.HashSet: void <init>()>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.thoughtworks.xstream.core.util.WeakCache: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORLogin: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity getVotes()>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity ok(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.stream.Collectors: java.util.stream.Collector toMap(java.util.function.Function,java.util.function.Function)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.MBeanConstructorInfo: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.util.RecursiveComparator$Pair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.context.support.ReloadableResourceBundleMessageSource: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder getProperties(java.lang.String)>-><org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.LambdaForm$Name: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Optional: boolean isPresent()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.HsqlNameManager$HsqlName: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyFixnum: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String nextFieldName()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: java.lang.String compact()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.xxe.Comments: org.owasp.webgoat.xxe.Comment parseXml(java.lang.String)>-><java.io.StringReader: void <init>(java.lang.String)>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.challenges.Flag: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: void addChild(org.owasp.webgoat.lessons.LessonMenuItem)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.Boolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.runtime.Arity: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.subst.Node: java.lang.String toString()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder attemptWasMade()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView start()>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.WeekFields: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCArray: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Double: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.awt.Color: boolean equals(java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toString()>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.MD5: byte[] getHash()>-><org.owasp.webgoat.challenges.challenge7.MD5: byte[] encode(int[],int)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setIssuedAt(java.util.Date)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.users.Scoreboard: java.lang.String toLessonTitle(java.lang.String)>-><org.owasp.webgoat.session.Course: java.util.List getLessons()>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean isEmpty()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.ClosureLocalVariable: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nullOrToString(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.io.File: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: java.lang.String getMessage(java.lang.String,java.lang.String,java.lang.Object[])>-><org.springframework.context.support.AbstractMessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder signWith(io.jsonwebtoken.SignatureAlgorithm,java.lang.String)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><java.io.PrintWriter: void close()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwt: java.lang.Object getBody()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.insecure_login.InsecureLogin: java.lang.String getTitle()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><java.time.LocalDateTime: int hashCode()>
<org.springframework.web.util.HierarchicalUriComponents: void lambda$getQuery$0(java.lang.StringBuilder,java.lang.String,java.util.List)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.math.BigDecimal: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Locale: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.util.TypeKey: java.lang.String toString()>
<org.owasp.webgoat.session.UserSessionData: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.impl.DefaultJwt: java.lang.Object getBody()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getPrincipal()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ArrayList: int size()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.util.MimeType: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableMap: java.lang.String toString()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder contents(java.lang.String)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.CollectionType: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionAdvanced: java.lang.String getTitle()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry permitAll()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.dirgra.Edge: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson4: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$1: java.lang.Object next()>
<org.owasp.webgoat.lessons.Lesson: void <init>()>-><java.lang.Object: void <init>()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.CsrfConfigurer csrf()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCharacterEncoding(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(java.lang.String)>-><java.lang.String: byte[] getBytes()>
<org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void <init>(java.lang.String)>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.springframework.util.FileCopyUtils: void copy(byte[],java.io.File)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.support.GenericConversionService$ConvertersForPair: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.html_tampering.HtmlTampering: java.lang.String getTitle()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView start()>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><java.io.File: boolean mkdir()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><java.util.Random: int nextInt()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.time.LocalDateTime getTime()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.csrf.Review: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.web.util.UriComponents: java.lang.String getVariableValueAsString(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Object: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String,boolean)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.jdbc.JDBCArray: java.lang.String toString()>
<org.owasp.webgoat.session.UserSessionData: void <init>(java.lang.String,java.lang.String)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.lang.String,int)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanAttributeInfo: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Rational: java.lang.String toString()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.html_tampering.HtmlTampering: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<java.util.AbstractList: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.csrf.Review: void setText(java.lang.String)>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Character: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.http_basics.HttpBasics: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: java.lang.String toString()>
<org.owasp.webgoat.xxe.Ping: java.lang.String logRequest(java.lang.String,java.lang.String)>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.XStream: void processAnnotations(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$2(java.lang.Integer)>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.util.Random: int nextInt(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: boolean lambda$getLessonTracker$0(org.owasp.webgoat.lessons.Lesson,org.owasp.webgoat.users.LessonTracker)>-><org.owasp.webgoat.users.LessonTracker: java.lang.String getLessonName()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.UnboxedFixnum: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Feedback: java.lang.String getWarning()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.springframework.web.servlet.ViewResolver viewResolver(org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setTemplateEngine(org.thymeleaf.spring5.ISpringTemplateEngine)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>-><org.thymeleaf.spring5.SpringTemplateEngine: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.joda.time.base.AbstractInstant: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.representations.BasicBlock: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: void close()>
<org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.charset.Charset: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String scramble(java.util.Random,java.lang.String)>-><java.lang.String: char[] toCharArray()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: boolean add(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.MBeanInfo: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.session.Course: java.util.List getCategories()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: java.util.Collection retrieveReviews()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String toLowerCase()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.lessons.CourseConfiguration: boolean methodReturnTypeIsOfTypeAttackResult(java.lang.reflect.Method)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$1: void <init>(org.owasp.webgoat.missing_ac.Users,java.sql.SQLException)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.MillisDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.UserProfile: java.util.Map profileToMap()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.ssrf.SSRF: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.xxe.SimpleXXE: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.apache.commons.exec.OS: boolean isFamilyUnix()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer logout()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.UUID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: java.lang.String getPrivateKeyInPEM(java.security.KeyPair)>-><java.util.Base64$Encoder: byte[] encode(byte[])>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><sun.net.www.http.ChunkedInputStream: void close()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.parser.StaticScope: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.HashMap: void <init>()>
<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.org.objectweb.asm.Type: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(java.lang.String,java.lang.String)>-><java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap: java.util.Set entrySet()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.WebGoatUser: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.service.LessonProgressService$LessonOverview: void <init>(org.owasp.webgoat.lessons.Assignment,java.lang.Boolean)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Complex: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.InvokerBytecodeGenerator$CpPatch: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectInputStream: java.lang.Object readObject()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail build()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ast.SymbolNode: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge1.Challenge1: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSet: void beforeFirst()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.net.www.http.KeepAliveKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.OperandType: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email$EmailBuilder sender(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String follow(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyThread: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.ConcurrentHashMap: java.lang.String toString()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><java.util.Optional: void ifPresent(java.util.function.Consumer)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.runtime.Block: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void error(java.lang.Object,java.lang.Throwable)>
<org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$ReportCard: void setTotalNumberOfLessons(int)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.password_reset.TriedQuestions: void incr(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.io.PrintStream: void println(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.users.UserTracker: void assignmentSolved(org.owasp.webgoat.lessons.Lesson,java.lang.String)>-><org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Strength: int getScore()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: java.lang.String toString()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.users.Scoreboard: boolean lambda$challengesSolved$3(org.owasp.webgoat.users.LessonTracker)>-><org.owasp.webgoat.users.LessonTracker: boolean isLessonSolved()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Strength: double getGuesses()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.auth_bypass.AuthBypass: java.lang.String getTitle()>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><org.springframework.util.FileCopyUtils: int copy(java.io.InputStream,java.io.OutputStream)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setPort(int)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.LessonTemplateResolver lessonTemplateResolver(org.springframework.core.io.ResourceLoader)>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setOrder(java.lang.Integer)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.core.io.SerializedString: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.HsqlNameManager$HsqlName: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Integer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.introduction.WebGoatIntroduction: java.lang.String getTitle()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.MvcConfiguration: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><java.util.concurrent.TimeUnit$7: long toDays(long)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><java.io.File: java.nio.file.Path toPath()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: boolean check_text(java.lang.String,java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean canEqual(java.lang.Object)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.BeanMetadataAttribute: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Hashtable: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList: void sort(java.util.Comparator)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: java.lang.String toString()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: void <init>()>-><java.util.HashSet: void <init>()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authenticated()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.CompositeType: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.session.Course: java.util.List getCategories()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.TimestampData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.core.io.ClassPathResource: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.TimeData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.SocketImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Optional getAssignment(java.lang.String)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ThreadGroup: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.LocalTime: java.lang.String toString()>
<org.owasp.webgoat.users.WebGoatUser: boolean isAccountNonExpired()>-><org.springframework.security.core.userdetails.User: boolean isAccountNonExpired()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.net.URI: java.lang.String getHost()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.TreeMap$Entry: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder builder(org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.Collections$EmptySet: boolean containsAll(java.util.Collection)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelService: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment: java.lang.String getPrivateKey(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>
<org.jruby.util.collections.ConcurrentWeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.HashMap$EntrySet: int size()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.jruby.RubyHash: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: java.util.Collection retrieveReviews()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.ui.ModelMap: org.springframework.ui.ModelMap addAttribute(java.lang.String,java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: void <init>(java.lang.Class,java.lang.Class,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.lang.String,int)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.LessonTemplateResolver lessonTemplateResolver(org.springframework.core.io.ResourceLoader)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCacheable(boolean)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.Review: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.users.WebGoatUser: void createUser()>-><org.springframework.security.core.userdetails.User: void <init>(java.lang.String,java.lang.String,java.util.Collection)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.Parsed: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.DisplayUser: void <init>(org.owasp.webgoat.users.WebGoatUser)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Reference: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.IRException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.ByteArrayResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.ResourceBundle$CacheKey: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: void <init>()>-><java.util.HashSet: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.ZoneId: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><javax.sql.rowset.RowSetMetaDataImpl: java.lang.String getColumnName(int)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaMethod: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><com.thoughtworks.xstream.core.util.WeakCache: java.util.Collection values()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail build()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: java.lang.String getOutput()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List lessonOverview()>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.WeakHashMap$Entry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.util.List getAssignments()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.ClassPathResource: void <init>(java.lang.String)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.Extension: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Short: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.constants.platform.windows.LastError: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Array: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.crypto.Crypto: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.apache.logging.log4j.spi.Provider: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArraySet: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Byte: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.CharacterType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: boolean containsAll(java.util.Collection)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>
<org.owasp.webgoat.service.LessonMenuService: void <init>(org.owasp.webgoat.session.Course,org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Fixnum: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List lessonOverview()>-><org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: java.lang.String toLowerCase()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void error(java.lang.Object,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.UnboxedFixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.URL: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.web.util.UriUtils: java.lang.String lambda$encodeUriVariables$1(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<java.util.EnumMap: int entryHashCode(int)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.i18n.Messages: void <init>(org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.ReloadableResourceBundleMessageSource: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.java.proxies.ArrayJavaProxy: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.stream.Nodes$FixedNodeBuilder: java.lang.String toString()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.util.Base64: java.util.Base64$Encoder getEncoder()>
<org.owasp.webgoat.users.UserTracker: void <init>(java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$ExternalData: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: java.lang.String[] split(java.lang.String)>
<org.owasp.webgoat.service.LessonInfoService: org.owasp.webgoat.lessons.LessonInfoModel getLessonInfo()>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.jruby.util.collections.ConcurrentWeakHashMap$Segment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.util.Calendar: java.util.Calendar getInstance()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.http.HttpEntity: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.Integer: int parseInt(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String valueOf(int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.joran.spi.ConsoleTarget: java.lang.String toString()>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Package: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubyIO: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.collections.WeakHashSet: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.ProtectionDomain: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.CollectionType: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment: java.lang.String calculateTime(long)>
<org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String genUserHash(java.lang.String,java.lang.String)>-><java.util.Base64: java.util.Base64$Encoder getEncoder()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.util.RegexpOptions: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.PathTraversal: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.jruby.ir.operands.LocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.AsString: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(byte[])>-><org.owasp.webgoat.challenges.challenge7.MD5: void update(byte[],int,int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.FieldPosition: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.jdbc.DatabaseType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.StringLiteral: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.WebWolfTraceRepository: java.util.List findAllTraces()>-><com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: java.util.List getCodes()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.io.InputStreamReader: void <init>(java.io.InputStream)>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.Insert: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: void <init>(org.owasp.webgoat.jwt.JWTFinalEndpoint,java.lang.String[])>-><io.jsonwebtoken.SigningKeyResolverAdapter: void <init>()>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream sorted(java.util.Comparator)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.IsoFields$Field$4: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.BasicChronology: java.lang.String toString()>
<org.owasp.webgoat.crypto.CryptoUtil: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.io.File: java.io.File getParentFile()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.pkcs.SignerInfo: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: java.lang.String[] split(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORDiffAttributes: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>
<org.owasp.webgoat.users.LessonTracker: java.lang.Boolean lambda$getLessonOverview$6(org.owasp.webgoat.lessons.Assignment)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.ui.ModelMap: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Base64: java.util.Base64$Decoder getDecoder()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.Clock$SystemClock: java.lang.String toString()>
<org.owasp.webgoat.controller.Welcome: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.env.PropertySource: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getName()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.jar.Attributes$Name: java.lang.String toString()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.missing_ac.Users$5: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.lang.Throwable: java.lang.Throwable getCause()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.apache.commons.lang3.exception.ExceptionUtils: java.lang.String getStackTrace(java.lang.Throwable)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.WebGoatUser: void <init>(java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setClaims(java.util.Map)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubySymbol: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.TemporaryVariable: boolean equals(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>
<org.owasp.webgoat.users.WebGoatUser: boolean isCredentialsNonExpired()>-><org.springframework.security.core.userdetails.User: boolean isCredentialsNonExpired()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webwolf.FileServer: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.LessonTemplateResolver: void <init>(org.springframework.core.io.ResourceLoader)>-><org.thymeleaf.templateresolver.FileTemplateResolver: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.crypto.CryptoPermission: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>-><java.util.Random: void setSeed(long)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.java.proxies.ArrayJavaProxy: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: void setColor(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.logging.Level: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.KCode: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyString: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.DateTimeFieldType: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.service.ReportCardService$ReportCard: void <init>(org.owasp.webgoat.service.ReportCardService)>-><java.util.ArrayList: void <init>()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.util.cli.Category: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.lib.tar.RB: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: byte[] getBytes(java.nio.charset.Charset)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.locale.Extension: java.lang.String toString()>
<org.owasp.webwolf.user.WebGoatUser: void createUser()>-><org.owasp.webwolf.user.WebGoatUser: java.util.Collection getAuthorities()>
<org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><org.springframework.ui.ExtendedModelMap: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: java.lang.String toString()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getTime()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.xml.sax.SAXException: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.password_reset.PasswordReset: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.provider.PolicyParser$KeyStoreEntry: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String)>-><java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.Permission: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><java.util.AbstractList: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.File: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getPath()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.NullBlock: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ClassKey: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.CharacterType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.security.Provider: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.core.context.SecurityContextImpl: org.springframework.security.core.Authentication getAuthentication()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Hashtable$Entry: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void <init>(org.owasp.webgoat.challenges.challenge7.MD5)>-><java.lang.Object: void <init>()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyThread: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.ClosureLocalVariable: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.convert.support.GenericConversionService$ConvertersForPair: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: void setType(org.owasp.webgoat.lessons.LessonMenuItemType)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.i18n.PluginMessages: java.util.Properties getMessages()>-><org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Properties getProperties()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.util.List)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.LinkedList: boolean add(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>-><org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String scramble(java.util.Random,java.lang.String)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<java.util.AbstractList: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.PluginMessages pluginMessages(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.owasp.webgoat.i18n.PluginMessages: void <init>(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.util.ByteList: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: boolean isLessonComplete(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: boolean hasId(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString(java.lang.String)>-><org.owasp.webgoat.challenges.challenge7.MD5: void update(java.lang.String)>
<org.owasp.webgoat.users.Scoreboard: java.util.List getRankings()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.constants.platform.Fcntl: java.lang.String toString()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><javax.xml.bind.JAXBException: java.lang.String toString()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$ReportCard: void setNumberOfAssignmentsSolved(int)>
