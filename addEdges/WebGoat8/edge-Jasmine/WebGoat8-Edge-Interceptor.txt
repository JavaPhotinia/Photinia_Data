<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.springframework.http.ResponseEntity ok(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.springframework.http.ResponseEntity ok(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5 getSqlInjectionLesson5()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.users.Scoreboard: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.challenges.challenge1.Assignment1: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUpload: org.springframework.http.ResponseEntity getProfilePicture()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: java.lang.String getMd5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.ssrf.SSRFTask2 getSSRFTask2()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.html_tampering.HtmlTamperingTask getHtmlTamperingTask()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier getStoredCrossSiteScriptingVerifier()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.service.LabelDebugService: void <init>(org.owasp.webgoat.session.LabelDebugger)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.cia.CIAQuiz: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy: void <init>()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: java.lang.String getSha256(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getSha256(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String follow(java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.jwt.JWTRefreshEndpoint getJWTRefreshEndpoint()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void <init>(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions getBypassRestrictionsFieldRestrictions()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.users.RegistrationController getRegistrationController()>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8 getSqlInjectionLesson8()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword getResetLinkAssignmentForgotPassword()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.assignments.LessonTrackerInterceptor: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl getIDORViewOwnProfileAltUrl()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a getSqlInjectionLesson6a()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: java.lang.String getPassword(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView start(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView start()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void initVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: void initVotes()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.idor.IDORDiffAttributes: void <init>()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.ssrf.SSRFTask1: void <init>()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity checkDebuggingStatus(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.CrossSiteScriptingLesson6a getCrossSiteScriptingLesson6a()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: java.lang.String getPrivateKey(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SigningAssignment: java.lang.String getPrivateKey(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: java.util.Collection retrieveComments(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput getProfileUploadRemoveUserInput()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment getClientSideFilteringFreeAssignment()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b getSqlInjectionLesson10b()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.CrossSiteScriptingLesson1 getCrossSiteScriptingLesson1()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.users.Scoreboard getScoreboard()>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.password_reset.SimpleMailAssignment getSimpleMailAssignment()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: void <init>()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.users.Scoreboard: java.util.List getRankings()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9 getSqlInjectionLesson9()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.webwolf_introduction.LandingAssignment getLandingAssignment()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.challenges.challenge7.Assignment7 getAssignment7()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.crypto.HashingAssignment getHashingAssignment()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz: boolean[] getResults()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.csrf.ForgedReviews: void <init>()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask: void <init>()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.mailbox.MailboxController: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.template.SampleAttack getSampleAttack()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson getVulnerableComponentsLesson()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.cia.CIAQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.ssrf.SSRFTask1 getSSRFTask1()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.deserialization.InsecureDeserializationTask getInsecureDeserializationTask()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.csrf.ForgedReviews getForgedReviews()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz getSqlInjectionQuiz()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson: void <init>()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.crypto.HashingAssignment: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.chrome_dev_tools.NetworkLesson getNetworkLesson()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.path_traversal.ProfileUploadRetrieval getProfileUploadRetrieval()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.chrome_dev_tools.NetworkDummy getNetworkDummy()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUpload: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView illegalCall()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation getBypassRestrictionsFrontendValidation()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webwolf.FileServer getFileServer()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: java.lang.String getFileLocation(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.FileServer: java.lang.String getFileLocation()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a getSqlInjectionLesson10a()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.crypto.EncodingAssignment: void <init>()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.http_basics.HttpBasicsLesson getHttpBasicsLesson()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.template.SampleAttack: java.util.List getItemsInBasket(java.lang.String)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.idor.IDORLogin getIDORLogin()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz: void <init>()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.challenges.challenge8.Assignment8: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.service.LessonProgressService: java.util.List lessonOverview()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.cia.CIAQuiz getCIAQuiz()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.assignments.LessonTrackerInterceptor: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>-><synthetic.method.SingletonFactory: synthetic.method.UserTrackerRepositoryImpl getUserTrackerRepositoryImpl()>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.csrf.CSRFFeedback getCSRFFeedback()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: void copyFiles(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.client_side_filtering.ShopEndpoint getShopEndpoint()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: void <init>()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.challenges.challenge7.Assignment7: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.DOMCrossSiteScripting: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.idor.IDORLogin: void <init>()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: void <init>()>-><org.owasp.webwolf.FileServer: void <init>()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: boolean[] getResults()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.jwt.JWTVotesEndpoint getJWTVotesEndpoint()>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1: void <init>()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: void <init>()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webwolf.user.RegistrationController getRegistrationController()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webwolf.mailbox.MailboxController getMailboxController()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.user.RegistrationController: java.lang.String showForm(org.owasp.webwolf.user.UserForm)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords getSqlOnlyInputValidationOnKeywords()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier getDOMCrossSiteScriptingVerifier()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: void <init>()>-><org.owasp.webwolf.user.RegistrationController: void <init>(org.owasp.webwolf.user.UserValidator,org.owasp.webwolf.user.UserService,org.springframework.security.authentication.AuthenticationManager)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.CrossSiteScriptingQuiz getCrossSiteScriptingQuiz()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: java.util.Collection retrieveReviews(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.ForgedReviews: java.util.Collection retrieveReviews()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13 getSqlInjectionLesson13()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.http_basics.HttpBasicsLesson: void <init>()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.idor.IDORDiffAttributes getIDORDiffAttributes()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.users.RegistrationController: java.lang.String showForm(org.owasp.webgoat.users.UserForm)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.path_traversal.ProfileUpload getProfileUpload()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.insecure_login.InsecureLoginTask getInsecureLoginTask()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: void <init>()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10 getSqlInjectionLesson10()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: void <init>()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.controller.StartLesson: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.session.Course)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.XOREncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.DOMCrossSiteScripting getDOMCrossSiteScripting()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation getSqlOnlyInputValidation()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: void <init>()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.controller.StartLesson getStartLesson()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.challenges.challenge5.Assignment5 getAssignment5()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.stored.StoredXssComments getStoredXssComments()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.users.RegistrationController: void <init>(org.owasp.webgoat.users.UserValidator,org.owasp.webgoat.users.UserService,org.springframework.security.authentication.AuthenticationManager)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.crypto.SigningAssignment getSigningAssignment()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.insecure_login.InsecureLoginTask: void <init>()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.CrossSiteScriptingLesson5a getCrossSiteScriptingLesson5a()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment: void <init>()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment: void <init>()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.client_side_filtering.Salaries: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: void <init>()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: java.lang.String getSecretToken(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.stored.StoredXssComments: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.service.LessonProgressService getLessonProgressService()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: void <init>()>-><org.owasp.webwolf.mailbox.MailboxController: void <init>(org.owasp.webwolf.mailbox.MailboxRepository)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.challenges.challenge1.Assignment1 getAssignment1()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a getSqlInjectionLesson5a()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.challenges.challenge8.Assignment8 getAssignment8()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.crypto.XOREncodingAssignment getXOREncodingAssignment()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: void initAssignment(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment getClientSideFilteringAssignment()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b getSqlInjectionLesson6b()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4 getSqlInjectionLesson4()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.service.LabelDebugService getLabelDebugService()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge getSqlInjectionChallenge()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.csrf.CSRFFeedback: void <init>()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin getSqlInjectionChallengeLogin()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.template.SampleAttack: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.client_side_filtering.Salaries getSalaries()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String decode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.jwt.JWTFinalEndpoint getJWTFinalEndpoint()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8: org.owasp.webgoat.assignments.AttackResult notUsed()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.crypto.SecureDefaultsAssignment getSecureDefaultsAssignment()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix: org.springframework.http.ResponseEntity getProfilePicture()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.crypto.SigningAssignment: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.assignments.LessonTrackerInterceptor: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.password_reset.SecurityQuestionAssignment getSecurityQuestionAssignment()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.ssrf.SSRFTask2: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.path_traversal.ProfileUploadFix getProfileUploadFix()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b getSqlInjectionLesson5b()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.password_reset.ResetLinkAssignment getResetLinkAssignment()>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3 getSqlInjectionLesson3()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.challenges.challenge5.Assignment5: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.crypto.XOREncodingAssignment: void <init>()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.webwolf_introduction.MailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.service.LessonProgressService: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.crypto.EncodingAssignment getEncodingAssignment()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.path_traversal.ProfileUpload: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.insecure_login.InsecureLoginTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.http_basics.HttpBasicsQuiz getHttpBasicsQuiz()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2 getSqlInjectionLesson2()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: java.lang.String getString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.assignments.LessonTrackerInterceptor: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.webwolf_introduction.MailAssignment getMailAssignment()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: void initIDORInfo(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.jwt.JWTSecretKeyEndpoint getJWTSecretKeyEndpoint()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.path_traversal.ProfileUploadFix: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.secure_password.SecurePasswordsAssignment getSecurePasswordsAssignment()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.core.io.ClassPathResource git()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity getVotes()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.cia.CIAQuiz: boolean[] getResults()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.FileServer$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
