<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$UnmodifiableCollection: int size()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.ChallengeIntro: java.lang.String getTitle()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.JavaObjectData: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.env.PropertySource: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><ch.qos.logback.classic.spi.ClassPackagingData: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjection: java.lang.String getTitle()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashMap$EntrySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.FunctionSQL: int hashCode()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.EnumMap$Values: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: boolean add(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean add(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.TemporaryVariable: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.util.collections.WeakHashSet: boolean isEmpty()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.http_basics.HttpBasics: java.lang.String getTitle()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.http.server.reactive.HttpHeadResponseDecorator: void <init>(org.springframework.http.server.reactive.ServerHttpResponse)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Optional: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.util.RecursiveComparator$Pair: int hashCode()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.thoughtworks.xstream.core.util.WeakCache: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.StringLiteral: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.beans.PropertyDescriptor: int hashCode()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.TreeMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.EnumMap$Values: int size()>
<java.lang.Object: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringValues: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.passes.CompilerPass: int hashCode()>
<org.springframework.core.style.DefaultToStringStyler: void styleField(java.lang.StringBuilder,java.lang.String,java.lang.Object)>-><org.springframework.core.style.DefaultToStringStyler: void styleValue(java.lang.StringBuilder,java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.stream.ForEachOps$ForEachTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.Collections$EmptySet: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.IdentityHashMap: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.MBeanParameterInfo: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$Values: void clear()>-><com.google.common.collect.Maps$TransformedEntriesMap: void clear()>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.imageio.ImageTypeSpecifier: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$SingletonSet: int size()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>
<io.undertow.util.HeaderValues: java.lang.Object remove(int)>-><io.undertow.util.HeaderValues: java.lang.String remove(int)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.TabularDataSupport: int hashCode()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><org.springframework.validation.AbstractBindingResult: java.util.List getAllErrors()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getCredentials()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.http.HttpRequest: org.springframework.http.HttpMethod getMethod()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.BasicPermission: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.UnboxedFixnum: int hashCode()>
<io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.misc.Signal: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set createEntrySet()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: void <init>(com.google.common.collect.Maps$TransformedEntriesMap)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: int size()>
<java.util.AbstractSet: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.validation.FieldError: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.base.AbstractInstant: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionMitigations: java.lang.String getTitle()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray()>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<org.jruby.util.JRubyClassLoader: void terminateJarIndexCacheEntries()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.internal.util.Pair: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: boolean equals(java.lang.Object)>
<io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.jruby.RubyHash$BaseSet: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.Row: boolean equals(java.lang.Object)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.security.Provider: void implPutAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.factory.config.RuntimeBeanReference: int hashCode()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.awt.Color: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.x509.RDN: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean removeFirstOccurrence(java.lang.Object)>-><io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: java.util.Iterator iterator()>-><io.undertow.util.HeaderValues: java.util.ListIterator iterator(int,boolean)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.DateTimeType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$SynchronizedMap: java.util.Set entrySet()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.mitigation.CrossSiteScriptingMitigation: java.lang.String getTitle()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.java.proxies.ArrayJavaProxy: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubySymbol: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.LinkedHashMap$LinkedValues: void clear()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.invoke.LambdaForm$Name: int hashCode()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void onClose()>-><org.springframework.context.support.AbstractApplicationContext: void onClose()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<io.undertow.servlet.spec.HttpSessionImpl: io.undertow.servlet.spec.HttpSessionImpl forSession(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: void <init>(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean,io.undertow.servlet.handlers.ServletRequestContext)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.awt.Point: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.AbstractCollection: java.lang.String toString()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.AbstractMap: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.jruby.anno.TypePopulator$ReflectiveTypePopulator: void addBoundMethodsUnlessOmited(org.jruby.Ruby,java.lang.String,java.util.List)>-><io.undertow.util.HeaderValues: int size()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.AbstractMap$1: void clear()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.lang.String resolveRequestUri(reactor.netty.http.server.HttpServerRequest)>-><reactor.netty.http.server.HttpServerRequest: java.lang.String uri()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.core.style.DefaultToStringStyler: void styleIdentityHashCode(java.lang.StringBuilder,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.awt.image.ColorModel: int hashCode()>
<com.google.common.collect.TransformedIterator: java.lang.Object next()>-><com.google.common.collect.Multimaps$Keys$1: java.lang.Object transform(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.locale.BaseLocale: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><java.net.URI: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.type.ClassKey: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.lang.ProcessEnvironment$StringValues: int size()>
<com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: boolean containsKey(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>
<java.util.EnumMap: int entryHashCode(int)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object)>-><org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object,org.springframework.core.style.ToStringStyler)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<java.util.TreeMap: void putAll(java.util.Map)>-><java.util.Collections$SynchronizedSortedMap: java.util.Comparator comparator()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$UnmodifiableSet: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.thoughtworks.xstream.io.path.Path: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.util.TypeKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.Collections$SynchronizedCollection: void clear()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: void <init>(reactor.netty.http.server.HttpServerRequest,org.springframework.core.io.buffer.NettyDataBufferFactory)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.servlet.spec.HttpSessionImpl: io.undertow.servlet.spec.HttpSessionImpl forSession(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>-><io.undertow.servlet.handlers.ServletRequestContext: io.undertow.servlet.handlers.ServletRequestContext current()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractList: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues$1: java.lang.String next()>-><io.undertow.util.HeaderValues: java.lang.String get(int)>
<org.owasp.webgoat.lessons.Hint: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getAssignmentPath()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.ArraysParallelSortHelpers$FJObject$Merger: void compute()>-><org.springframework.core.OrderComparator: int compare(java.lang.Object,java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean isEmpty()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.util.LinkedMultiValueMap: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Locale: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.imageio.ImageTypeSpecifier: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ast.SymbolNode: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap: boolean isEmpty()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyModule: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.util.ByteList: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractCollection: boolean isEmpty()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.CompositeDataSupport: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$3$1: void accept(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeSet: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.SecureKey: int hashCode()>
<java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>-><java.util.Collections$SynchronizedSortedSet: java.util.Comparator comparator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.type.ClassKey: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.nio.ByteBuffer: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Float: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$KeySet: int size()>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.internal.database.base.Schema: int hashCode()>
<java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>-><java.util.ArrayDeque: boolean contains(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyThread: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.jruby.RubyHash$BaseSet: void clear()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.crypto.Crypto: java.lang.String getTitle()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.String: boolean startsWith(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray(java.lang.Object[])>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.api.Location: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.security.access.SecurityConfig: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.passes.CompilerPass: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.sql.DriverInfo: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues$1: void set(java.lang.Object)>-><io.undertow.util.HeaderValues$1: void set(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.text.ParsePosition: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.util.RawValue: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.field.MillisDurationField: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.util.LinkedMultiValueMap: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<java.util.AbstractMap: int hashCode()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.springframework.validation.BindException: java.lang.String getMessage()>
<org.springframework.core.style.DefaultToStringStyler: void styleEnd(java.lang.StringBuilder,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.internal.util.Pair: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.matcher.RegexRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps: java.lang.Object safeGet(java.util.Map,java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.Boolean: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.flywaydb.core.api.Location: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues$1: void set(java.lang.String)>-><io.undertow.util.HeaderValues: java.lang.String set(int,java.lang.String)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.awt.Color: boolean equals(java.lang.Object)>
<java.util.stream.AbstractTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$1: io.undertow.servlet.spec.ServletPrintWriterDelegate run()>-><io.undertow.servlet.spec.ServletPrintWriterDelegate: sun.misc.Unsafe access$000()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Vector: boolean isEmpty()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.JapaneseImperialCalendar: int hashCode()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.AbstractList: void clear()>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: int hashCode()>
<io.undertow.util.HeaderValues: boolean offerLast(java.lang.String)>-><io.undertow.util.HeaderValues: void offerLastMultiValue(java.lang.String,int,java.lang.String[])>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.cglib.core.Signature: int hashCode()>
<javax.security.auth.Subject$SecureSet: void clear()>-><javax.security.auth.Subject$SecureSet$6: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpSessionImpl$UnwrapSessionAction: io.undertow.server.session.Session run()>-><io.undertow.servlet.spec.HttpSessionImpl: io.undertow.server.session.Session getSession()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.ProcessEnvironment$StringEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: boolean isEmpty()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Date: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Byte: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.UUID: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.PropertyValue: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.AllPermission: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.http.server.reactive.NettyHeadersAdapter: java.util.Set entrySet()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter)>
<org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>-><com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set createEntrySet()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.BeanMetadataAttribute: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.AttributeEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<java.util.AbstractList: void removeRange(int,int)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<io.undertow.util.HeaderValues: java.lang.String get(int)>-><java.lang.AssertionError: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(sun.security.ssl.ProtocolVersion)>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Vector: boolean equals(java.lang.Object)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: boolean equals(java.lang.Object)>
<org.springframework.core.annotation.AnnotationTypeMapping: java.util.Map resolveAliasedForTargets()>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: boolean equals(java.lang.Object)>
<io.undertow.servlet.api.ServletInfo: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.ArrayType: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.SubList: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.AbstractList$Itr: boolean hasNext()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$SynchronizedMap: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.jsontype.NamedType: int hashCode()>
<javax.crypto.JceSecurity: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.lang.String)>-><java.security.Provider$Service: java.security.Provider getProvider()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String value()>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.util.ClassUtils: java.lang.String getShortNameAsProperty(java.lang.Class)>-><org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><io.undertow.util.HeaderValues: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.lang.ProcessEnvironment$StringKeySet: int size()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<java.util.SubList: void removeRange(int,int)>-><java.util.Vector: void removeRange(int,int)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyBasicObject: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<sun.security.ssl.SSLSessionImpl: int hashCode()>-><sun.security.ssl.SessionId: int hashCode()>
<com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>-><com.google.common.collect.Maps: com.google.common.base.Function asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)>
<org.springframework.http.HttpRequest: org.springframework.http.HttpMethod getMethod()>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: java.lang.String getMethodValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.TreeMap$Values: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.TreeMap$Values: int size()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.DateTimeZone: int hashCode()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate: sun.misc.Unsafe getUnsafe0()>-><java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.TextNode: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubySymbol: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.reflect.Method: java.lang.String getName()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String getServletName()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String getRedirectUrl()>-><org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><ch.qos.logback.core.joran.spi.ElementSelector: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.AbstractSet: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.util.collections.WeakHashSet: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.MBeanNotificationInfo: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ForEachOps$ForEachOp$OfRef: void accept(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.text.DigitList: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.jruby.RubyModule: boolean defineAnnotatedMethod(java.lang.String,java.util.List,org.jruby.runtime.MethodFactory)>-><io.undertow.util.HeaderValues: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.Fixnum: int hashCode()>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><org.springframework.util.ObjectUtils: java.lang.Object[] toObjectArray(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$SingletonMap: java.util.Set entrySet()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.http.HttpEntity: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.AbstractServerHttpRequest: void <init>(java.net.URI,java.lang.String,org.springframework.http.HttpHeaders)>-><org.springframework.http.HttpHeaders: org.springframework.http.HttpHeaders readOnlyHttpHeaders(org.springframework.http.HttpHeaders)>
<java.lang.Object: java.lang.String toString()>-><java.security.UnresolvedPermission: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.jruby.util.collections.WeakHashSet: int size()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$TransformedEntriesMap: void clear()>-><java.util.Collections$UnmodifiableMap: void clear()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Optional: boolean equals(java.lang.Object)>
<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.concurrent.ArrayBlockingQueue: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.io.FilePermission: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Date: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.AbstractMap$1: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.AbstractMap$1: int size()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.jruby.util.collections.WeakHashSet: void clear()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyNil: int hashCode()>
<java.util.Collections$SetFromMap: void <init>(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.util.Set keySet()>
<com.google.common.collect.Multimaps$Keys: int distinctElements()>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.validation.BindException: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$TransformedEntriesMap$1: void <init>(com.google.common.collect.Maps$TransformedEntriesMap)>-><com.google.common.collect.Maps$EntrySet: void <init>()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.TabularType: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.boot.model.relational.Namespace$Name: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.String: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.security.web.header.Header: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.BigIntegerNode: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.AbstractCollection: void clear()>-><io.micrometer.shaded.org.pcollections.IntTreePMap$1: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.CrossSiteScripting: java.lang.String getTitle()>
<java.util.AbstractSet: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Float: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Float: int hashCode()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer extractPathWithinApplication(org.springframework.http.server.PathContainer,org.springframework.http.server.PathContainer)>-><org.springframework.http.server.DefaultPathContainer: java.util.List elements()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.EnumMap$KeySet: int size()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$EmptyMap: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.chrono.BasicChronology: int hashCode()>
<java.util.AbstractMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$Values: int size()>-><java.util.Collections$UnmodifiableMap: int size()>
<com.google.common.collect.Maps$TransformedEntriesMap: int size()>-><java.util.Collections$UnmodifiableMap: int size()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.runtime.Arity: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<java.util.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.ResourceBundle$CacheKey: int hashCode()>
<org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.slf4j.LoggerFactory: java.util.Set findPossibleStaticLoggerBinderPathSet()>-><java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
<io.undertow.servlet.spec.SecurityActions$2: java.lang.Object run()>-><io.undertow.servlet.spec.SecurityActions$2: io.undertow.servlet.spec.HttpSessionImpl run()>
<org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.ClobDataID: int hashCode()>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>-><java.util.ArrayDeque: java.lang.Object[] toArray()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.StringBuilder: void <init>()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: boolean equals(java.lang.Object)>
<java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>-><java.util.stream.MatchOps$MatchKind: boolean access$000(java.util.stream.MatchOps$MatchKind)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<java.util.LinkedHashMap$LinkedValues: void clear()>-><java.util.LinkedHashMap: void clear()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.HashMap$Node: java.lang.Object getValue()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.jsoup.helper.ChangeNotifyingArrayList: void clear()>-><java.util.ArrayList: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.asm.Handle: int hashCode()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>
<sun.net.RegisteredDomain: java.lang.String getRegisteredDomain(java.lang.String)>-><java.util.AbstractCollection: boolean contains(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.validation.BindException: int hashCode()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.HashMap$KeySet: void clear()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: void clear()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.google.common.collect.Maps$Values: int size()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.cert.Certificate: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.passes.CompilerPass: boolean equals(java.lang.Object)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.TimestampData: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.util.Arrays: java.lang.String toString(java.lang.Object[])>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><java.lang.String: java.lang.String valueOf(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.tz.CachedDateTimeZone: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$SingletonSet: int size()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: boolean equals(java.lang.Object)>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>-><java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><java.util.ArrayList: void <init>(int)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.Boolean: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.ArrayList: void <init>(java.util.Collection)>-><java.util.ArrayDeque: java.lang.Object[] toArray()>
<org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<java.time.format.DateTimeTextProvider$1: int compare(java.util.Map$Entry,java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.service.HintService: java.util.stream.Stream lambda$createAssignmentHints$1(java.util.List)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.asm.MemberSubstitution: int hashCode()>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Locale$LocaleKey: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1: java.lang.Object transform(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$1: com.google.common.collect.Multiset$Entry transform(java.util.Map$Entry)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><ch.qos.logback.core.subst.Token: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyObject: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><ch.qos.logback.core.status.StatusBase: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.BinaryNode: int hashCode()>
<org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: java.lang.String removeFirst()>-><java.util.NoSuchElementException: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.cia.CIA: java.lang.String getTitle()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><javax.security.auth.Subject$SecureSet: int size()>
<java.util.Hashtable: java.lang.String toString()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashSet: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Long: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.util.RecursiveComparator$Pair: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.HashMap$KeySet: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.AbstractSet: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.ZoneId: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.field.PreciseDurationField: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.Symbol: boolean equals(java.lang.Object)>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.ArrayList$SubList: int size()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Double: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.BinaryData: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.convert.TypeDescriptor: int hashCode()>
<java.util.TreeMap$Entry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.headius.invokebinder.Signature: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.thoughtworks.xstream.io.path.Path: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$EmptyList: int hashCode()>
<com.google.common.collect.Maps: com.google.common.collect.Maps$EntryTransformer asEntryTransformer(com.google.common.base.Function)>-><com.google.common.collect.Maps$7: void <init>(com.google.common.base.Function)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.Constructor: int hashCode()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.HintService: void <init>(org.owasp.webgoat.session.WebSession)>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: void <init>(reactor.netty.http.server.HttpServerRequest,org.springframework.core.io.buffer.NettyDataBufferFactory)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><com.google.common.collect.Maps$EntrySet: void clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList$1: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.math.BigDecimal: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.WeakHashMap$KeySet: int size()>
<java.lang.Object: java.lang.String toString()>-><java.nio.ByteBuffer: int hashCode()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.IRScope: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.Expression: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.util.DerValue: int hashCode()>
<sun.security.ssl.SecureKey: int hashCode()>-><java.lang.Object: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Hashtable$ValueCollection: void clear()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.validation.AbstractBindingResult: int getErrorCount()>-><java.util.LinkedList: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.field.MillisDurationField: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<java.util.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.TreeMap$KeySet: int size()>
<org.jruby.RubyModule$MethodClumper: void clump(java.lang.Class)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.util.AbstractCollection: void clear()>-><io.micrometer.shaded.org.pcollections.IntTree$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Double: int hashCode()>
<io.undertow.util.HeaderValues: java.lang.String removeLast()>-><io.undertow.util.HeaderValues: java.lang.String pollLast()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.WeakHashMap$EntrySet: int size()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.jruby.RubyArray: void clear()>-><org.jruby.specialized.RubyArrayOneObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.io.ClassPathResource: int hashCode()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><org.owasp.webgoat.lessons.Assignment: java.util.List getHints()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.String: char charAt(int)>
<io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.core.style.DefaultToStringStyler: void styleValue(java.lang.StringBuilder,java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.IntervalMonthData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.field.UnsupportedDurationField: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.util.RecursiveComparator$Pair: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.io.ObjectStreamClass$FieldReflectorKey: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.IdentityHashMap$Values: void clear()>
<java.util.IdentityHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.util.Set entrySet()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.logging.Level: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.time.MonthDay: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.UnboxedBoolean: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByName(java.lang.String)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.ResourceBundle$CacheKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.net.URI: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: java.util.ArrayDeque$DeqSpliterator trySplit()>-><java.util.ArrayDeque$DeqSpliterator: void <init>(java.util.ArrayDeque,int,int)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>-><com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.RubyArray: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.persist.CachedObjectBase: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Arrays$ArrayList: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.awt.Font: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyObject: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.Symbol: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.BeanMetadataAttribute: int hashCode()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.math.BigInteger: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.AbstractMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.jruby.javasupport.binding.ClassInitializer: void setupClassMethods(java.lang.Class,org.jruby.javasupport.binding.Initializer$State)>-><io.undertow.util.HeaderValues: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReduceOps$3ReducingSink: void accept(java.lang.Object)>
<org.springframework.security.web.FilterInvocation: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.Maps$Values: java.util.Iterator iterator()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.ProcessEnvironment$StringEntrySet: int hashCode()>
<java.lang.ProcessEnvironment$StringKeySet: void clear()>-><java.util.HashMap$KeySet: void clear()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.stream.ForEachOps$ForEachOrderedTask: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.stream.Sink)>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<sun.security.ssl.SessionId: boolean equals(java.lang.Object)>-><sun.security.ssl.SessionId: byte[] getId()>
<java.util.AbstractSet: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.font.AttributeValues: int hashCode()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.JumboEnumSet: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.IntervalMonthData: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.Clock$SystemClock: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$UnmodifiableMap: int hashCode()>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><java.lang.Object: java.lang.Class getClass()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.ClobDataID: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: boolean equals(java.lang.Object)>
<sun.security.ssl.SSLSessionImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.concurrent.locks.ReentrantLock: boolean hasWaiters(java.util.concurrent.locks.Condition)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>-><java.util.TreeSet: java.util.Comparator comparator()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.SubList$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.net.URI: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictions: java.lang.String getTitle()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: void clear()>-><java.util.concurrent.ConcurrentHashMap: void clear()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.text.AttributeEntry: java.lang.Object getKey()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>-><java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int,int)>-><org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.RowType: boolean equals(java.lang.Object)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<org.owasp.webgoat.lessons.Hint: int hashCode()>-><java.lang.String: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Vector: void clear()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$1: java.lang.Object next()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: java.lang.Object getTarget()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Maps$EntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.Type: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.Fixnum: int hashCode()>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: boolean equals(java.lang.Object)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.security.ssl.SSLSessionContextImpl$1: java.lang.Object run()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.Collections$UnmodifiableList: java.util.List subList(int,int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.util.collections.WeakHashSet: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<io.undertow.util.HeaderValues: java.lang.String remove(int)>-><java.lang.IndexOutOfBoundsException: void <init>()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.core.style.DefaultToStringStyler: void styleIdentityHashCode(java.lang.StringBuilder,java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Map map()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.field.ScaledDurationField: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<com.google.common.collect.Maps: java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps: java.util.SortedMap transformEntries(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap$LinkedKeySet: void clear()>-><java.util.LinkedHashMap: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object get(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.util.List get(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.NullNode: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.util.TypeKey: int hashCode()>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><java.util.Collections$EmptySet: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.IntervalSecondData: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.util.collections.WeakHashSet: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.TreeMap$KeySet: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.util.ObjectIdentifier: int hashCode()>
<java.util.Comparators$NaturalOrderComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.Duration: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeMap$Values: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>-><io.undertow.util.HeaderValues: int size()>
<io.undertow.util.HeaderValues: void addLast(java.lang.String)>-><java.lang.IllegalStateException: void <init>()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.DistinctOps$1$2: void accept(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.PatternEntry: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.text.AttributeEntry: java.lang.Object getValue()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.EnumMap$EntrySet: void clear()>
<java.util.HashMap$Node: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.field.ScaledDurationField: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.BuddhistCalendar: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.FindOps$FindSink: void accept(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: int hashCode()>
<org.springframework.http.server.reactive.AbstractServerHttpRequest: void <init>(java.net.URI,java.lang.String,org.springframework.http.HttpHeaders)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.jruby.RubyArray: void clear()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: int size()>-><java.util.ArrayDeque: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.google.common.collect.Multimaps$Keys$1$1: int getCount()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.TabularType: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.util.List getAssignments()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyMatchData: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.sql.DriverInfo: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.Period: int hashCode()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.core.Conventions: java.lang.Class getClassForValue(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><java.util.ArrayDeque: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object get(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.String: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$SingletonList: int size()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.expression.TypedValue: int hashCode()>
<java.util.stream.AbstractTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.StringCharacterIterator: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<sun.security.ssl.SecureKey: int hashCode()>-><java.security.AccessControlContext: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.time.LocalDate: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.IntervalMonthData: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<org.springframework.validation.BindException: java.lang.String getMessage()>-><org.springframework.validation.AbstractErrors: java.lang.String toString()>
<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.TemporaryVariable: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.JavaType: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Multisets$EntrySet: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.thoughtworks.xstream.core.util.FastField: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.lang.ProcessEnvironment$StringKeySet: void clear()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.support.NullBean: int hashCode()>
<org.jruby.util.io.SelectorPool: java.nio.channels.Selector retrieveFromPool(java.nio.channels.spi.SelectorProvider)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<java.security.Provider: void implPutAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.lang.StringBuilder: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.HsqlNameManager$HsqlName: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.hibernate.boot.model.relational.Namespace: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><ch.qos.logback.core.joran.spi.ElementSelector: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.interpreter.Profiler$IRCallSite: int hashCode()>
<io.undertow.util.HeaderValues: java.lang.String get(int)>-><io.undertow.util.HeaderValues: int index(int)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: int hashCode()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>-><java.util.TreeMap$KeySet: java.util.Comparator comparator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><ch.qos.logback.classic.spi.ClassPackagingData: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.Method: int hashCode()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.BasicChronology: int hashCode()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.net.URL: int hashCode()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.core.JsonLocation: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.ProcessEnvironment$ExternalData: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.SubList: int size()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.validation.ObjectError: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.util.Collections$UnmodifiableCollection: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<sun.text.normalizer.IntTrie: int getSurrogateOffset(char,char)>-><sun.net.idn.StringPrep$StringPrepTrieImpl: int getFoldingOffset(int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: java.lang.RuntimeException concurrentModification(org.jruby.Ruby,java.lang.Exception)>
<org.owasp.webgoat.lessons.Hint: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getHint()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Character: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: java.lang.String[] toArray()>-><java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: int hashCode()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.AbstractMap$SimpleEntry: int hashCode()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.core.log.CompositeLog: boolean isDebugEnabled()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.HashSet: int size()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.TabularDataSupport: int hashCode()>
<io.undertow.util.HeaderValues: void addLast(java.lang.String)>-><io.undertow.util.HeaderValues: boolean offerLast(java.lang.String)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<java.util.Collections$EmptySet: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.ISOChronology: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyBasicObject: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.TreeSet: void clear()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.TreeMap$EntrySet: int size()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.google.common.collect.Maps$7: java.lang.Object transformEntry(java.lang.Object,java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><javax.security.auth.Subject$SecureSet: void clear()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.BlobDataID: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.security.Provider$UString: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><javax.management.ObjectName: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: void appendFields(org.springframework.core.style.ToStringCreator)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.calendar.CalendarDate: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: int hashCode()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.net.InetSocketAddress: int hashCode()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.MonthDay: int hashCode()>
<java.util.stream.ForEachOps$ForEachOrderedTask: void doCompute(java.util.stream.ForEachOps$ForEachOrderedTask)>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.time.ZonedDateTime: int hashCode()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$1: java.lang.Object run()>-><io.undertow.servlet.spec.ServletPrintWriterDelegate$1: io.undertow.servlet.spec.ServletPrintWriterDelegate run()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.EnumMap$KeySet: int size()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.TreeMap$Values: void clear()>-><java.util.TreeMap: void clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyFixnum: int hashCode()>
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.AbstractServerHttpRequest: void <init>(java.net.URI,java.lang.String,org.springframework.http.HttpHeaders)>-><org.springframework.http.server.RequestPath: org.springframework.http.server.RequestPath parse(java.net.URI,java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.SimpleTimeZone: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.JumboEnumSet: boolean isEmpty()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>
<java.util.Collections$SetFromMap: void <init>(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: boolean isEmpty()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<org.owasp.webgoat.service.HintService: org.owasp.webgoat.lessons.Hint lambda$createHint$2(org.owasp.webgoat.lessons.Assignment,java.lang.String)>-><org.owasp.webgoat.lessons.Hint: void <init>(java.lang.String,java.lang.String)>
<java.util.ArrayList: void <init>(java.util.Collection)>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.temporal.WeekFields: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$Values: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Hashtable$EntrySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.boot.ansi.Ansi8BitColor: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<com.google.common.collect.Maps$EntrySet: void clear()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Map map()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.chrono.AbstractChronology: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.x509.RDN: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.StackTraceElement: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.util.ByteList: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.html_tampering.HtmlTampering: java.lang.String getTitle()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.LocalTime: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.BinaryData: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.util.matcher.RegexRequestMatcher: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.LocalDate: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.String toString()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.lang.String: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashMap$KeySet: void clear()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.TreeMap$Values: void clear()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.stream.AbstractShortCircuitTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.io.ByteArrayResource: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<org.springframework.core.style.ToStringCreator: java.lang.String toString()>-><org.springframework.core.style.DefaultToStringStyler: void styleEnd(java.lang.StringBuilder,java.lang.Object)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.WeakHashMap$Values: int size()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.http.server.reactive.ReactorServerHttpResponse: void <init>(reactor.netty.http.server.HttpServerResponse,org.springframework.core.io.buffer.DataBufferFactory)>
<org.jruby.javasupport.JavaClass: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.HsqlException: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.WeakHashMap$Values: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.security.provider.PolicyParser$PrincipalEntry: int hashCode()>
<java.util.Collections$ReverseComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: int size()>-><io.undertow.util.HeaderValues: int size()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponents: java.lang.String getTitle()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.boot.ansi.Ansi8BitColor: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.aop.support.AbstractPointcutAdvisor: int hashCode()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.jruby.RubyHash: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: void clear()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.factory.config.BeanDefinitionHolder: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><ch.qos.logback.core.subst.Node: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.util.MimeType: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.field.MillisDurationField: int hashCode()>
<java.util.AbstractList: void clear()>-><java.util.Collections$EmptyList: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.jca.ProviderConfig: int hashCode()>
<sun.security.ssl.JsseJce$1: java.lang.Void run()>-><java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.jruby.RubyArray: int size()>
<java.util.Collections$UnmodifiableList: java.util.List subList(int,int)>-><io.undertow.util.HeaderValues: java.util.List subList(int,int)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap: java.util.Set entrySet()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: int hashCode()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.undertow.util.CopyOnWriteMap: java.util.Set entrySet()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.ComparableTimSort: void mergeLo(int,int,int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$Values: int size()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.util.collections.WeakHashSet: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.JavaObjectData: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><javax.management.MBeanOperationInfo: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.SimpleTimeZone: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.io.File: int hashCode()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Maps$TransformedEntriesMap: boolean containsKey(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean containsKey(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.util.TreeMap$Entry: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><java.lang.reflect.Method: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Vector: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.LinkedList: int size()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: void clear()>-><jnr.constants.ConstantSet: java.util.Iterator iterator()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyString: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeMap$EntrySet: void clear()>
<org.springframework.security.web.FilterInvocation: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps: java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$TransformedEntriesMap: void <init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.text.AttributeEntry: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.LinkedHashMap$LinkedValues: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayDeque: boolean isEmpty()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque: java.lang.Object[] toArray()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.TabularType: int hashCode()>
<java.util.WeakHashMap$Values: void clear()>-><java.util.WeakHashMap: void clear()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.zone.ZoneOffsetTransition: int hashCode()>
<com.google.common.collect.Maps$Values: int size()>-><com.google.common.collect.Maps$TransformedEntriesMap: int size()>
<io.undertow.util.HeaderValues: boolean removeFirstOccurrence(java.lang.Object)>-><io.undertow.util.HeaderValues: java.lang.String remove(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.javasupport.JavaClass: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.internal.util.Pair: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.jsonwebtoken.impl.JwtMap: java.util.Set entrySet()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.BinaryData: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.LocalDateTime: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.ArrayList: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.javasupport.JavaObject: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyThread: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.support.AbstractBeanDefinition: int hashCode()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String getAssignmentPath()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: int hashCode()>
<org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: int size()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Map map()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.IRScope: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Double: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Multimaps: java.util.Collection access$000(java.util.Collection)>-><com.google.common.collect.Multimaps: java.util.Collection unmodifiableValueCollection(java.util.Collection)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><io.undertow.servlet.spec.SecurityActions$2: java.lang.Object run()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.cglib.core.ClassInfo: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.DurationFieldType$StandardDurationFieldType: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.LocalDate: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.lang.String getScheme(reactor.netty.http.server.HttpServerRequest)>-><reactor.netty.http.server.HttpServerRequest: java.lang.String scheme()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.ArrayDeque: void clear()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.google.common.collect.Multimaps$UnmodifiableMultimap$1: void <init>(com.google.common.collect.Multimaps$UnmodifiableMultimap)>-><java.lang.Object: void <init>()>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: int hashCode()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyFloat: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.AttributedCharacterIterator$Attribute: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.base.AbstractPartial: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.aop.support.AbstractPointcutAdvisor: int hashCode()>
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: boolean remove(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.core.log.CompositeLog: void debug(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()>-><com.google.common.collect.Multimaps$Keys$1: void <init>(com.google.common.collect.Multimaps$Keys,java.util.Iterator)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.io.File: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.FrozenString: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: void <init>()>-><com.google.common.collect.Sets$ImprovedAbstractSet: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.config.BeanDefinitionHolder: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.validation.FieldError: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: boolean isEmpty()>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.javasupport.JavaArray: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Enum: int hashCode()>
<java.util.SubList: void removeRange(int,int)>-><java.util.AbstractList: void removeRange(int,int)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.internal.database.base.Schema: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.field.UnsupportedDurationField: int hashCode()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.String: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<io.undertow.servlet.api.ServletInfo: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.FrozenString: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.base.AbstractInstant: int hashCode()>
<org.jruby.util.JRubyClassLoader: void terminateJarIndexCacheEntries()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.ArrayDeque: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.ProcessEnvironment$ExternalData: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.invoke.MethodType: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.net.SocketPermission: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.PropertyValue: int hashCode()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues$1: void <init>(io.undertow.util.HeaderValues,int,boolean)>-><java.lang.Object: void <init>()>
<org.jruby.specialized.RubyArrayTwoObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyBasicObject: org.jruby.Ruby getRuntime()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<sun.security.ssl.SSLSessionImpl: java.lang.String getCipherSuite()>-><sun.security.ssl.SSLSessionImpl: sun.security.ssl.CipherSuite getSuite()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.util.locale.BaseLocale: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.IdentityHashMap$KeySet: void clear()>-><java.util.IdentityHashMap: void clear()>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringEntrySet: int hashCode()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.dom4j.tree.BackedList: void clear()>-><java.util.ArrayList: void clear()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.awt.Color: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object get(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.jruby.specialized.RubyArrayTwoObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.Ruby: org.jruby.runtime.builtin.IRubyObject getNil()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$Values: boolean isEmpty()>-><java.util.Collections$UnmodifiableMap: boolean isEmpty()>
<org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyBasicObject: org.jruby.Ruby getRuntime()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Package: int hashCode()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.AbstractList: void clear()>-><org.jruby.runtime.ObjectSpace$ObjectGroup: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.slf4j.helpers.SubstituteLogger: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.invoke.LambdaForm$Name: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<java.util.Collections$UnmodifiableCollection: boolean isEmpty()>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.CompositeDataSupport: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$EmptySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.env.PropertySource: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.JavaType: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.core.io.SerializedString: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.WeakHashMap$KeySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.util.Map$Entry next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.management.openmbean.TabularDataSupport: boolean isEmpty()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList: java.util.Iterator iterator()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.io.File: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.TextNode: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.LinkedHashMap$LinkedKeySet: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.PatternEntry: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.jruby.util.JRubyClassLoader: void terminateJarIndexCacheEntries()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.GregorianCalendar: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.SubList: int size()>
<java.util.AbstractSet: int hashCode()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.MessageFormat: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.jruby.RubyHash$BaseCollection: void clear()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.security.web.util.matcher.RegexRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$SynchronizedMap: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$SynchronizedSet: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.base.AbstractDuration: int hashCode()>
<java.lang.ThreadLocal: java.lang.Object setInitialValue()>-><io.undertow.servlet.core.ApplicationListeners$1: java.lang.Object initialValue()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.sql.DriverInfo: int hashCode()>
<com.google.common.collect.Maps: java.util.SortedMap transformEntriesIgnoreNavigable(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$TransformedEntriesSortedMap: void <init>(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.TimeData: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.concurrent.locks.ReentrantLock: boolean hasWaiters(java.util.concurrent.locks.Condition)>-><java.lang.NullPointerException: void <init>()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.Collections$UnmodifiableCollection: int size()>-><java.util.ArrayDeque: int size()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.insecure_login.InsecureLogin: java.lang.String getTitle()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyFixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.OffsetTime: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.util.MimeType: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: int hashCode()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.config.BeanExpressionContext: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.Proxy$Key1: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps: java.lang.Object safeGet(java.util.Map,java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Vector$Itr: boolean hasNext()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: sun.security.ssl.SessionId getSessionId()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.internal.info.MigrationInfoImpl: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.Provider$ServiceKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><sun.security.provider.PolicyFile$SelfPermission: int hashCode()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<io.undertow.util.CopyOnWriteMap: int size()>-><java.util.HashMap: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><java.net.IDN$1: java.lang.Object run()>
<java.lang.Object: java.lang.String toString()>-><org.hsqldb.HsqlException: int hashCode()>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.locale.BaseLocale$Key: int hashCode()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.web.header.Header: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.api.Location: boolean equals(java.lang.Object)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.EnumMap$Values: void clear()>-><java.util.EnumMap: void clear()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.io.ByteArrayResource: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubySymbol: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.Row: int hashCode()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><com.google.common.collect.Multisets$EntrySet: void clear()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.jruby.util.JRubyClassLoader: void terminateJarIndexCacheEntries()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.UnboxedBoolean: int hashCode()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.time.format.DateTimeTextProvider$1: int compare(java.util.Map$Entry,java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.Proxy$Key1: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: boolean equals(java.lang.Object)>
<org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object,org.springframework.core.style.ToStringStyler)>-><java.lang.StringBuilder: void <init>(int)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.Instant: int hashCode()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.lang.reflect.Parameter: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.EnumMap$EntrySet: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: int size()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.Boolean: boolean booleanValue()>
<sun.security.ssl.SSLSessionImpl: java.lang.String toString()>-><sun.security.ssl.SSLSessionImpl: java.lang.String getCipherSuite()>
<java.util.Hashtable: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Date: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.CurrentScope: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Hashtable$Entry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.factory.support.AbstractBeanDefinition: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.io.support.EncodedResource: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashSet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.missing_ac.MissingFunctionAC: java.lang.String getTitle()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyHash$ConvertingEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Optional: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.asm.Type: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap$EntrySet: void clear()>-><java.util.IdentityHashMap: void clear()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.BinaryNode: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.security.x509.Extension: int hashCode()>
<com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.math.BigDecimal: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.security.web.header.Header: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.AbstractList: void removeRange(int,int)>-><java.util.AbstractList: java.util.ListIterator listIterator(int)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: void clear()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.context.support.ApplicationListenerDetector: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.Comparators$NaturalOrderComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<com.google.common.collect.Multisets$EntrySet: void clear()>-><com.google.common.collect.Multimaps$Keys: void clear()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.RegularEnumSet: int size()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<java.util.Collections$UnmodifiableMap: java.util.Collection values()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Collection values()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.io.InputStreamResource: int hashCode()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.internal.info.MigrationInfoImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><org.springframework.security.authentication.AbstractAuthenticationToken: boolean isAuthenticated()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyString: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashMap$EntrySet: void clear()>
<java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>-><java.util.stream.MatchOps$MatchKind: boolean access$100(java.util.stream.MatchOps$MatchKind)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.tz.FixedDateTimeZone: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.HashMap$Node: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: int hashCode()>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.jar.Manifest: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.FrozenString: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyArray: boolean isEmpty()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: void clear()>-><java.security.Provider: void clear()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: java.lang.String remove(int)>-><java.lang.AssertionError: void <init>()>
<java.lang.Object: java.lang.String toString()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.aop.framework.JdkDynamicAopProxy: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.time.Duration: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext$ServerManager: reactor.core.publisher.Mono handle(org.springframework.http.server.reactive.ServerHttpRequest,org.springframework.http.server.reactive.ServerHttpResponse)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.util.RecursiveComparator$Pair: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.DefaultPathContainer: java.util.List elements()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$UnmodifiableSet: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.ArrayType: int hashCode()>
<org.springframework.validation.BindException: java.lang.Object getTarget()>-><org.springframework.validation.BeanPropertyBindingResult: java.lang.Object getTarget()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractList$Itr: java.lang.Object next()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.javasupport.JavaClass: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.StartWebGoat: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.GJCacheKey: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.TimeData: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.lang.Object: java.lang.String toString()>-><java.awt.Font: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.security.web.header.Header: int hashCode()>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.WeakCache$CacheKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.PropertyName: int hashCode()>
<java.util.Collections$SynchronizedSortedMap: java.util.Comparator comparator()>-><java.util.TreeMap: java.util.Comparator comparator()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.validation.BindException: int hashCode()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.ssrf.SSRF: java.lang.String getTitle()>
<io.undertow.servlet.api.ServletInfo: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.jar.Attributes: boolean isEmpty()>
<java.util.AbstractMap$1: void clear()>-><java.util.AbstractMap: void clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.security.Provider: java.util.Set entrySet()>
<org.springframework.core.style.DefaultToStringStyler: void styleIdentityHashCode(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.util.ObjectUtils: java.lang.String getIdentityHexString(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.javasupport.JavaConstructor: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap: java.util.Set entrySet()>
<java.util.Collections$EmptySet: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Character$Subset: int hashCode()>
<io.undertow.util.HeaderValues: java.lang.String remove(int)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.chrono.BuddhistChronology: int hashCode()>
<org.springframework.util.ClassUtils: java.lang.String getShortNameAsProperty(java.lang.Class)>-><java.lang.String: java.lang.String substring(int)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.String getKey()>
<io.undertow.util.HeaderValues$1: java.lang.String next()>-><java.util.NoSuchElementException: void <init>()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Double: int hashCode()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter)>-><java.lang.Object: void <init>()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReduceOps$4ReducingSink: void accept(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.misc.Signal: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: boolean equals(java.lang.Object)>
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>-><java.security.Provider$ServiceKey: boolean matches(java.lang.String,java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Vector: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.calendar.Era: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.ObjectName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.font.AttributeValues: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.BooleanNode: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.ProtectionDomain$WeakProtectionDomainKey: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.javasupport.JavaConstructor: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeMap$KeySet: void clear()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.AbstractCollection: void clear()>-><java.util.Iterator: void remove()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.zip.ZipEntry: int hashCode()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.Constructor: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.Hashtable$ValueCollection: void clear()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.ImmutableDescriptor: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.UnboxedFixnum: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$EmptyMap: java.util.Set entrySet()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.TreeMap$KeySet: void clear()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.tz.FixedDateTimeZone: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.StringLiteral: int hashCode()>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.logging.Level$KnownLevel: void add(java.util.logging.Level)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Character$Subset: int hashCode()>
<java.util.Collections$UnmodifiableMap: boolean containsKey(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: boolean containsKey(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.DecimalFormat: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyHash$BaseSet: java.util.Iterator iterator()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.cglib.core.Signature: int hashCode()>
<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>-><java.util.ArrayDeque: boolean contains(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge5.Challenge5: java.lang.String getTitle()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.web.context.support.ServletContextResource: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.provider.PolicyParser$PrincipalEntry: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.http.HttpEntity: int hashCode()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.CodeSigner: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: java.lang.Object[] toArray(java.lang.Object[])>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap: java.util.Set entrySet()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.EnumMap: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Hashtable: java.util.Set entrySet()>
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>-><java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
<com.google.common.collect.Platform: java.util.SortedMap mapsTransformEntriesSortedMap(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps: java.util.NavigableMap transformEntries(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.dom4j.tree.BackedList: void clear()>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: void mergeLo(int,int,int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.BuddhistChronology: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.Label: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.http.server.RequestPath: org.springframework.http.server.RequestPath parse(java.net.URI,java.lang.String)>-><org.springframework.http.server.DefaultRequestPath: void <init>(java.net.URI,java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.LongNode: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><java.lang.Double: int hashCode()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.tz.CachedDateTimeZone: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.GJChronology: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.TemporaryVariable: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.dom4j.tree.BackedList: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<java.util.ArrayDeque$DeqSpliterator: void <init>(java.util.ArrayDeque,int,int)>-><java.lang.Object: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.hibernate.metamodel.model.domain.NavigableRole: int hashCode()>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><java.util.WeakHashMap$Entry: int hashCode()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$1: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter)>-><java.util.AbstractSet: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.Duration: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.IdentityHashMap$Values: int size()>
<java.lang.Object: java.lang.String toString()>-><sun.font.AttributeValues: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.IRScope: int hashCode()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Hashtable: boolean isEmpty()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.AbstractList: void clear()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.io.ClassPathResource: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.MessageFormat: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<java.util.TreeMap$Entry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.Label: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.SimpleType: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.config.RuntimeBeanReference: int hashCode()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.boot.ansi.Ansi8BitColor: int hashCode()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: io.netty.handler.codec.http.HttpHeaders access$100(org.springframework.http.server.reactive.NettyHeadersAdapter)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.ToStringCreator: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$1: java.lang.Object next()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Boolean: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.text.AttributedCharacterIterator$Attribute: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.util.calendar.Era: int hashCode()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$1$1: int getCount()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.calendar.Era: int hashCode()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasWaiters(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: boolean hasWaiters()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><io.jsonwebtoken.impl.JwtMap: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Object: int hashCode()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.apache.logging.log4j.spi.Provider: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.RubyHash$BaseSet: int size()>
<java.lang.Object: java.lang.String toString()>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.CurrentScope: boolean equals(java.lang.Object)>
<java.util.Spliterator: boolean hasCharacteristics(int)>-><java.util.ArrayDeque$DeqSpliterator: int characteristics()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.util.TypeKey: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<java.util.Collections$ReverseComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: int size()>-><com.google.common.collect.Maps$EntrySet: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.util.DerInputBuffer: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.Period: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<java.util.AbstractSet: int hashCode()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><com.google.common.collect.Maps$Values: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.Type: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><ch.qos.logback.core.subst.Node: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$SynchronizedMap: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><io.undertow.servlet.spec.HttpSessionImpl$UnwrapSessionAction: java.lang.Object run()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.FrozenString: int hashCode()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.EnumMap$Values: void clear()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.beans.IndexedPropertyDescriptor: int hashCode()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>-><java.lang.Class: java.lang.String getName()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: void <init>(reactor.netty.http.server.HttpServerRequest,org.springframework.core.io.buffer.NettyDataBufferFactory)>-><org.springframework.http.server.reactive.AbstractServerHttpRequest: void <init>(java.net.URI,java.lang.String,org.springframework.http.HttpHeaders)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.EnumMap$Values: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$EmptyList: int size()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$2: sun.misc.Unsafe run()>-><io.undertow.servlet.spec.ServletPrintWriterDelegate: sun.misc.Unsafe access$100()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jcodings.Encoding: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.Hashtable$KeySet: void clear()>-><java.util.Hashtable: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.WeakHashMap$Entry: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.collect.Multimaps: java.util.Collection unmodifiableValueCollection(java.util.Collection)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.GregorianCalendar: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.misc.Signal: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.field.ScaledDurationField: int hashCode()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.DurationFieldType$StandardDurationFieldType: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Hashtable: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: int hashCode()>
<org.springframework.core.style.ToStringCreator: org.springframework.core.style.ToStringCreator append(java.lang.String,java.lang.Object)>-><org.springframework.core.style.ToStringCreator: void printFieldSeparatorIfNecessary()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.temporal.WeekFields: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.provider.PolicyParser$PermissionEntry: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: java.lang.Object[] toArray()>-><io.undertow.util.HeaderValues: java.lang.String[] toArray()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>-><java.lang.String: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.sun.jmx.mbeanserver.NamedObject: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.csrf.CSRF: java.lang.String getTitle()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.expression.TypedValue: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<java.util.AbstractList: void removeRange(int,int)>-><java.util.LinkedList: java.util.ListIterator listIterator(int)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><java.lang.StringBuilder: void <init>()>
<java.lang.Object: java.lang.String toString()>-><sun.util.calendar.ZoneInfo: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.FieldPosition: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyString: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$UnmodifiableCollection: void clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<java.util.Collections$EmptyList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.io.InputStreamResource: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByValue(int)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><reactor.core.publisher.Mono: reactor.core.publisher.Mono empty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.runtime.Arity: int hashCode()>
<java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray()>-><java.util.ArrayDeque: java.lang.Object[] toArray()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><jnr.constants.ConstantSet: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>-><java.lang.String: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.Parameter: int hashCode()>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><org.springframework.util.LinkedMultiValueMap: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.java.proxies.ArrayJavaProxy: int hashCode()>
<java.util.Collections$SynchronizedCollection: boolean isEmpty()>-><java.util.ArrayDeque: boolean isEmpty()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$EmptyList: int size()>
<java.util.Collections$SynchronizedCollection: boolean isEmpty()>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.IdentityHashMap$EntrySet: int size()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Arrays$ArrayList: int size()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.BinaryData: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.EnumMap$EntrySet: void clear()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.hsqldb.types.IntervalMonthData: int hashCode()>
<org.springframework.validation.AbstractBindingResult: java.util.List getAllErrors()>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(sun.security.ssl.CipherSuite)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int index(int)>-><java.lang.AssertionError: void <init>()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.lang.invoke.LambdaFormEditor$Transform: int hashCode()>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Character: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.Expression: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.SubList$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.net.URI: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>
<java.io.ObjectInputStream$PeekInputStream: int read(byte[],int,int)>-><java.io.InputStream: int read(byte[],int,int)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.lang.ProcessEnvironment$StringEntrySet: void clear()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<sun.util.locale.provider.LocaleProviderAdapter: boolean isSupportedLocale(java.util.Locale,sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.text.AttributeEntry: java.lang.Object getKey()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.HashMap$Node: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.IdentityHashMap$EntryIterator$Entry: int hashCode()>
<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Collection values()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Collection createValues()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: int hashCode()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: int hashCode()>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void onClose()>-><org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void stopAndReleaseWebServer()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.ConcurrentModificationException: void <init>()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.lang.ProcessEnvironment$StringEntrySet: int size()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$1: java.lang.Object run()>-><sun.security.ssl.JsseJce$1: java.lang.Void run()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<io.undertow.util.HeaderValues: java.lang.String remove(int)>-><io.undertow.util.HeaderValues: java.lang.String removeFirst()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>-><io.undertow.server.session.InMemorySessionManager$SessionImpl: java.lang.String getId()>
<org.springframework.http.server.reactive.HttpHeadResponseDecorator: void <init>(org.springframework.http.server.reactive.ServerHttpResponse)>-><org.springframework.http.server.reactive.ServerHttpResponseDecorator: void <init>(org.springframework.http.server.reactive.ServerHttpResponse)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge7.Challenge7: java.lang.String getTitle()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$Values: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.validation.BeanPropertyBindingResult: java.lang.Object getTarget()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.SymbolProc: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyHash: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>-><javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest getRequest()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.util.List getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter: io.netty.handler.codec.http.HttpHeaders access$100(org.springframework.http.server.reactive.NettyHeadersAdapter)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ast.SymbolNode: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.web.authentication.WebAuthenticationDetails: int hashCode()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.AttributeAccessorSupport: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyHash: boolean isEmpty()>
<java.lang.Object: java.lang.String toString()>-><java.net.Inet4Address: int hashCode()>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.IdentityHashMap$KeySet: void clear()>
<java.util.AbstractCollection: void clear()>-><io.micrometer.shaded.org.pcollections.IntTree$EntryIterator: void remove()>
<java.text.AttributeEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>-><com.google.common.collect.Multimaps$UnmodifiableMultimap$1: void <init>(com.google.common.collect.Multimaps$UnmodifiableMultimap)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<io.undertow.servlet.api.ServletInfo: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.ProcessEnvironment$StringEntrySet: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Locale: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Maps$EntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set keySet()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>-><com.google.common.collect.Multimaps$Keys: int distinctElements()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.Hashtable: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.jruby.specialized.RubyArrayTwoObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.specialized.RubyArraySpecialized: boolean packed()>
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.AbstractSet: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><java.lang.Integer: int parseInt(java.lang.String)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyFloat: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.boot.model.relational.Namespace: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.javasupport.JavaClass: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.Multimaps: java.util.Collection unmodifiableValueCollection(java.util.Collection)>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.io.ClassPathResource: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray(java.lang.Object[])>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubySymbol: boolean equals(java.lang.Object)>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.TimestampData: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.passes.CompilerPass: int hashCode()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableMap: boolean isEmpty()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<java.util.stream.DistinctOps$1$2: void accept(java.lang.Object)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<sun.security.ssl.SSLSessionContextImpl$1: java.lang.Object run()>-><sun.security.ssl.SSLSessionContextImpl$1: java.lang.String run()>
<java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])>
<java.lang.Object: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.Expression: boolean equals(java.lang.Object)>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.Year: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.CompositeType: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.HashMap$EntrySet: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.field.PreciseDurationField: int hashCode()>
<java.util.TreeMap$KeySet: void clear()>-><java.util.TreeMap: void clear()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.cglib.core.MethodInfo: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.core.io.buffer.NettyDataBufferFactory: void <init>(io.netty.buffer.ByteBufAllocator)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.security.cert.Certificate: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.jar.Attributes: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>-><sun.security.ssl.JsseJce$1: java.lang.Object run()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.StackTraceElement: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><jnr.constants.ConstantSet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyMatchData: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.ScopeModule: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>
<java.lang.Object: java.lang.String toString()>-><java.time.ZoneId: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: boolean isEmpty()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<java.util.AbstractList: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.Collections$UnmodifiableCollection: int size()>
<java.security.Provider: void implPutAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.util.DerInputBuffer: int hashCode()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps: java.util.Collection unmodifiableValueCollection(java.util.Collection)>-><java.util.Collections: java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.javasupport.JavaObject: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.net.URL: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.http.server.DefaultRequestPath: void <init>(java.net.URI,java.lang.String)>-><java.net.URI: java.lang.String getRawPath()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.HsqlNameManager$HsqlName: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><java.lang.String: java.lang.String valueOf(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.awt.Color: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.CharacterType: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: int hashCode()>
<io.undertow.util.HeaderValues: void clear()>-><io.undertow.util.HeaderValues: void clearInternal()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.EnumMap: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><ch.qos.logback.core.status.StatusBase: int hashCode()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.IdentityHashMap$EntryIterator$Entry: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.beans.PropertyDescriptor: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.AttributedString$AttributedStringIterator: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.Instant: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: int hashCode()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.ClobDataID: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap: java.util.Set entrySet()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.headius.invokebinder.Signature: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.LinkedHashMap$LinkedEntrySet: void clear()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.format.DecimalStyle: int hashCode()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.http.server.reactive.ReactorServerHttpResponse: void <init>(reactor.netty.http.server.HttpServerResponse,org.springframework.core.io.buffer.DataBufferFactory)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: void <init>(io.netty.handler.codec.http.HttpHeaders)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.AbstractList: void clear()>-><java.util.Arrays$ArrayList: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Collection createValues()>-><com.google.common.collect.Maps$Values: void <init>(java.util.Map)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<java.util.AbstractSet: int hashCode()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.core.style.ToStringCreator: org.springframework.core.style.ToStringCreator append(java.lang.String,java.lang.Object)>-><org.springframework.core.style.DefaultToStringStyler: void styleField(java.lang.StringBuilder,java.lang.String,java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.AbstractCollection: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: int hashCode()>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<java.util.AbstractList: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.util.Collections$UnmodifiableList: java.lang.Object get(int)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<java.security.Provider: void implPutAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.sun.beans.WildcardTypeImpl: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.AbstractMap$1: int size()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.springframework.core.style.DefaultToStringStyler: void styleFieldStart(java.lang.StringBuilder,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.LocalVariable: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.format.InternalParserDateTimeParser: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$KeySet: int size()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.validation.BindException: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.jruby.javasupport.binding.InterfaceInitializer: void setupInterfaceMethods(java.lang.Class,org.jruby.javasupport.binding.Initializer$State)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<java.lang.Object: java.lang.String toString()>-><java.time.LocalTime: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: int hashCode()>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.security.Provider$Service: java.lang.Object newInstance(java.lang.Object)>-><java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter,org.springframework.http.server.reactive.NettyHeadersAdapter$1)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.Instant: int hashCode()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.persist.CachedObjectBase: int hashCode()>
<java.util.Collections$UnmodifiableCollection: void clear()>-><java.lang.UnsupportedOperationException: void <init>()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Integer: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.awt.Point: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.LocalTime: int hashCode()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.springframework.boot.web.servlet.DynamicRegistrationBean: java.lang.String getOrDeduceName(java.lang.Object)>-><org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>
<com.google.common.collect.Multimaps$UnmodifiableMultimap$1: java.util.Collection apply(java.util.Collection)>-><com.google.common.collect.Multimaps: java.util.Collection access$000(java.util.Collection)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: int size()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.lang.String getMethodValue()>-><reactor.netty.http.server.HttpServerRequest: io.netty.handler.codec.http.HttpMethod method()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.HsqlNameManager$HsqlName: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><java.lang.Boolean: int hashCode()>
<org.springframework.core.style.DefaultToStringStyler: void styleField(java.lang.StringBuilder,java.lang.String,java.lang.Object)>-><org.springframework.core.style.DefaultToStringStyler: void styleFieldStart(java.lang.StringBuilder,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyThread: int hashCode()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.PropertyName: int hashCode()>
<sun.text.normalizer.ICUBinary: byte[] readHeader(java.io.InputStream,byte[],sun.text.normalizer.ICUBinary$Authenticate)>-><sun.net.idn.StringPrepDataReader: boolean isDataVersionAcceptable(byte[])>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.ParsePosition: int hashCode()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyObject: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Maps$EntrySet: void clear()>-><com.google.common.collect.Maps$TransformedEntriesMap: void clear()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: int size()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.boot.model.relational.Namespace: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.asm.Handle: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Long: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.net.URL: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.ListMultimap delegate()>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: com.google.common.collect.Multimap delegate()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.runtime.Block: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.ObjectInstance: int hashCode()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int)>-><java.util.Collections$UnmodifiableCollection: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.io.InputStreamResource: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.TreeSet: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.HsqlException: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.concurrent.ArrayBlockingQueue: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String getSessionId()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$4$1: void accept(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues: int size()>
<java.util.Collections$SetFromMap: boolean add(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void stopAndReleaseWebServer()>-><java.lang.IllegalStateException: void <init>(java.lang.Throwable)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.Period: int hashCode()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.sql.Timestamp: int hashCode()>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.Collections$UnmodifiableRandomAccessList: java.util.List subList(int,int)>
<org.springframework.boot.web.servlet.support.SpringBootServletInitializer: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.Sink$OfInt: void accept(java.lang.Object)>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.UnboxedFixnum: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.core.DecoratingClassLoader: boolean isExcluded(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.HashMap$EntrySet: int size()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletRequestContext: io.undertow.servlet.handlers.ServletRequestContext current()>-><java.lang.SecurityManager: void checkPermission(java.security.Permission)>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.LinkedList: void clear()>
<org.springframework.core.style.DefaultToStringStyler: void styleValue(java.lang.StringBuilder,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><java.net.URL: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Maps$TransformedEntriesMap: void clear()>-><com.google.common.collect.Maps$TransformedEntriesMap: void clear()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$EmptySet: int size()>
<java.lang.Object: java.lang.String toString()>-><java.time.LocalDateTime: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.x509.GeneralName: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: boolean equals(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.Nodes$FixedNodeBuilder: void accept(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><org.jruby.util.collections.WeakHashSet: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.time.Period: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$UnmodifiableMap: int hashCode()>
<io.undertow.util.HeaderValues: boolean remove(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean removeFirstOccurrence(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.security.CodeSigner: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><javax.management.MBeanInfo: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.invoke.MethodType: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.math.BigInteger: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.SimpleDateFormat: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.Type: int hashCode()>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><org.springframework.validation.AbstractBindingResult: int getErrorCount()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues$1: void remove()>-><java.lang.IllegalStateException: void <init>()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.stream.Nodes$SizedCollectorTask: void <init>(java.util.Spliterator,java.util.stream.PipelineHelper,int)>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Hashtable$KeySet: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.http.HttpEntity: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Short: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyFloat: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.security.Provider: void implPutAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.jruby.ir.IRBuilder: org.jruby.ir.operands.Operand buildFixnumCase(org.jruby.ast.CaseNode)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<org.jruby.RubyModule$MethodClumper: void clump(java.lang.Class)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.core.JsonLocation: int hashCode()>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.io.InputStream: int read(byte[],int,int)>-><org.jruby.RubyFile$2: int read()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.format.InternalParserDateTimeParser: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.DefaultPathContainer: java.lang.String value()>
<java.util.AbstractCollection: java.lang.String toString()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.jruby.anno.TypePopulator$ReflectiveTypePopulator: void addBoundMethodsUnlessOmited(org.jruby.Ruby,java.lang.String,java.util.List)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.zip.ZipEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.ObjectNode: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.AbstractList: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.crypto.CryptoAllPermission: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LessonMenuService: void <init>(org.owasp.webgoat.session.Course,org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><java.util.Collections$SynchronizedSortedSet: java.util.Comparator comparator()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: boolean containsKey(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.AbstractMap$1: void clear()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.AbstractCollection: boolean isEmpty()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.javasupport.JavaObject: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><javax.management.MBeanParameterInfo: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.lang.ProcessEnvironment$StringKeySet: int size()>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.LocalDate: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.logging.Level: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.DateFormatSymbols: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.TreeMap$EntrySet: void clear()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.AbstractSet: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.SubList: void removeRange(int,int)>-><java.util.SubList: void removeRange(int,int)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.RegularEnumSet: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.javasupport.JavaMethod: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: int hashCode()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.Collection: java.util.stream.Stream stream()>-><java.util.ArrayDeque: java.util.Spliterator spliterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.locale.provider.RuleBasedBreakIterator: int hashCode()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues: boolean contains(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$SynchronizedSet: int hashCode()>
<org.jruby.specialized.RubyArrayOneObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<javax.security.auth.Subject$SecureSet: void clear()>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.secure_password.SecurePasswords: java.lang.String getTitle()>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.DecimalFormatSymbols: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><io.undertow.servlet.spec.ServletPrintWriterDelegate$2: java.lang.Object run()>
<java.util.AbstractMap: java.lang.String toString()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<javax.security.auth.Subject$SecureSet$6: java.lang.Object run()>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.Collections$UnmodifiableMap: int size()>-><com.google.common.collect.Maps$TransformedEntriesMap: int size()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.invoke.LambdaForm: int hashCode()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.jruby.ir.util.IGVInstrListener: void instrChanged(org.jruby.ir.representations.BasicBlock,org.jruby.ir.instructions.Instr,org.jruby.ir.instructions.Instr,int,org.jruby.ir.listeners.InstructionsListener$OperationType)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.AbstractList: int hashCode()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int)>-><org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int,int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.SubList$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.beans.IndexedPropertyDescriptor: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.calendar.CalendarDate: int hashCode()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>-><java.security.Provider$Service: java.security.Provider getProvider()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.thoughtworks.xstream.core.util.FastField: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.net.InetSocketAddress: int hashCode()>
<org.springframework.aop.framework.AopProxyUtils: boolean equalsInProxy(org.springframework.aop.framework.AdvisedSupport,org.springframework.aop.framework.AdvisedSupport)>-><java.lang.Object: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: boolean equals(java.lang.Object)>
<org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object,org.springframework.core.style.ToStringStyler)>-><org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<com.google.common.collect.TransformedIterator: boolean hasNext()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.util.AbstractMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.lang.invoke.LambdaForm$Name: int hashCode()>
<java.util.Vector: void clear()>-><java.util.Vector: void removeAllElements()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.DecimalNode: int hashCode()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<org.springframework.validation.BindException: boolean equals(java.lang.Object)>-><org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.Label: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.lang.Object: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge1.Challenge1: java.lang.String getTitle()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.HashMap$EntrySet: void clear()>-><java.util.HashMap: void clear()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.factory.support.NullBean: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><com.google.common.collect.Maps$EntrySet: int size()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: int hashCode()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><java.util.Iterator: void remove()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.SubList$1: boolean hasNext()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.AttributedString$AttributedStringIterator: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.Boolean: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.awt.image.ColorModel: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.MBeanAttributeInfo: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyString: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<javax.net.ssl.SNIHostName: int hashCode()>-><java.lang.String: int hashCode()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.String toString()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$1: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractMap$1: boolean isEmpty()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.jruby.RubyHash: java.lang.Object get(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.env.PropertySource: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.MBeanOperationInfo: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Spliterator spliterator()>-><java.util.ArrayDeque: java.util.Spliterator spliterator()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.javasupport.JavaMethod: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.FloatNode: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.Provider$UString: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.Label: int hashCode()>
<java.util.concurrent.ArrayBlockingQueue: void clear()>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.security.Provider: java.util.Set entrySet()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><io.undertow.util.HeaderValues$1: void remove()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.introduction.WebGoatIntroduction: java.lang.String getTitle()>
<java.util.AbstractMap: java.lang.String toString()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: int hashCode()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: int size()>-><io.undertow.util.HeaderValues: int size()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.AllPermission: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.ProtectionDomain$WeakProtectionDomainKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.invoke.LambdaFormEditor$Transform: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.net.SocketPermission: int hashCode()>
<io.undertow.util.HeaderValues$1: void remove()>-><io.undertow.util.HeaderValues: java.lang.String remove(int)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Maps$TransformedEntriesMap: boolean containsKey(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: boolean containsKey(java.lang.Object)>
<sun.util.locale.provider.CalendarNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>-><java.util.AbstractCollection: boolean contains(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.MBeanConstructorInfo: int hashCode()>
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>-><java.util.ArrayDeque: boolean add(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.HsqlException: boolean equals(java.lang.Object)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.apache.logging.log4j.Level: int hashCode()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int,int)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector$Itr: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyThread: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.jruby.ir.IRBuilder: org.jruby.ir.operands.Operand buildFixnumCase(org.jruby.ast.CaseNode)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.javasupport.JavaClass: int hashCode()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.TimestampData: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.security.access.SecurityConfig: int hashCode()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.jruby.RubyArray: void alloc(int)>-><org.jruby.RubyBasicObject: org.jruby.Ruby getRuntime()>
<com.google.common.collect.Multimaps$Keys$1: void <init>(com.google.common.collect.Multimaps$Keys,java.util.Iterator)>-><com.google.common.collect.TransformedIterator: void <init>(java.util.Iterator)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.cert.X509CRLEntry: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.Year: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.interpreter.Profiler$IRCallSite: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.io.File: int hashCode()>
<org.springframework.security.web.util.matcher.RegexRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Hashtable$ValueCollection: int size()>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.SubList$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.ZoneOffset: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: int hashCode()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: java.lang.String getObjectName()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.MBeanInfo: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$Values: java.util.Iterator iterator()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><java.net.URI: void <init>(java.lang.String)>
<org.jruby.javasupport.JavaClass: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.thoughtworks.xstream.converters.collections.TreeMapConverter$NullComparator: int compare(java.lang.Object,java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.Vector: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><sun.security.ssl.SecureKey: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.lang.ProcessEnvironment$StringKeySet: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.lang.StringBuilder: void <init>()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: int size()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.Duration: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedHashMap$LinkedValues: void clear()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<com.google.common.collect.Platform: java.util.SortedMap mapsTransformEntriesSortedMap(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps: java.util.SortedMap transformEntriesIgnoreNavigable(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.invoke.MemberName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.cglib.core.MethodInfo: int hashCode()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: org.springframework.http.HttpHeaders initHeaders(reactor.netty.http.server.HttpServerRequest)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: void <init>(io.netty.handler.codec.http.HttpHeaders)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<java.util.AbstractList: void clear()>-><java.util.SubList: void removeRange(int,int)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.util.Collection getUrlMappings()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.POJONode: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.java.proxies.ArrayJavaProxy: boolean equals(java.lang.Object)>
<org.dom4j.tree.BackedList: void clear()>-><java.util.ArrayList: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.BeanMetadataAttribute: int hashCode()>
<org.springframework.core.DecoratingClassLoader: boolean isExcluded(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<sun.text.normalizer.IntTrie: int getTrailValue(int,char)>-><sun.net.idn.StringPrep$StringPrepTrieImpl: int getFoldingOffset(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues: boolean isEmpty()>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.base.AbstractPartial: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.IntervalSecondData: int hashCode()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>-><org.jruby.RubyThread: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.WeakHashMap$Values: void clear()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.IdentityHashMap$KeySet: int size()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><org.springframework.http.HttpLogging: org.apache.commons.logging.Log forLogName(java.lang.Class)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.Type: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.api.Location: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.validation.BindException: int hashCode()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.LocalVariable: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.javasupport.JavaConstructor: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.UUID: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.BinaryNode: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.AbstractMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<org.jruby.ir.IRBuilder: org.jruby.ir.operands.Operand buildFixnumCase(org.jruby.ast.CaseNode)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.crypto.CryptoPermission: int hashCode()>
<java.util.TreeMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.base.AbstractPeriod: int hashCode()>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><org.springframework.core.NestedExceptionUtils: java.lang.String buildMessage(java.lang.String,java.lang.Throwable)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.headius.invokebinder.Signature: int hashCode()>
<java.text.AttributeEntry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.UTCDateTimeZone: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.ArrayNode: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.UnresolvedPermission: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.util.ByteList: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.locale.provider.RuleBasedBreakIterator: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.LocalDate: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.api.ServletInfo: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.UnboxedBoolean: boolean equals(java.lang.Object)>
<java.security.Provider: void implPutAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$EmptyList: boolean isEmpty()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.thoughtworks.xstream.core.util.WeakCache: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.runtime.Block: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.jar.Attributes$Name: int hashCode()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.JavaObjectData: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<java.util.stream.AbstractShortCircuitTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Vector$Itr: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.BigIntegerNode: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: void <init>(java.net.URI,java.lang.String)>-><org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer extractPathWithinApplication(org.springframework.http.server.PathContainer,org.springframework.http.server.PathContainer)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.UnboxedBoolean: int hashCode()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xxe.XXE: java.lang.String getTitle()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: int hashCode()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><javax.security.auth.Subject$SecureSet$6: java.lang.Object run()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><io.jsonwebtoken.impl.JwtMap: int hashCode()>
<com.google.common.collect.Multimaps: java.util.Collection unmodifiableValueCollection(java.util.Collection)>-><java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String getRemoteAddress()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.util.RawValue: int hashCode()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.String toString()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Hashtable$ValueCollection: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableList: int hashCode()>-><java.lang.Object: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<io.undertow.servlet.spec.SecurityActions$1: java.lang.Object run()>-><io.undertow.servlet.spec.SecurityActions$1: io.undertow.servlet.handlers.ServletRequestContext run()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Map map()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.CodeSource: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.ZonedDateTime: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$EmptyMap: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean isEmpty()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Map map()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.List: void sort(java.util.Comparator)>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.awt.Font: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.util.Set entrySet()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$Values: int size()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<java.util.concurrent.locks.ReentrantLock: boolean hasWaiters(java.util.concurrent.locks.Condition)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasWaiters(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeMap$EntrySet: int size()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.ReportCardService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>-><java.util.ArrayDeque$DeqSpliterator: java.util.ArrayDeque$DeqSpliterator trySplit()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyFloat: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.security.BasicPermission: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$Values: java.util.Iterator iterator()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys: void clear()>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: void clear()>
<org.springframework.security.web.util.matcher.RegexRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean remove(java.lang.Object)>
<java.util.List: void sort(java.util.Comparator)>-><io.undertow.util.HeaderValues$1: void set(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><java.util.IdentityHashMap: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.StringBuilder: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.EnumMap$1: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LessonInfoService: void <init>(org.owasp.webgoat.session.WebSession)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.SimpleType: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.Period: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.StringLiteral: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.core.JsonLocation: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Float: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><io.undertow.util.HeaderValues: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.internal.info.MigrationInfoImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Character: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList: boolean isEmpty()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.JumboEnumSet: int size()>
<java.security.Provider: void implPutAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Object: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.Self: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.Hashtable$KeySet: void clear()>-><java.security.Provider: void clear()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.util.HeaderValues: java.util.List subList(int,int)>-><java.lang.IndexOutOfBoundsException: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.locale.BaseLocale$Key: int hashCode()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.javasupport.JavaArray: int hashCode()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.WeakHashMap$Values: void clear()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: int hashCode()>
<org.springframework.security.core.context.SecurityContextImpl: int hashCode()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><io.undertow.util.HeaderValues: void clear()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<io.undertow.util.HeaderValues: java.lang.String set(int,java.lang.String)>-><java.lang.IllegalArgumentException: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<java.lang.Object: java.lang.String toString()>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.text.AttributeEntry: java.lang.Object getKey()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeMap$Values: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.metamodel.model.domain.NavigableRole: int hashCode()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.MonthDay: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.jar.Attributes: java.util.Set entrySet()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.RegularEnumSet: int size()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.HashMap$Values: int size()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: java.util.ListIterator listIterator()>-><io.undertow.util.HeaderValues: java.util.ListIterator iterator(int,boolean)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.BitSet: int hashCode()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashMap$Values: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.template.LessonTemplate: java.lang.String getTitle()>
<io.undertow.util.HeaderValues: void offerLastMultiValue(java.lang.String,int,java.lang.String[])>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.HashMap$Values: int size()>
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.Multimap delegate()>-><com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.ListMultimap delegate()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.javasupport.JavaArray: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.LocalVariable: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<javax.net.ssl.SNIHostName: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.text.AttributeEntry: java.lang.Object getKey()>
<java.util.Hashtable: java.lang.String toString()>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet$6: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.net.Inet6Address: int hashCode()>
<org.springframework.core.Conventions: java.lang.String pluralize(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.chrono.ISOChronology: int hashCode()>
<java.text.AttributeEntry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.net.URL: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.locale.BaseLocale: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.Collection: java.util.stream.Stream stream()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.FloatNode: int hashCode()>
<java.util.Collections$SynchronizedCollection: boolean isEmpty()>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps: com.google.common.base.Function asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$11: void <init>(com.google.common.collect.Maps$EntryTransformer)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.lang.String: int length()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.IdentityHashMap$KeySet: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.jar.Attributes$Name: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Vector$Itr: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.http.server.reactive.ReactorServerHttpResponse: void <init>(reactor.netty.http.server.HttpServerResponse,org.springframework.core.io.buffer.DataBufferFactory)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.HintService: java.util.stream.Stream lambda$createAssignmentHints$1(java.util.List)>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.IdentityHashMap$KeySet: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.WeakHashMap$KeySet: void clear()>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Short: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.util.ObjectIdentifier: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$SynchronizedList: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.HashMap$Values: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.calendar.ZoneInfo: int hashCode()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.net.Inet6Address: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.crypto.CryptoPermission: int hashCode()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.AbstractSet: int hashCode()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.internal.util.Pair: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyBoolean: int hashCode()>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$EntrySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.Row: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Double: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.ArrayDeque: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.base.AbstractDuration: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.text.PatternEntry: int hashCode()>
<java.util.AbstractList: void removeRange(int,int)>-><java.util.AbstractList$Itr: void remove()>
<java.util.AbstractList: void clear()>-><java.util.SubList: int size()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues: java.util.ListIterator listIterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.web.method.ControllerAdviceBean: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><io.undertow.util.HeaderValues: int size()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.TemporaryVariable: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.Fixnum: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.io.support.EncodedResource: int hashCode()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.StringCharacterIterator: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeSet: int size()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.UnboxedFixnum: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.util.Set entrySet()>
<java.util.stream.SortedOps$RefSortingSink: void end()>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.awt.geom.Point2D: int hashCode()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.IntervalMonthData: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.ObjectNode: int hashCode()>
<org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>
<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set keySet()>-><java.util.Collections$UnmodifiableMap: java.util.Set keySet()>
<com.google.common.collect.Maps: java.util.Map transformValues(java.util.Map,com.google.common.base.Function)>-><com.google.common.collect.Maps: com.google.common.collect.Maps$EntryTransformer asEntryTransformer(com.google.common.base.Function)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.MBeanParameterInfo: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: boolean equals(java.lang.Object)>
<java.util.stream.SortedOps$SizedRefSortingSink: void end()>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<org.jruby.RubyArray: void clear()>-><org.jruby.util.collections.StringArraySet: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.AbstractSet: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.base.AbstractPeriod: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.List: void sort(java.util.Comparator)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.asm.MemberSubstitution: int hashCode()>
<java.security.Provider: void implPutAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: int hashCode()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedValues: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.ArrayNode: int hashCode()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: boolean containsKey(java.lang.Object)>
<com.google.common.collect.Multimaps$UnmodifiableMultimap: void clear()>-><java.lang.UnsupportedOperationException: void <init>()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<io.undertow.util.HeaderValues: java.lang.String pollFirst()>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.x509.GeneralName: int hashCode()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.runtime.Arity: int hashCode()>
<sun.security.ssl.SSLSessionContextImpl$1: java.lang.String run()>-><java.lang.System: java.lang.String getProperty(java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyFixnum: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.Instant: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.jruby.util.collections.StringArraySet: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.AttributeAccessorSupport: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$SingletonList: int size()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Hashtable$EntrySet: int size()>
<sun.text.normalizer.CharTrie: int getSurrogateOffset(char,char)>-><sun.net.idn.StringPrep$StringPrepTrieImpl: int getFoldingOffset(int)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Hashtable$EntrySet: int size()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.Collections$UnmodifiableCollection: void clear()>
<com.google.common.collect.ForwardingMultimap: boolean isEmpty()>-><com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.Multimap delegate()>
<java.util.HashMap$Node: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.JumboEnumSet: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.aop.framework.JdkDynamicAopProxy: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.imageio.ImageTypeSpecifier$Interleaved: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: void clear()>
<com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>-><com.google.common.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<sun.security.ssl.SecureKey: int hashCode()>-><java.lang.String: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.util.collections.WeakHashSet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.base.AbstractPeriod: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.type.ClassKey: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.ISOChronology: int hashCode()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyMatchData: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.util.RegexpOptions: int hashCode()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.TimeData: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$EmptyMap: int hashCode()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyNil: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Maps$TransformedEntriesMap: void <init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$ImprovedAbstractMap: void <init>()>
<io.undertow.util.CopyOnWriteMap: int size()>-><java.util.Collections$EmptyMap: int size()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.io.ByteArrayResource: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.EnumMap$1: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.io.File: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.validation.BindException: java.util.List getAllErrors()>-><org.springframework.validation.BindException: java.util.List getAllErrors()>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.CompositeType: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$Values: int size()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.HashSet: int size()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Enum: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: int hashCode()>
<java.util.AbstractMap: int hashCode()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<java.util.stream.ReferencePipeline$2$1: void accept(java.lang.Object)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: boolean isEmpty()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.io.InputStreamResource: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$UnmodifiableSet: int hashCode()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.ArrayType: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.io.ByteArrayResource: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyModule: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jcodings.Encoding: boolean equals(java.lang.Object)>
<sun.security.jca.GetInstance: java.security.Provider$Service getService(java.lang.String,java.lang.String,java.lang.String)>-><java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.lang.ProcessEnvironment$StringValues: void clear()>-><java.util.HashMap$Values: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.BuddhistCalendar: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.concurrent.ArrayBlockingQueue: void clear()>
<sun.security.util.DisabledAlgorithmConstraints: boolean permits(java.util.Set,java.lang.String,java.security.AlgorithmParameters)>-><java.util.RegularEnumSet: boolean isEmpty()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<java.util.stream.Nodes$SizedCollectorTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$SynchronizedCollection: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.awt.Color: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.auth_bypass.AuthBypass: java.lang.String getTitle()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashSet: void clear()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: void clear()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.UUID: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.representations.BasicBlock: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<sun.security.ssl.SSLSessionImpl: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.jruby.ir.IRBuilder: org.jruby.ir.operands.Operand buildFixnumCase(org.jruby.ast.CaseNode)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: int hashCode()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.sql.Timestamp: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.javasupport.JavaConstructor: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.IntNode: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.Instant: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.IdentityHashMap$KeySet: int size()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.stream.StreamOpFlag: int fromCharacteristics(java.util.Spliterator)>-><java.util.ArrayDeque$DeqSpliterator: int characteristics()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.io.ByteArrayResource: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.lang.Byte: int hashCode()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.EnumMap$Values: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.field.MillisDurationField: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.JapaneseImperialCalendar: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><ch.qos.logback.core.subst.Token: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer parsePath(java.lang.String)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.asm.ConstantDynamic: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.web.method.ControllerAdviceBean: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>-><java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.BuddhistChronology: int hashCode()>
<org.owasp.webgoat.lessons.Hint: int hashCode()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getAssignmentPath()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Locale: int hashCode()>
<org.jruby.RubyModule: boolean defineAnnotatedMethod(java.lang.String,java.util.List,org.jruby.runtime.MethodFactory)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$KeySet: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.Boolean: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$TransformedEntriesNavigableMap: void <init>(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$TransformedEntriesSortedMap: void <init>(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.zip.ZipEntry: int hashCode()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.io.ObjectStreamClass$FieldReflectorKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.SortedOps$SizedRefSortingSink: void accept(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.YearMonth: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.provider.PolicyParser$PermissionEntry: int hashCode()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: void clearInternal()>-><java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<java.text.AttributeEntry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.collect.ForwardingMultimap: boolean isEmpty()>-><com.google.common.collect.ForwardingMultimap: boolean isEmpty()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.flywaydb.core.internal.database.base.Schema: int hashCode()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><org.springframework.boot.web.servlet.DynamicRegistrationBean: java.lang.String getOrDeduceName(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<org.jruby.RubyArray: void clear()>-><org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyThread: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.google.common.collect.Maps$Values: boolean isEmpty()>-><java.util.AbstractMap: boolean isEmpty()>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><java.lang.Object: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.base.AbstractPartial: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps: com.google.common.collect.Maps$EntryTransformer asEntryTransformer(com.google.common.base.Function)>-><com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.net.IDN$1: java.lang.Object run()>-><java.net.IDN$1: java.io.InputStream run()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.jar.Manifest: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.jruby.specialized.RubyArrayOneObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: void modifyCheck()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.HashMap$Node: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.http.server.reactive.ServerHttpResponseDecorator: void <init>(org.springframework.http.server.reactive.ServerHttpResponse)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.util.unit.DataSize: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet: boolean isEmpty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.Boolean: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Integer: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.EnumMap: int entryHashCode(int)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.String toString()>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.zone.ZoneOffsetTransition: int hashCode()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.math.BigInteger: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.io.ObjectInputStream$PeekInputStream: int peek()>-><org.jruby.RubyFile$2: int read()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.io.support.EncodedResource: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Enum: int hashCode()>
<javax.net.ssl.SNIHostName: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.TextNode: int hashCode()>
<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set keySet()>-><com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set keySet()>
<java.util.Hashtable: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.representations.BasicBlock: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.Proxy$KeyX: int hashCode()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$UnmodifiableList: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>-><java.lang.String: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.LocalTime: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.HsqlException: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.AbstractSet: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.jruby.util.collections.StringArraySet: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><java.util.HashSet: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.validation.AbstractBindingResult: int hashCode()>-><org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.EnumMap$EntrySet: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<sun.security.ssl.SSLSessionImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.time.temporal.WeekFields: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.javasupport.JavaObject: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.imageio.ImageTypeSpecifier$Interleaved: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.api.Location: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.IntervalSecondData: boolean equals(java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.runtime.Arity: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<java.lang.reflect.WeakCache: java.lang.Object get(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: java.lang.Object apply(java.lang.Object,java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.lang.ProcessEnvironment$ExternalData: int hashCode()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<java.util.Spliterator: long getExactSizeIfKnown()>-><java.util.ArrayDeque$DeqSpliterator: int characteristics()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.NullNode: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.javasupport.JavaMethod: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.IdentityHashMap$EntrySet: void clear()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.TreeMap$EntrySet: int size()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.BasicChronology: int hashCode()>
<java.util.EnumMap$EntrySet: void clear()>-><java.util.EnumMap: void clear()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.IRScope: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyBasicObject: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.HashMap$KeySet: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.BlobDataID: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<java.io.ObjectInputStream$PeekInputStream: int read()>-><org.jruby.RubyFile$2: int read()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.apache.logging.log4j.Level: int hashCode()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedList: void clear()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.Maps$Values: void clear()>-><com.google.common.collect.Maps$Values: java.util.Map map()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.text.FieldPosition: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.logging.log4j.spi.Provider: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.org.objectweb.asm.Type: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.base.AbstractPeriod: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubySymbol: int hashCode()>
<javax.management.openmbean.TabularDataSupport: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray(java.lang.Object[])>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.util.RawValue: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.Object getDetails()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList$Itr: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyString: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$EmptySet: int size()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.ArrayList: int size()>
<java.lang.Object: java.lang.String toString()>-><java.text.AttributeEntry: int hashCode()>
<io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.util.ByteList: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.base.AbstractInstant: int hashCode()>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.Self: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.PropertyName: int hashCode()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<java.util.AbstractSet: int hashCode()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.TreeMap$Entry: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.net.URL: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.ObjectName: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.Vector: void removeRange(int,int)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean contains(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.TreeSet: int size()>
<java.util.Hashtable: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><java.util.EnumMap$1: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<java.util.TreeMap$EntrySet: void clear()>-><java.util.TreeMap: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.EnumMap$KeySet: void clear()>-><java.util.EnumMap: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Vector: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.util.RegexpOptions: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.slf4j.helpers.SubstituteLogger: int hashCode()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.SymbolProc: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.asm.Type: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.EnumMap$KeySet: int size()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque: boolean add(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.IdentityHashMap$Values: int size()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: int hashCode()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Maps$TransformedEntriesSortedMap: void <init>(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$TransformedEntriesMap: void <init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.http_proxies.HttpProxies: java.lang.String getTitle()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.util.LinkedMultiValueMap: int hashCode()>
<java.util.AbstractList: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.IntervalMonthData: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<javax.security.auth.Subject$SecureSet: void clear()>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.PropertyPermission: int hashCode()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.thoughtworks.xstream.core.util.WeakCache: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$SynchronizedCollection: int size()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.UnboxedFixnum: int hashCode()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.net.Inet4Address: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.thoughtworks.xstream.io.path.Path: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.DateTimeZone: int hashCode()>
<io.undertow.util.HeaderValues$1: void set(java.lang.String)>-><java.lang.IllegalStateException: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$SingletonSet: int size()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.validation.BindException: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Byte: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: void clear()>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.beans.PropertyDescriptor: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Locale$LocaleKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.sql.DriverInfo: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap$LinkedEntrySet: void clear()>-><java.util.LinkedHashMap: void clear()>
<java.util.concurrent.ArrayBlockingQueue: void clear()>-><java.util.concurrent.ArrayBlockingQueue$Itrs: void queueIsEmpty()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><org.jruby.RubyArray: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.MemberKey: int hashCode()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><jnr.constants.ConstantSet: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.core.Conventions: java.lang.Class getClassForValue(java.lang.Object)>-><java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>-><java.util.ArrayDeque: boolean remove(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.zone.ZoneOffsetTransitionRule: int hashCode()>
<org.springframework.http.server.reactive.ReactorServerHttpResponse: void <init>(reactor.netty.http.server.HttpServerResponse,org.springframework.core.io.buffer.DataBufferFactory)>-><org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><com.google.common.collect.Maps$EntrySet: int size()>
<java.lang.Object: java.lang.String toString()>-><com.thoughtworks.xstream.core.util.FastField: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.internal.database.base.Schema: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.io.UrlResource: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Hashtable$KeySet: void clear()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.servlet.spec.SecurityActions$2: io.undertow.servlet.spec.HttpSessionImpl run()>-><io.undertow.servlet.spec.HttpSessionImpl: io.undertow.servlet.spec.HttpSessionImpl forSession(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: java.util.List getAllErrors()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.crypto.CryptoAllPermission: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.springframework.core.io.buffer.LimitedDataBufferList: void clear()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.CharacterType: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.OffsetDateTime: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><org.jruby.RubyHash$BaseCollection: int size()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jsoup.helper.ChangeNotifyingArrayList: void clear()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>-><java.util.ArrayDeque: boolean add(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.FilterInvocation: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.jruby.util.io.SelectorPool: void returnToPool(java.nio.channels.Selector)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$EmptyList: int size()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<java.util.Hashtable: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray(java.lang.Object[])>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.cglib.core.ClassInfo: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.Expression: int hashCode()>
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<java.util.Hashtable$ValueCollection: void clear()>-><java.util.Hashtable: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.AbstractMap: void clear()>-><io.micrometer.shaded.org.pcollections.IntTreePMap: java.util.Set entrySet()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: boolean hasWaiters()>-><java.lang.IllegalMonitorStateException: void <init>()>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><java.lang.String: int length()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyModule: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$EmptyList: int hashCode()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.jruby.RubyArray: void clear()>-><org.jruby.specialized.RubyArrayTwoObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.dom4j.tree.BackedList: void clear()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.org.objectweb.asm.Type: int hashCode()>
<java.util.List: void sort(java.util.Comparator)>-><io.undertow.util.HeaderValues: java.util.ListIterator listIterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.UTCDateTimeZone: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.asm.ConstantDynamic: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: boolean isEmpty()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.AbstractList: void clear()>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: int size()>
<javax.net.ssl.SNIHostName: int hashCode()>-><java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.io.UrlResource: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.GJChronology: int hashCode()>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><org.springframework.core.Conventions: java.lang.String pluralize(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><org.hsqldb.HsqlNameManager$HsqlName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.lang.reflect.Constructor: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyFixnum: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.Proxy$KeyX: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.TransformedIterator: java.lang.Object next()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.GJCacheKey: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.javasupport.JavaClass: int hashCode()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.chrono.AbstractChronology: int hashCode()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<io.undertow.util.HeaderValues: java.lang.String[] toArray()>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: void modifyCheck()>
<org.springframework.core.style.DefaultToStringStyler: void styleFieldStart(java.lang.StringBuilder,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.chrono.GJChronology: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.EnumMap$KeySet: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.EnumMap$EntryIterator$Entry: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.Proxy$Key2: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: int hashCode()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String getServletName()>-><org.springframework.boot.web.servlet.DynamicRegistrationBean: java.lang.String getOrDeduceName(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.jruby.specialized.RubyArrayOneObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.specialized.RubyArraySpecialized: boolean packed()>
<org.springframework.validation.BindException: java.util.List getAllErrors()>-><org.springframework.validation.AbstractBindingResult: java.util.List getAllErrors()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: java.lang.String removeLast()>-><java.util.NoSuchElementException: void <init>()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.ScopeModule: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.PropertyPermission: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues$1: java.lang.Object next()>-><io.undertow.util.HeaderValues$1: java.lang.String next()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.PatternEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Hashtable$ValueCollection: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.undertow.util.CopyOnWriteMap: int size()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.Maps: java.util.SortedMap transformEntries(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Platform: java.util.SortedMap mapsTransformEntriesSortedMap(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean isEmpty()>
<org.jruby.ir.IRBuilder$2: int compare(java.util.Map$Entry,java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Maps: java.lang.Object safeGet(java.util.Map,java.lang.Object)>-><com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.WeakHashMap$EntrySet: int size()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.base.AbstractDuration: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.support.NullBean: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: int size()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.client_side_filtering.ClientSideFiltering: java.lang.String getTitle()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$SynchronizedList: int hashCode()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<java.util.AbstractList: void clear()>-><java.util.Collections$SingletonList: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.awt.Font: boolean equals(java.lang.Object)>
<org.jruby.javasupport.binding.InterfaceInitializer: void setupInterfaceMethods(java.lang.Class,org.jruby.javasupport.binding.Initializer$State)>-><io.undertow.util.HeaderValues: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.Vector: void clear()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.AttributeEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.Label: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Thread$WeakClassKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletRequestContext: io.undertow.servlet.handlers.ServletRequestContext current()>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.RowType: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><reactor.netty.http.server.HttpServerRequest: io.netty.handler.codec.http.HttpHeaders requestHeaders()>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyHash$BaseCollection: java.util.Iterator iterator()>
<com.google.common.collect.Maps: java.util.NavigableMap transformEntries(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$TransformedEntriesNavigableMap: void <init>(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.http.HttpEntity: int hashCode()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>-><org.springframework.http.server.reactive.NettyHeadersAdapter: io.netty.handler.codec.http.HttpHeaders access$100(org.springframework.http.server.reactive.NettyHeadersAdapter)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.LinkedHashMap$LinkedKeySet: void clear()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Long: int hashCode()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.validation.AbstractBindingResult: java.util.List getAllErrors()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.runtime.Block: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.base.AbstractDuration: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.Date: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.util.Set entrySet()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.asm.Type: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.DateTimeType: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<java.util.WeakHashMap$KeySet: void clear()>-><java.util.WeakHashMap: void clear()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String getCollectionTypeString(java.util.Collection)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.util.RecursiveComparator$Pair: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.path_traversal.PathTraversal: java.lang.String getTitle()>
<com.google.common.collect.Maps$11: void <init>(com.google.common.collect.Maps$EntryTransformer)>-><java.lang.Object: void <init>()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><io.undertow.util.HeaderValues: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.javasupport.JavaMethod: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>-><java.security.Provider$Service: java.lang.Object newInstance(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.SymbolProc: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<java.util.ComparableTimSort: void mergeHi(int,int,int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.UTCDateTimeZone: int hashCode()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><com.google.common.collect.Multimaps$Keys$1$1: int getCount()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.ArrayList: void clear()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.DoubleNode: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: int size()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: java.lang.String removeFirst()>-><io.undertow.util.HeaderValues: java.lang.String pollFirst()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.RuleBasedCollator: int hashCode()>
<io.undertow.util.HeaderValues: java.util.List subList(int,int)>-><io.undertow.util.HeaderValues: java.lang.String get(int)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.UTCDateTimeZone: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.config.DependencyDescriptor: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$ValuesView: java.util.Iterator iterator()>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<org.springframework.validation.AbstractBindingResult: int hashCode()>-><java.lang.String: int hashCode()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.core.style.ToStringCreator: void printFieldSeparatorIfNecessary()>-><org.springframework.core.style.DefaultToStringStyler: void styleFieldSeparator(java.lang.StringBuilder)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.jsonwebtoken.impl.JwtMap: boolean isEmpty()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.logging.Level: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Maps$EntrySet: boolean isEmpty()>-><java.util.AbstractMap: boolean isEmpty()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.jruby.runtime.ObjectSpace$ObjectGroup: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.Fixnum: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><javax.security.auth.Subject$SecureSet: void clear()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.TimestampData: int hashCode()>
<org.springframework.core.style.DefaultToStringStyler: void styleValue(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.math.BigDecimal: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.DurationFieldType$StandardDurationFieldType: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.CompositeDataSupport: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$EmptyList: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>-><com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.javasupport.JavaArray: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.FloatNode: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><io.jsonwebtoken.impl.JwtMap: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.jar.Attributes: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.dom4j.tree.BackedList: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Vector: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeMap$KeySet: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<javax.net.ssl.SNIHostName: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<sun.security.jca.ProviderList: java.security.Provider$Service getService(java.lang.String,java.lang.String)>-><java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.EnumMap$KeySet: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.expression.TypedValue: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.web.context.support.ServletContextResource: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>
<org.jruby.NativeException: java.lang.String searchStackMessage(java.lang.Throwable)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><org.springframework.http.server.DefaultPathContainer: java.util.List elements()>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<sun.text.normalizer.TrieIterator: void calculateNextSupplementaryElement(sun.text.normalizer.RangeValueIterator$Element)>-><sun.net.idn.StringPrep$StringPrepTrieImpl: int getFoldingOffset(int)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$EntrySet: void clear()>-><java.util.WeakHashMap: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.invoke.LambdaFormEditor$Transform: int hashCode()>
<org.springframework.http.server.DefaultRequestPath: void <init>(java.net.URI,java.lang.String)>-><java.lang.Object: void <init>()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.DecimalFormatSymbols: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.internal.util.Pair: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: java.lang.String get(int)>-><java.lang.IndexOutOfBoundsException: void <init>()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.SubList$1: boolean hasNext()>
<io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.JapaneseImperialCalendar: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.javasupport.JavaMethod: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: int hashCode()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.jsontype.NamedType: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.stream.ForEachOps$ForEachTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: boolean containsKey(java.lang.Object)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LessonTitleService: void <init>(org.owasp.webgoat.session.WebSession)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: int hashCode()>
<com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyMatchData: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Hashtable: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Arrays$ArrayList: int size()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.cert.X509CRLEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeSet: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.security.Provider: void implPutAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.MemberKey: int hashCode()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.Provider$ServiceKey: int hashCode()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.util.List getValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean containsKey(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.nio.charset.Charset: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.util.List getAssignments()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedHashMap$LinkedEntrySet: int size()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.DurationFieldType$StandardDurationFieldType: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.io.File: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.FrozenString: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getName()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><com.headius.invokebinder.Signature: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.ArrayNode: int hashCode()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object get(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.Maps$Values: boolean isEmpty()>
<java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList$1: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.io.ObjectStreamClass$WeakClassKey: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.io.InputStreamResource: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Vector$Itr: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.web.context.support.ServletContextResource: int hashCode()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque: boolean contains(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.asm.ConstantDynamic: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.MBeanConstructorInfo: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.x509.Extension: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.jwt.JWT: java.lang.String getTitle()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.cert.Certificate: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><sun.security.util.DerValue: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.hsqldb.types.IntervalSecondData: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>-><org.springframework.core.style.ToStringCreator: org.springframework.core.style.ToStringCreator append(java.lang.String,java.lang.Object)>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.field.UnsupportedDurationField: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1: com.google.common.collect.Multiset$Entry transform(java.util.Map$Entry)>-><com.google.common.collect.Multimaps$Keys$1$1: void <init>(com.google.common.collect.Multimaps$Keys$1,java.util.Map$Entry)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.format.DecimalStyle: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.Type: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Package: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyModule: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.zone.ZoneRules: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.WeakCache$CacheValue: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.base.AbstractPeriod: boolean equals(java.lang.Object)>
<java.util.stream.ForEachOps$ForEachOrderedTask: void doCompute(java.util.stream.ForEachOps$ForEachOrderedTask)>-><java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.security.ssl.SSLSessionImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.javasupport.JavaObject: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeSet: boolean isEmpty()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.BigIntegerNode: int hashCode()>
<java.util.EnumMap: int entryHashCode(int)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<sun.util.locale.provider.LocaleProviderAdapter: boolean isSupportedLocale(java.util.Locale,sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.StringLiteral: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.AbstractSet: int hashCode()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.Hashtable: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.DoubleNode: int hashCode()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.core.Conventions: java.lang.String pluralize(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.lang.Object: java.lang.String toString()>-><java.util.Hashtable: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.sun.beans.WildcardTypeImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Long: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.time.OffsetTime: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.metamodel.model.domain.NavigableRole: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.web.method.ControllerAdviceBean: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$UnmodifiableList: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Long: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Vector$Itr: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.ZoneOffset: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.io.ByteArrayResource: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.Object getDetails()>
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.context.support.ApplicationListenerDetector: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.jruby.RubyHash$BaseCollection: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.ArrayList$SubList: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><java.time.zone.ZoneOffsetTransitionRule: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.security.Provider: void implPutAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.util.unit.DataSize: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.ObjectNode: int hashCode()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.Arrays$NaturalOrder: int compare(java.lang.Object,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.AbstractMap: int hashCode()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><ch.qos.logback.core.subst.Node: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.BlobDataID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Hint: void <init>(java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.GJCacheKey: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.Hashtable: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.HashMap$Node: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><sun.security.util.ObjectIdentifier: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><org.jruby.RubyHash$BaseSet: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.LinkedList: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.SymbolProc: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.validation.BindException: int hashCode()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Optional: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: java.lang.String resolveRequestUri(reactor.netty.http.server.HttpServerRequest)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.HashMap$KeySet: int size()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.IdentityHashMap$Values: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.DigitList: int hashCode()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: int size()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Character: int hashCode()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: java.lang.String remove(int)>-><io.undertow.util.HeaderValues: java.lang.String removeLast()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.undertow.util.CopyOnWriteMap: java.util.Set entrySet()>-><java.util.Collections$EmptyMap: java.util.Set entrySet()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.jruby.util.io.SelectorPool: java.nio.channels.Selector retrieveFromPool(java.nio.channels.spi.SelectorProvider)>-><io.undertow.util.HeaderValues: java.lang.Object remove(int)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Date: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$EmptySet: boolean isEmpty()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.concurrent.ArrayBlockingQueue: void clear()>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<com.google.common.collect.Maps$TransformedEntriesMap: int size()>-><com.google.common.collect.Maps$TransformedEntriesMap: int size()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: int size()>-><com.google.common.collect.Maps$EntrySet: int size()>
<org.springframework.core.Conventions: java.lang.String pluralize(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.DoubleNode: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>-><com.google.common.collect.ForwardingMultimap: boolean isEmpty()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.AbstractMap: int hashCode()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.AbstractCollection: void clear()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.UUID: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.springframework.util.ClassUtils: java.lang.String getShortNameAsProperty(java.lang.Class)>-><java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.HashMap$Node: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<java.util.Hashtable: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.EnumMap: int entryHashCode(int)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.servlet.spec.HttpSessionImpl$UnwrapSessionAction: java.lang.Object run()>-><io.undertow.servlet.spec.HttpSessionImpl$UnwrapSessionAction: io.undertow.server.session.Session run()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<com.google.common.collect.Maps$ImprovedAbstractMap: void <init>()>-><java.util.AbstractMap: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.security.Provider: void implPutAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.MBeanAttributeInfo: int hashCode()>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.introspect.MemberKey: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Float: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.convert.TypeDescriptor: int hashCode()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.RowType: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>
<java.util.ArrayDeque$DeqSpliterator: long estimateSize()>-><java.util.ArrayDeque$DeqSpliterator: int getFence()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.LocalDate: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: int hashCode()>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><org.springframework.core.Conventions: java.lang.Class getClassForValue(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.IntNode: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.net.Inet4Address: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.AbstractMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<org.springframework.validation.BindException: int hashCode()>-><org.springframework.validation.AbstractBindingResult: int hashCode()>
<java.util.AbstractCollection: java.lang.String toString()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.aop.support.DefaultIntroductionAdvisor: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.FunctionSQL: int hashCode()>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.security.jca.ProviderConfig: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyNil: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.UnboxedBoolean: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$7: java.lang.Object transformEntry(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multimaps$UnmodifiableMultimap$1: java.lang.Object apply(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.PatternEntry: int hashCode()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.NullNode: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.cglib.core.ClassInfo: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.hibernate.boot.model.relational.Namespace$Name: int hashCode()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.net.SocketPermission: int hashCode()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LabelService: void <init>(org.springframework.web.servlet.LocaleResolver,org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.PluginMessages)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.AbstractServerHttpRequest: void <init>(java.net.URI,java.lang.String,org.springframework.http.HttpHeaders)>-><java.lang.Object: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.ProcessEnvironment$StringEntry: int hashCode()>
<io.undertow.servlet.spec.HttpSessionImpl: io.undertow.server.session.Session getSession()>-><java.lang.SecurityManager: void checkPermission(java.security.Permission)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap: boolean isEmpty()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.ArrayDeque: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: int hashCode()>
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.http.server.reactive.NettyHeadersAdapter: void <init>(io.netty.handler.codec.http.HttpHeaders)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.SessionService: void <init>()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.util.HashSet: boolean isEmpty()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.util.calendar.CalendarDate: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.time.Clock$SystemClock: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.ObjectInstance: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Hashtable$KeySet: int size()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.validation.FieldError: int hashCode()>
<org.jruby.util.JRubyClassLoader: void terminateJarIndexCacheEntries()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.idor.IDOR: java.lang.String getTitle()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>-><org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$1: boolean isStatic()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.io.FilePermission: int hashCode()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Character: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.BuddhistChronology: int hashCode()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: boolean hasWaiters()>-><java.util.concurrent.locks.ReentrantLock$Sync: boolean isHeldExclusively()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>
<com.google.common.collect.Maps: com.google.common.base.Function asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeSet: void clear()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$UnmodifiableMap: int hashCode()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.AbstractSet: int hashCode()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<org.jruby.javasupport.binding.ClassInitializer: void setupClassMethods(java.lang.Class,org.jruby.javasupport.binding.Initializer$State)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.util.collections.WeakHashSet: void clear()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedList: int size()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.BuddhistChronology: boolean equals(java.lang.Object)>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.Collections$EmptySet: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque: boolean isEmpty()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.jca.ProviderConfig: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: int hashCode()>
<org.springframework.validation.BindException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.core.Conventions: java.lang.Class getClassForValue(java.lang.Object)>-><org.springframework.util.ClassUtils: boolean isJavaLanguageInterface(java.lang.Class)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.Duration: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.Clock$SystemClock: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.String: java.lang.String valueOf(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.net.URI: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.x509.AVA: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.BitSet: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.lang.Object: java.lang.Class getClass()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><java.util.logging.Level: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.CompositeType: int hashCode()>
<java.util.AbstractCollection: void clear()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.util.collections.WeakHashSet: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Short: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.lang.ProcessEnvironment$StringValues: void clear()>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<java.util.AbstractCollection: java.lang.String toString()>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$1: io.undertow.servlet.spec.ServletPrintWriterDelegate run()>-><java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<java.util.Spliterator: long getExactSizeIfKnown()>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.ClobDataID: boolean equals(java.lang.Object)>
<java.util.stream.ReferencePipeline$Head: void forEach(java.util.function.Consumer)>-><java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webwolf.WebWolf: void <init>()>
<org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.runtime.Helpers: void fillNil(org.jruby.runtime.builtin.IRubyObject[],int,int,org.jruby.Ruby)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.WeakCache$CacheValue: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.Method: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.WeakCache$CacheKey: int hashCode()>
<org.springframework.core.style.DefaultToStringStyler: void styleField(java.lang.StringBuilder,java.lang.String,java.lang.Object)>-><org.springframework.core.style.DefaultToStringStyler: void styleFieldEnd(java.lang.StringBuilder,java.lang.String)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<ch.qos.logback.core.joran.spi.SimpleRuleStore: void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.ArrayList$SubList: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<java.util.TreeMap: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.java.proxies.ArrayJavaProxy: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.SimpleType: int hashCode()>
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.internal.info.MigrationInfoImpl: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.MBeanNotificationInfo: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Character$Subset: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.lang.StackTraceElement: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.stored.CrossSiteScriptingStored: java.lang.String getTitle()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.Expression: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.nio.charset.Charset: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: java.util.ArrayDeque$DeqSpliterator trySplit()>-><java.util.ArrayDeque$DeqSpliterator: int getFence()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><javax.net.ssl.SNIHostName: int hashCode()>
<io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><net.bytebuddy.matcher.FilterableList$Empty: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Vector: int size()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.jruby.RubyArray: void alloc(int)>-><org.jruby.runtime.Helpers: void fillNil(org.jruby.runtime.builtin.IRubyObject[],org.jruby.Ruby)>
<java.util.AbstractMap$1: void clear()>-><org.springframework.util.ConcurrentReferenceHashMap: void clear()>
<java.lang.Object: java.lang.String toString()>-><javax.crypto.CryptoAllPermission: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.ObjectInstance: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><ch.qos.logback.core.status.StatusBase: int hashCode()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: org.springframework.http.HttpHeaders initHeaders(reactor.netty.http.server.HttpServerRequest)>-><org.springframework.http.HttpHeaders: void <init>(org.springframework.util.MultiValueMap)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.PatternEntry: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultToStringStyler: void styleIdentityHashCode(java.lang.StringBuilder,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.security.core.userdetails.User: int hashCode()>-><java.lang.String: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.lang.invoke.MemberName: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.LocalTime: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.IntNode: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<com.google.common.collect.Maps: java.util.Map transformValues(java.util.Map,com.google.common.base.Function)>-><com.google.common.collect.Maps: java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedHashMap$LinkedValues: int size()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.SimpleTimeZone: int hashCode()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><java.lang.String: int length()>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: int hashCode()>
<java.util.Collections$UnmodifiableRandomAccessList: java.util.List subList(int,int)>-><io.undertow.util.HeaderValues: java.util.List subList(int,int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<java.util.AbstractMap: java.lang.String toString()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: int size()>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><org.springframework.util.Assert: void isTrue(boolean,java.util.function.Supplier)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.config.DependencyDescriptor: int hashCode()>
<java.util.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.CurrentScope: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<sun.security.util.DisabledAlgorithmConstraints: boolean permits(java.util.Set,java.lang.String,java.security.AlgorithmParameters)>-><java.util.JumboEnumSet: boolean isEmpty()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Character: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Vector$Itr: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.LongNode: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>-><java.util.ArrayDeque: boolean delete(int)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.DurationFieldType$StandardDurationFieldType: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.nio.charset.Charset: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.DateTimeZone: int hashCode()>
<org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object,org.springframework.core.style.ToStringStyler)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.IRScope: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><sun.security.ssl.SecureKey: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.ProcessEnvironment$StringValues: int hashCode()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection: boolean isEmpty()>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><jnr.constants.ConstantSet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.ArrayType: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><com.thoughtworks.xstream.core.util.WeakCache: java.util.Set entrySet()>
<org.springframework.security.web.FilterInvocation: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webgoat.service.HintService: java.util.stream.Stream lambda$createAssignmentHints$1(java.util.List)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ast.SymbolNode: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><net.bytebuddy.matcher.FilterableList$Empty: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.metamodel.model.domain.NavigableRole: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.HsqlNameManager$HsqlName: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><java.util.ArrayDeque: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.AbstractList: void clear()>-><net.bytebuddy.matcher.FilterableList$Empty: int size()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Multimaps$UnmodifiableMultimap$1: java.lang.Object apply(java.lang.Object)>-><com.google.common.collect.Multimaps$UnmodifiableMultimap$1: java.util.Collection apply(java.util.Collection)>
<org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: int size()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.Fixnum: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.sql.DriverInfo: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.AbstractList: void clear()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyFixnum: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$1: io.undertow.servlet.spec.ServletPrintWriterDelegate run()>-><sun.misc.Unsafe: java.lang.Object allocateInstance(java.lang.Class)>
<java.util.AbstractList: void removeRange(int,int)>-><java.util.LinkedList$ListItr: void remove()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$SynchronizedCollection: int size()>
<java.util.ArrayDeque: java.util.Spliterator spliterator()>-><java.util.ArrayDeque$DeqSpliterator: void <init>(java.util.ArrayDeque,int,int)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.asm.Handle: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashMap$KeySet: int size()>
<java.lang.Object: java.lang.String toString()>-><java.time.Instant: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector$Itr: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.sql.DriverInfo: boolean equals(java.lang.Object)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.AbstractMap: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.concurrent.ConcurrentHashMap$CollectionView: void clear()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.base.AbstractPeriod: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.io.buffer.NettyDataBufferFactory: void <init>(io.netty.buffer.ByteBufAllocator)>-><java.lang.Object: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.JavaType: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.ArrayType: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.util.LinkedMultiValueMap: java.util.Set entrySet()>
<org.jruby.util.JRubyClassLoader: void terminateJarIndexCacheEntries()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.Objects: int hashCode(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.expression.TypedValue: boolean equals(java.lang.Object)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<sun.security.ssl.SessionId: byte[] getId()>-><java.lang.Object: java.lang.Object clone()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyString: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.zone.ZoneOffsetTransitionRule: int hashCode()>
<org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.jruby.ir.IRBuilder$2: int compare(java.util.Map$Entry,java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyModule: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.Locale: int hashCode()>
<java.util.stream.ForEachOps$ForEachOp$OfRef: void accept(java.lang.Object)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jcodings.Encoding: int hashCode()>
<java.util.Collections$SetFromMap: boolean contains(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: boolean containsKey(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Thread$WeakClassKey: int hashCode()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.runtime.Arity: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.LongNode: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.context.support.ResourceBundleMessageSource$MessageSourceControl: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: java.util.Locale getDefaultLocale()>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean add(java.lang.String)>-><io.undertow.util.HeaderValues: void addLast(java.lang.String)>
<java.util.Hashtable: java.lang.String toString()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.validation.ObjectError: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.ScopeModule: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.UnboxedFixnum: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$Values: void clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><javax.security.auth.Subject$SecureSet: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.BooleanNode: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.IdentityHashMap$KeySet: void clear()>
<java.lang.Object: java.lang.String toString()>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.metamodel.model.domain.NavigableRole: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.ArrayDeque$DeqSpliterator: int getFence()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.ZonedDateTime: int hashCode()>
<sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>-><sun.security.ssl.SessionId: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.ParsePosition: int hashCode()>
<io.undertow.util.HeaderValues: boolean contains(java.lang.Object)>-><io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.RestartLessonService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.flywaydb.core.Flyway)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.ArrayList: void clear()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><io.jsonwebtoken.impl.JwtMap: int hashCode()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.awt.geom.Point2D: int hashCode()>
<java.util.HashMap$Values: void clear()>-><java.util.HashMap: void clear()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys: int distinctElements()>-><java.util.Collections$UnmodifiableMap: int size()>
<java.lang.Object: java.lang.String toString()>-><java.time.zone.ZoneRules: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionAdvanced: java.lang.String getTitle()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.passes.CompilerPass: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Locale: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><com.sun.beans.WildcardTypeImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.io.FileSystemResource: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.java.proxies.ArrayJavaProxy: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.Year: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.text.AttributeEntry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: boolean containsKey(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.org.objectweb.asm.Type: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.TemporaryVariable: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.io.FileSystemResource: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyFloat: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$1: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<java.util.Hashtable: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$2$1: void accept(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer extractPathWithinApplication(org.springframework.http.server.PathContainer,org.springframework.http.server.PathContainer)>-><org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.x509.Extension: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Float: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$1: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.util.PropertyPermission: int hashCode()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.GregorianCalendar: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyObject: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.util.RegexpOptions: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<java.util.Hashtable: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.LinkedHashMap$LinkedEntrySet: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.Provider$UString: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.persist.CachedObjectBase: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$1$1: int getCount()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.IntervalSecondData: int hashCode()>
<org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.tz.CachedDateTimeZone: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.AbstractSet: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge8.Challenge8: java.lang.String getTitle()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.validation.BindException: java.lang.Object getTarget()>-><org.springframework.validation.BindException: java.lang.Object getTarget()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.ProcessEnvironment$StringValues: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.lang.NullPointerException: void <init>()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: java.lang.Object apply(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.GJChronology: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.AbstractList: void removeRange(int,int)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.cglib.core.Signature: int hashCode()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)>-><org.springframework.context.support.ResourceBundleMessageSource$MessageSourceControl: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.RubyHash$BaseSet: void clear()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.UUID: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.UTCDateTimeZone: int hashCode()>
<org.springframework.core.annotation.AnnotationsScanner: java.lang.annotation.Annotation[] getDeclaredAnnotations(java.lang.reflect.AnnotatedElement,boolean)>-><org.springframework.core.annotation.AnnotatedElementUtils$AnnotatedElementForAnnotations: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.FieldPosition: int hashCode()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.jruby.RubyHash$BaseSet: void clear()>-><org.jruby.RubyHash: void clear()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean owns(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: boolean isOwnedBy(java.util.concurrent.locks.AbstractQueuedSynchronizer)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.runtime.Block: boolean equals(java.lang.Object)>
<org.springframework.util.ClassUtils: java.lang.String getShortNameAsProperty(java.lang.Class)>-><java.lang.String: int lastIndexOf(int)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.awt.Font: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.UnboxedBoolean: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.nio.charset.Charset: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.HashSet: void clear()>
<java.lang.Object: java.lang.String toString()>-><sun.security.x509.AVA: int hashCode()>
<com.google.common.collect.Multisets$EntrySet: void clear()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: com.google.common.collect.Multiset multiset()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>
<java.lang.Object: java.lang.String toString()>-><java.lang.invoke.MethodType: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.provider.PolicyFile$SelfPermission: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.provider.PolicyParser$PrincipalEntry: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$EntrySet: int size()>
<java.util.AbstractCollection: void clear()>-><io.micrometer.shaded.org.pcollections.IntTree$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.LocalDateTime: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: int hashCode()>
<java.util.Hashtable$EntrySet: void clear()>-><java.util.Hashtable: void clear()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.springframework.http.server.reactive.ReactorServerHttpResponse: void <init>(reactor.netty.http.server.HttpServerResponse,org.springframework.core.io.buffer.DataBufferFactory)>-><org.springframework.http.HttpHeaders: void <init>(org.springframework.util.MultiValueMap)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.javasupport.JavaClass: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.AbstractMap: int hashCode()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.AbstractList: int hashCode()>
<java.util.AbstractList: void clear()>-><java.util.AbstractList: void removeRange(int,int)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.SubList: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter,org.springframework.http.server.reactive.NettyHeadersAdapter$1)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.apache.logging.log4j.spi.Provider: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.DateFormatSymbols: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.core.io.SerializedString: int hashCode()>
<java.util.Collections$UnmodifiableList: java.lang.Object get(int)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.StringLiteral: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.SymbolProc: int hashCode()>
<sun.net.RegisteredDomain: java.lang.String getRegisteredDomain(java.lang.String)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.Hashtable$Entry: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<org.springframework.core.io.buffer.LimitedDataBufferList: void clear()>-><java.util.ArrayList: void clear()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<java.util.HashMap$KeySet: void clear()>-><java.util.HashMap: void clear()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<io.undertow.util.CopyOnWriteMap: java.util.Set entrySet()>-><java.util.HashMap: java.util.Set entrySet()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.CurrentScope: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.SymbolProc: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.Symbol: boolean equals(java.lang.Object)>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.security.Provider: void implPutAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.LocalDate: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.HsqlNameManager$HsqlName: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Maps$7: java.lang.Object transformEntry(java.lang.Object,java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.BlobDataID: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.Row: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><sun.util.BuddhistCalendar: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.beans.IndexedPropertyDescriptor: int hashCode()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.util.RegexpOptions: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.JumboEnumSet: int size()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.PropertyValue: int hashCode()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: void <init>(java.net.URI,java.lang.String)>-><org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer parsePath(java.lang.String)>
<java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.format.InternalParserDateTimeParser: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.web.authentication.WebAuthenticationDetails: int hashCode()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Boolean: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasWaiters(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.String toString()>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.awt.Font: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.Optional: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: boolean equals(java.lang.Object)>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyBoolean: int hashCode()>
<java.util.Iterator: void remove()>-><java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><jnr.constants.ConstantSet: int size()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.String getMessage()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.List lambda$createAssignmentHints$0(org.owasp.webgoat.lessons.Assignment)>-><org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.javasupport.JavaArray: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.net.URI: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.UnresolvedPermission: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.AbstractMap: boolean isEmpty()>
<org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>-><org.springframework.core.style.ToStringCreator: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.OffsetDateTime: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.util.LinkedMultiValueMap: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Integer: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Boolean: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractCollection: void clear()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.stream.Nodes$SizedCollectorTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><org.springframework.boot.web.servlet.RegistrationBean: int getOrder()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Integer: int hashCode()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.BlobDataID: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate: sun.misc.Unsafe access$100()>-><io.undertow.servlet.spec.ServletPrintWriterDelegate: sun.misc.Unsafe getUnsafe0()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.Duration: boolean equals(java.lang.Object)>
<org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: void alloc(int)>
<java.util.Hashtable: java.lang.String toString()>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.sql.Timestamp: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.net.URI: int hashCode()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: int hashCode()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.javasupport.JavaConstructor: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.GJChronology: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.ImmutableDescriptor: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyObject: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.Self: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyFloat: int hashCode()>
<org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.access.SecurityConfig: int hashCode()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><reactor.netty.http.server.HttpServerRequest: java.net.InetSocketAddress hostAddress()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.ScopeModule: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>-><org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.BinaryData: int hashCode()>
<sun.util.locale.provider.CalendarNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.http.HttpEntity: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: org.springframework.http.HttpHeaders initHeaders(reactor.netty.http.server.HttpServerRequest)>-><reactor.netty.http.server.HttpServerRequest: io.netty.handler.codec.http.HttpHeaders requestHeaders()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.java.proxies.ArrayJavaProxy: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace$Name: boolean equals(java.lang.Object)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.SimpleDateFormat: int hashCode()>
<java.net.IDN$1: java.io.InputStream run()>-><java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.webwolf_introduction.WebWolfIntroduction: java.lang.String getTitle()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.WeakHashMap$KeySet: void clear()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.AbstractMap$SimpleEntry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.factory.config.DependencyDescriptor: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.Period: boolean equals(java.lang.Object)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues: int size()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><javax.net.ssl.SNIHostName: int hashCode()>
<io.undertow.servlet.core.ApplicationListeners$1: java.lang.Object initialValue()>-><io.undertow.servlet.core.ApplicationListeners$1: io.undertow.servlet.core.ApplicationListeners$ListenerState initialValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.BooleanNode: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><org.springframework.core.Conventions: java.lang.Object peekAhead(java.util.Collection)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.headius.invokebinder.Signature: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.DigitList: int hashCode()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.config.RuntimeBeanReference: int hashCode()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap: java.util.Set entrySet()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<com.google.common.collect.Maps$TransformedEntriesMap: void <init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$SynchronizedMap: int hashCode()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.text.AttributeEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$SingletonMap: boolean isEmpty()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><java.lang.StringBuilder: void <init>()>
<java.util.stream.ReferencePipeline$7$1: void accept(java.lang.Object)>-><java.util.stream.ReferencePipeline: void forEach(java.util.function.Consumer)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashMap$Values: int size()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<io.undertow.util.HeaderValues: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<java.lang.Object: java.lang.String toString()>-><java.lang.invoke.LambdaForm: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Hashtable$Entry: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.WeakHashMap$Entry: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<java.util.SubList: void removeRange(int,int)>-><java.util.SubList: void checkForComodification()>
<java.lang.Object: java.lang.String toString()>-><java.time.Year: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.BitSet: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.support.AbstractBeanDefinition: int hashCode()>
<sun.util.locale.provider.CalendarNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.WeakHashMap$EntrySet: void clear()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.AbstractMap$SimpleEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: void <init>(reactor.netty.http.server.HttpServerRequest,org.springframework.core.io.buffer.NettyDataBufferFactory)>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: org.springframework.http.HttpHeaders initHeaders(reactor.netty.http.server.HttpServerRequest)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.security.web.header.Header: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasWaiters(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean owns(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>
<org.springframework.core.Conventions: java.lang.Object peekAhead(java.util.Collection)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyHash: java.util.Set entrySet()>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<io.undertow.util.HeaderValues: java.lang.Object get(int)>-><io.undertow.util.HeaderValues: java.lang.String get(int)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.POJONode: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.springframework.core.io.buffer.LimitedDataBufferList: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.util.DerValue: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<java.util.HashMap$Values: void clear()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: void clear()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.jar.Attributes$Name: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.DefaultPathContainer$DefaultSeparator: java.lang.String value()>
<java.lang.Object: java.lang.String toString()>-><java.security.CodeSource: int hashCode()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><io.undertow.servlet.spec.SecurityActions$1: java.lang.Object run()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.stream.ReferencePipeline$3$1: void accept(java.lang.Object)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.util.RegexpOptions: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.validation.ObjectError: int hashCode()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.TimestampData: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.Year: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.RegularEnumSet: void clear()>
<java.util.Objects: int hashCode(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$SynchronizedCollection: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyBasicObject: boolean equals(java.lang.Object)>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>-><org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String getRedirectUrl()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: void <init>(reactor.netty.http.server.HttpServerRequest,org.springframework.core.io.buffer.NettyDataBufferFactory)>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.Year: int hashCode()>
<java.util.Collections$UnmodifiableMap: java.util.Set keySet()>-><com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set keySet()>
<java.lang.Object: java.lang.String toString()>-><java.util.IdentityHashMap$KeySet: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.aop.support.DefaultIntroductionAdvisor: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyHash$ConvertingEntry: int hashCode()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.RegularEnumSet: void clear()>
<java.util.Collections$SynchronizedCollection: int size()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubySymbol: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.field.PreciseDurationField: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.awt.Color: boolean equals(java.lang.Object)>
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>-><java.security.Provider: void ensureLegacyParsed()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: int hashCode()>
<java.util.IdentityHashMap$Values: void clear()>-><java.util.IdentityHashMap: void clear()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<org.jruby.RubyFile$2: int read()>-><java.io.InputStreamReader: int read()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jcodings.Encoding: int hashCode()>
<java.util.AbstractMap: boolean isEmpty()>-><com.google.common.collect.Maps$TransformedEntriesMap: int size()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><java.util.ArrayDeque$DeqIterator: void remove()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><org.springframework.util.ClassUtils: java.lang.String getShortNameAsProperty(java.lang.Class)>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$2: java.lang.Object run()>-><io.undertow.servlet.spec.ServletPrintWriterDelegate$2: sun.misc.Unsafe run()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.CurrentScope: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.security.AllPermission: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.ScopeModule: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.WeakHashMap$EntrySet: void clear()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$7$1: void accept(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$SingletonList: int size()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: int hashCode()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>-><java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Hashtable$ValueCollection: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: java.lang.String set(int,java.lang.String)>-><io.undertow.util.HeaderValues: int index(int)>
<org.springframework.security.web.FilterInvocation: java.lang.String getRequestUrl()>-><org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(javax.servlet.http.HttpServletRequest)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.AbstractSet: int hashCode()>
<java.security.Provider: void implPutAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.AbstractMap: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.springframework.core.style.DefaultToStringStyler: void styleFieldSeparator(java.lang.StringBuilder)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyObject: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.internal.database.base.Schema: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.MBeanNotificationInfo: int hashCode()>
<org.owasp.webgoat.service.HintService: org.owasp.webgoat.lessons.Hint lambda$createHint$2(org.owasp.webgoat.lessons.Assignment,java.lang.String)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getPath()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><io.jsonwebtoken.impl.JwtMap: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: void clear()>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.IntervalSecondData: boolean equals(java.lang.Object)>
<java.util.Hashtable: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.JavaObjectData: int hashCode()>
<io.undertow.servlet.spec.SecurityActions$1: io.undertow.servlet.handlers.ServletRequestContext run()>-><io.undertow.servlet.handlers.ServletRequestContext: io.undertow.servlet.handlers.ServletRequestContext current()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.LinkedHashMap$LinkedEntrySet: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.io.InputStreamResource: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.JumboEnumSet: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: void mergeHi(int,int,int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Short: int hashCode()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.internal.database.base.Schema: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><net.bytebuddy.matcher.FilterableList$Empty: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.RubyHash$BaseCollection: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><javax.security.auth.Subject$SecureSet: int size()>
<java.lang.Object: java.lang.String toString()>-><java.util.EnumMap: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap: java.util.Set entrySet()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.Collections$UnmodifiableCollection: boolean isEmpty()>-><java.util.ArrayDeque: boolean isEmpty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.internal.info.MigrationInfoImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletRequestContext: io.undertow.servlet.handlers.ServletRequestContext current()>-><java.lang.ThreadLocal: java.lang.Object get()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.awt.geom.Point2D: int hashCode()>
<com.thoughtworks.xstream.converters.collections.TreeMapConverter$NullComparator: int compare(java.lang.Object,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: boolean equals(java.lang.Object)>
<org.springframework.core.OrderComparator: java.lang.Integer findOrder(java.lang.Object)>-><org.springframework.boot.web.servlet.RegistrationBean: int getOrder()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.representations.BasicBlock: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.HashMap: int hash(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.config.BeanExpressionContext: int hashCode()>
<javax.management.openmbean.TabularDataSupport: void putAll(java.util.Map)>-><java.util.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><sun.security.ssl.SecureKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.http.HttpEntity: boolean equals(java.lang.Object)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.DecimalNode: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.IdentityHashMap$EntrySet: void clear()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.servlet.spec.HttpSessionImpl: io.undertow.server.session.Session getSession()>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.BasicPermission: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<org.springframework.security.web.FilterInvocation: java.lang.String toString()>-><org.springframework.security.web.FilterInvocation: java.lang.String getRequestUrl()>
<io.undertow.util.HeaderValues: java.util.List subList(int,int)>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.aop.support.AbstractPointcutAdvisor: int hashCode()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Hashtable$KeySet: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.io.FilePermission: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.headius.invokebinder.Signature: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Optional: int hashCode()>
<io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.FrozenString: int hashCode()>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: boolean equals(java.lang.Object)>
<java.util.Hashtable$ValueCollection: void clear()>-><java.security.Provider: void clear()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><javax.crypto.CryptoPermission: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: void clear()>-><javax.security.auth.Subject$SecureSet$1: void remove()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.Hashtable$EntrySet: void clear()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.DecimalFormat: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.util.concurrent.ArrayBlockingQueue: void clear()>-><java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: void signal()>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(int)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.Boolean: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedHashMap$LinkedKeySet: int size()>
<java.io.ObjectInputStream$PeekInputStream: int available()>-><java.io.InputStream: int available()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.aop.support.DefaultIntroductionAdvisor: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<org.owasp.webgoat.lessons.Hint: int hashCode()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getHint()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.springframework.validation.BindException: java.lang.String getMessage()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.io.FileSystemResource: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.security.x509.RDN: int hashCode()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><io.undertow.servlet.spec.ServletPrintWriterDelegate$1: java.lang.Object run()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<org.springframework.validation.BindException: java.lang.String getObjectName()>-><org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.AbstractCollection: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.concurrent.ArrayBlockingQueue: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><ch.qos.logback.core.subst.Token: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.TreeMap$Entry: int hashCode()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.core.annotation.AnnotatedElementUtils$AnnotatedElementForAnnotations: java.lang.annotation.Annotation[] getDeclaredAnnotations()>-><java.lang.Object: java.lang.Object clone()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyMatchData: boolean equals(java.lang.Object)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.BuddhistChronology: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.ZoneId: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AbstractAuthenticationToken: boolean isAuthenticated()>
<java.util.AbstractSet: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.jruby.NativeException: java.lang.String searchStackMessage(java.lang.Throwable)>-><org.springframework.validation.BindException: java.lang.String getMessage()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.core.io.SerializedString: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace$Name: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyBasicObject: boolean equals(java.lang.Object)>
<org.jruby.specialized.RubyArrayTwoObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: void modifyCheck()>
<java.util.Hashtable: java.lang.String toString()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.convert.TypeDescriptor: int hashCode()>
<javax.security.auth.Subject$SecureSet: void clear()>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.core.context.SecurityContextImpl: int hashCode()>
<java.util.AbstractList: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.AbstractCollection: java.lang.String toString()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.util.ByteList: int hashCode()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.Throwable getCause()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.lang.Object: java.lang.String toString()>-><java.net.InetSocketAddress: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.DateTimeType: boolean equals(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.LocalTime: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.util.HeaderValues: java.util.ListIterator iterator(int,boolean)>-><io.undertow.util.HeaderValues$1: void <init>(io.undertow.util.HeaderValues,int,boolean)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$EmptyList: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.Hashtable: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: java.lang.String set(int,java.lang.String)>-><java.lang.IndexOutOfBoundsException: void <init>()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: int hashCode()>
<java.util.stream.AbstractPipeline: void copyInto(java.util.stream.Sink,java.util.Spliterator)>-><java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.tz.FixedDateTimeZone: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>-><java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.invoke.MemberName: int hashCode()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.MBeanOperationInfo: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.boot.model.relational.Namespace$Name: int hashCode()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<sun.util.locale.provider.LocaleProviderAdapter: boolean isSupportedLocale(java.util.Locale,sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>-><java.util.AbstractCollection: boolean contains(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.runtime.Block: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$Values: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.management.openmbean.TabularDataSupport: java.util.Set entrySet()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.util.ByteList: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object get(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.metamodel.model.domain.NavigableRole: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Short: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.LocalDate: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.ResourceBundle$CacheKey: int hashCode()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.UUID: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: boolean equals(java.lang.Object)>
<org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object,org.springframework.core.style.ToStringStyler)>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.util.unit.DataSize: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.CurrentScope: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.zone.ZoneRules: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.MBeanInfo: int hashCode()>
<org.springframework.http.server.reactive.AbstractServerHttpRequest: void <init>(java.net.URI,java.lang.String,org.springframework.http.HttpHeaders)>-><org.springframework.http.HttpLogging: org.apache.commons.logging.Log forLogName(java.lang.Class)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.password_reset.PasswordReset: java.lang.String getTitle()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReduceOps$1ReducingSink: void accept(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.util.RegexpOptions: int hashCode()>
<org.springframework.context.support.ResourceBundleMessageSource$MessageSourceControl: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)>-><java.util.Locale: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashSet: boolean isEmpty()>
<org.jruby.util.io.SelectorPool: java.nio.channels.Selector retrieveFromPool(java.nio.channels.spi.SelectorProvider)>-><io.undertow.util.HeaderValues: int size()>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$SynchronizedSet: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><java.time.zone.ZoneOffsetTransition: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableCollection: int size()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: int size()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: int hashCode()>
<org.jruby.javasupport.binding.Initializer: void handleScalaSingletons(java.lang.Class,org.jruby.javasupport.binding.Initializer$State)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.String toString()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int)>-><org.springframework.http.server.DefaultPathContainer: java.util.List elements()>
<java.util.ArrayDeque: boolean remove(java.lang.Object)>-><java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jcodings.Encoding: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletPrintWriterDelegate: sun.misc.Unsafe getUnsafe0()>-><java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.DurationFieldType$StandardDurationFieldType: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: int hashCode()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><sun.security.x509.GeneralName: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.concurrent.ArrayBlockingQueue: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.jsoup.helper.ChangeNotifyingArrayList: void clear()>
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>-><com.google.common.collect.Maps: java.util.Map transformValues(java.util.Map,com.google.common.base.Function)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.javasupport.JavaArray: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.OffsetTime: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.expression.TypedValue: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.text.AttributeEntry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.jruby.util.collections.WeakHashSet: void clear()>-><java.util.WeakHashMap: void clear()>
<java.util.concurrent.ArrayBlockingQueue: void clear()>-><java.util.concurrent.locks.ReentrantLock: boolean hasWaiters(java.util.concurrent.locks.Condition)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.TimeData: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><io.undertow.servlet.api.ServletInfo: java.lang.String toString()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Locale: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.TabularDataSupport: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.Label: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReduceOps$2ReducingSink: void accept(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.HashMap$Node: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.RegularEnumSet: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><io.jsonwebtoken.impl.JwtMap: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace: boolean equals(java.lang.Object)>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.text.AttributeEntry: java.lang.Object getValue()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.net.Inet6Address: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.IdentityHashMap$EntrySet: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.awt.image.ColorModel: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.CodeSigner: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.IRScope: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.runtime.Arity: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.springframework.validation.BindException: java.lang.String getObjectName()>-><org.springframework.validation.BindException: java.lang.String getObjectName()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.Nodes$SpinedNodeBuilder: void accept(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.field.MillisDurationField: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.jsoup.helper.ChangeNotifyingArrayList: void clear()>-><org.jsoup.nodes.Element$NodeList: void onContentsChanged()>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: int size()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyHash$BaseSet: java.util.Iterator iterator()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.field.MillisDurationField: int hashCode()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.javasupport.JavaObject: int hashCode()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.security.web.header.Header: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.util.MimeType: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.GJCacheKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.GJChronology: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.base.AbstractDuration: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.base.AbstractDuration: boolean equals(java.lang.Object)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.ClobDataID: boolean equals(java.lang.Object)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.time.Duration: java.lang.String toString()>
<java.util.TreeMap$Entry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Long: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.util.locale.provider.RuleBasedBreakIterator: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Date: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.ScopeModule: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<java.lang.ProcessEnvironment$StringEntrySet: void clear()>-><java.util.HashMap$EntrySet: void clear()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.Fixnum: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.POJONode: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$Values: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<java.util.Hashtable: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Maps$Values: void clear()>-><java.util.Collections$UnmodifiableMap: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$SynchronizedList: int hashCode()>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean contains(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.ImmutableDescriptor: int hashCode()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.RubyHash$BaseCollection: int size()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Hashtable$EntrySet: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.AbstractMap: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.Row: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: void <init>(com.google.common.collect.Multimaps$Keys$1,java.util.Map$Entry)>-><com.google.common.collect.Multisets$AbstractEntry: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.io.UrlResource: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Package: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.time.chrono.AbstractChronology: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Vector: int size()>
<java.lang.Object: java.lang.String toString()>-><java.time.OffsetDateTime: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.sun.jmx.mbeanserver.NamedObject: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.api.Location: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringKeySet: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: void clear()>-><java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.HashMap$EntrySet: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.MBeanAttributeInfo: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.jcodings.Encoding: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.jsontype.NamedType: int hashCode()>
<org.jruby.RubyHash$BaseCollection: void clear()>-><org.jruby.RubyHash: void clear()>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.owasp.webgoat.StartWebGoat: void <init>()>-><org.springframework.boot.web.servlet.support.SpringBootServletInitializer: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.calendar.ZoneInfo: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.Parameter: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.RuleBasedCollator: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.logging.Level: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.LocalDate: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyModule: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.TemporaryVariable: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><java.time.YearMonth: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.AttributedCharacterIterator$Attribute: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Vector: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.provider.PolicyFile$SelfPermission: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$EmptyMap: boolean isEmpty()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer extractPathWithinApplication(org.springframework.http.server.PathContainer,org.springframework.http.server.PathContainer)>-><java.util.Collections$UnmodifiableCollection: int size()>
<sun.net.RegisteredDomain: java.lang.String getRegisteredDomain(java.lang.String)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.config.BeanDefinitionHolder: int hashCode()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.springframework.validation.BindException: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.CodeSource: int hashCode()>
<org.springframework.http.server.reactive.ServerHttpResponseDecorator: void <init>(org.springframework.http.server.reactive.ServerHttpResponse)>-><java.lang.Object: void <init>()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.ArrayList: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.AbstractSet: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.time.format.DecimalStyle: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.LinkedHashMap$LinkedKeySet: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.cglib.core.MethodInfo: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.chrome_dev_tools.ChromeDevTools: java.lang.String getTitle()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap: java.util.Set entrySet()>
<org.springframework.http.server.DefaultRequestPath: void <init>(java.net.URI,java.lang.String)>-><org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.ArrayType: int hashCode()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><org.springframework.http.server.DefaultPathContainer: void <init>(java.lang.String,java.util.List)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.nio.ByteBuffer: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Short: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: int size()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.Hashtable$KeySet: void clear()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.StringBuilder: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.expression.TypedValue: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.core.OrderComparator: int compare(java.lang.Object,java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.ArrayDeque: void clear()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.DecimalNode: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.GJCacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream flatMap(java.util.function.Function)>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyFixnum: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.RubyArray: void clear()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: int hashCode()>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.google.common.collect.Maps$EntrySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.CharacterType: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.EnumMap$EntryIterator$Entry: int hashCode()>
<org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String getHint()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyHash: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.awt.Point: boolean equals(java.lang.Object)>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.UTCDateTimeZone: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.text.AttributeEntry: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><java.time.ZoneOffset: int hashCode()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>-><java.security.Provider: void checkInitialized()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.logging.Level: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.Proxy$Key2: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.HsqlException: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.persist.CachedObjectBase: boolean equals(java.lang.Object)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>-><io.undertow.server.session.InMemorySessionManager$SessionImpl: java.lang.String getId()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.invoke.LambdaForm: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedHashMap$LinkedEntrySet: void clear()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: int hashCode()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: int hashCode()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.deserialization.InsecureDeserialization: java.lang.String getTitle()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyMatchData: int hashCode()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.springframework.validation.BindException: java.lang.String getMessage()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.LinkedHashMap$LinkedValues: int size()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Vector: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.jruby.javasupport.binding.Initializer: void handleScalaSingletons(java.lang.Class,org.jruby.javasupport.binding.Initializer$State)>-><io.undertow.util.HeaderValues: int size()>
<java.lang.Object: java.lang.String toString()>-><java.util.AbstractList: int hashCode()>
<java.util.AbstractMap: java.lang.String toString()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.JavaObjectData: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter,java.lang.String)>-><java.lang.Object: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.MBeanConstructorInfo: int hashCode()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><io.undertow.util.HeaderValues: int size()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyHash: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><ch.qos.logback.core.joran.spi.ElementSelector: int hashCode()>
<com.google.common.collect.TransformedIterator: java.lang.Object next()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.util.LinkedMultiValueMap: void add(java.lang.Object,java.lang.Object)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: boolean equals(java.lang.Object)>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.http.server.reactive.NettyHeadersAdapter: java.util.List get(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: boolean containsKey(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Maps$EntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$UnmodifiableCollection: boolean remove(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.javasupport.JavaMethod: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.EnumMap$EntrySet: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.StringLiteral: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.TimeData: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.text.AttributeEntry: java.lang.Object getValue()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.Maps$7: void <init>(com.google.common.base.Function)>-><java.lang.Object: void <init>()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: int size()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.springframework.context.support.AbstractApplicationContext: void doClose()>-><org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void onClose()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.security.cert.X509CRLEntry: int hashCode()>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$UnmodifiableList: int hashCode()>
<org.springframework.core.io.buffer.NettyDataBufferFactory: void <init>(io.netty.buffer.ByteBufAllocator)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Maps$EntrySet: int size()>-><com.google.common.collect.Maps$TransformedEntriesMap: int size()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.x509.AVA: int hashCode()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: java.lang.String getScheme(reactor.netty.http.server.HttpServerRequest)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><io.undertow.util.HeaderValues: void clear()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.SortedOps$RefSortingSink: void accept(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.YearMonth: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: int hashCode()>
<com.google.common.collect.TransformedIterator: boolean hasNext()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.lang.String: int hashCode()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.String: int hashCode()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<java.util.Arrays$NaturalOrder: int compare(java.lang.Object,java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.Nodes$SizedCollectorTask$OfRef: void accept(java.lang.Object)>
<java.util.AbstractCollection: void clear()>-><jnr.constants.ConstantSet$ConstantIterator: void remove()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.javasupport.JavaConstructor: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<java.util.AbstractSet: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.jruby.specialized.RubyArrayTwoObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>
<java.util.Collections$SynchronizedCollection: int size()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.concurrent.ConcurrentHashMap$CollectionView: int size()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.logging.log4j.Level: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyBoolean: int hashCode()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.persist.CachedObjectBase: int hashCode()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.IdentityHashMap: int hashCode()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$UnmodifiableCollection: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.io.ObjectStreamClass$WeakClassKey: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedHashMap$LinkedKeySet: void clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashSet: java.util.Iterator iterator()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.util.Map$Entry next()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter,java.lang.String)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: int size()>
