<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.util.List getAssignments()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$1: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponents: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.ChallengeIntro: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getName()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjection: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.http_basics.HttpBasics: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictions: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.Boolean: boolean booleanValue()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.jwt.JWT: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.introduction.WebGoatIntroduction: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge8.Challenge8: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webwolf.WebWolf: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.missing_ac.MissingFunctionAC: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.template.LessonTemplate: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.csrf.CSRF: java.lang.String getTitle()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector$Itr: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.stored.CrossSiteScriptingStored: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.owasp.webgoat.service.HintService: org.owasp.webgoat.lessons.Hint lambda$createHint$2(org.owasp.webgoat.lessons.Assignment,java.lang.String)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getPath()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionMitigations: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.CrossSiteScripting: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<org.owasp.webgoat.service.HintService: java.util.stream.Stream lambda$createAssignmentHints$1(java.util.List)>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.mitigation.CrossSiteScriptingMitigation: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.util.List getAssignments()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.StartWebGoat: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.ssrf.SSRF: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.client_side_filtering.ClientSideFiltering: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge7.Challenge7: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.owasp.webgoat.service.HintService: java.util.stream.Stream lambda$createAssignmentHints$1(java.util.List)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.chrome_dev_tools.ChromeDevTools: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.owasp.webgoat.service.HintService: java.util.stream.Stream lambda$createAssignmentHints$1(java.util.List)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<org.owasp.webgoat.service.HintService: java.util.List lambda$createAssignmentHints$0(org.owasp.webgoat.lessons.Assignment)>-><org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream flatMap(java.util.function.Function)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.cia.CIA: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge5.Challenge5: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.path_traversal.PathTraversal: java.lang.String getTitle()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LessonMenuService: void <init>(org.owasp.webgoat.session.Course,org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.HintService: void <init>(org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.crypto.Crypto: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList$1: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.deserialization.InsecureDeserialization: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.secure_password.SecurePasswords: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LabelService: void <init>(org.springframework.web.servlet.LocaleResolver,org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xxe.XXE: java.lang.String getTitle()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.webwolf_introduction.WebWolfIntroduction: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.SessionService: void <init>()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.HintService: org.owasp.webgoat.lessons.Hint lambda$createHint$2(org.owasp.webgoat.lessons.Assignment,java.lang.String)>-><org.owasp.webgoat.lessons.Hint: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.http_proxies.HttpProxies: java.lang.String getTitle()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><org.owasp.webgoat.lessons.Assignment: java.util.List getHints()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.RestartLessonService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.flywaydb.core.Flyway)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.idor.IDOR: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.password_reset.PasswordReset: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.ReportCardService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.insecure_login.InsecureLogin: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionAdvanced: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.html_tampering.HtmlTampering: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LessonTitleService: void <init>(org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap: java.util.Set entrySet()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge1.Challenge1: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.auth_bypass.AuthBypass: java.lang.String getTitle()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LessonInfoService: void <init>(org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList: java.util.Iterator iterator()>
