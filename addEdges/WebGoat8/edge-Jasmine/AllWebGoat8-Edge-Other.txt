<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$UnmodifiableCollection: int size()>
<org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints: java.util.Map getEndpoints(java.util.Collection)>-><java.util.LinkedHashMap: void <init>()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.ReduceOps$1ReducingSink: void accept(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configurePathMatch(org.springframework.web.servlet.config.annotation.PathMatchConfigurer)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configurePathMatch(org.springframework.web.servlet.config.annotation.PathMatchConfigurer)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void writeBufferBlocking(boolean)>-><java.nio.Buffer: boolean hasRemaining()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.JavaObjectData: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches$MatchData: void <init>(io.undertow.servlet.handlers.ServletHandler,java.lang.String,java.lang.String,javax.servlet.http.MappingMatch,boolean,io.undertow.servlet.handlers.ServletPathMatches$1)>-><io.undertow.servlet.handlers.ServletPathMatches$MatchData: void <init>(io.undertow.servlet.handlers.ServletHandler,java.lang.String,java.lang.String,javax.servlet.http.MappingMatch,boolean)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.env.PropertySource: int hashCode()>
<org.owasp.webgoat.users.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.springframework.validation.BindException: void rejectValue(java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.endpoint.web.EndpointMapping: java.lang.String normalizePath(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: byte[] getKeySpec(java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jmx.MBeanServerNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.EnumSet: java.util.EnumSet clone()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><ch.qos.logback.classic.spi.ClassPackagingData: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.ArrayList: boolean isEmpty()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: int getQueueCapacity()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletManagementChildContextConfiguration$TomcatAccessLogCustomizer(org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$TomcatAccessLogCustomizer)>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.annotation.Annotation,java.lang.Class)>-><org.springframework.core.annotation.MergedAnnotations: org.springframework.core.annotation.MergedAnnotations from(java.lang.Object,java.lang.annotation.Annotation[],org.springframework.core.annotation.RepeatableContainers)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashMap$EntrySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.FunctionSQL: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.api.DeploymentInfo getDeploymentInfo()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>-><org.springframework.util.MimeType: java.lang.String getType()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.naming.MetadataNamingStrategy: void <init>(org.springframework.jmx.export.metadata.JmxAttributeSource)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder roles(java.lang.String[])>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.EnumMap$Values: int size()>
<org.springframework.boot.info.BuildProperties: java.util.Properties processEntries(java.util.Properties)>-><org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void <init>(org.springframework.context.ApplicationEventPublisher)>-><java.lang.Class: java.lang.String getName()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: boolean add(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean add(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.TemporaryVariable: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.LinkedHashMap$LinkedValues: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.util.collections.WeakHashSet: boolean isEmpty()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getCorsConfigurations()>-><org.springframework.web.servlet.config.annotation.CorsRegistry: void <init>()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.util.LinkedMultiValueMap: java.util.Collection values()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><org.springframework.core.io.DefaultResourceLoader$ClassPathContextResource: void <init>(java.lang.String,java.lang.ClassLoader)>
<org.springframework.security.web.server.authentication.logout.LogoutWebFilter: void <init>()>-><org.springframework.security.core.authority.AuthorityUtils: java.util.List createAuthorityList(java.lang.String[])>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.springframework.security.access.method.AbstractMethodSecurityMetadataSource: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String[] getExcludedViewNames()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration: void <init>(io.micrometer.core.instrument.MeterRegistry,java.util.Collection,java.util.Map)>-><io.micrometer.core.instrument.composite.CompositeMeterRegistry: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.http.server.reactive.HttpHeadResponseDecorator: void <init>(org.springframework.http.server.reactive.ServerHttpResponse)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setNamedParameterJdbcTemplate(org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Optional: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: void <init>(org.springframework.context.ApplicationContext)>-><org.springframework.context.support.GenericApplicationContext: java.lang.ClassLoader getClassLoader()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.annotation.Annotation,java.lang.Class)>-><org.springframework.core.annotation.AnnotationsScanner: boolean hasPlainJavaAnnotationsOnly(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: freemarker.template.Configuration getConfiguration()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.util.RecursiveComparator$Pair: int hashCode()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.jdbc.datasource.embedded.EmbeddedDatabase getEmbeddedDatabase()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.thoughtworks.xstream.core.util.WeakCache: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.Integer getTemplateResolverOrder()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.boot.task.TaskSchedulerBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.StringLiteral: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.beans.PropertyDescriptor: int hashCode()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<io.undertow.server.handlers.cache.LRUCache: java.lang.Object get(java.lang.Object)>-><io.undertow.server.handlers.cache.LRUCache$CacheEntry: int hit()>
<org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void <init>()>-><org.springframework.beans.factory.config.PropertyResourceConfigurer: void <init>()>
<io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics: void <init>(java.lang.Iterable)>-><java.lang.Object: void <init>()>
<java.util.TreeMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.boot.convert.CollectionToDelimitedStringConverter: java.lang.Object convert(java.util.Collection,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque: boolean isEmpty()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.EnumMap$Values: int size()>
<java.lang.Object: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringValues: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.passes.CompilerPass: int hashCode()>
<org.springframework.core.style.DefaultToStringStyler: void styleField(java.lang.StringBuilder,java.lang.String,java.lang.Object)>-><org.springframework.core.style.DefaultToStringStyler: void styleValue(java.lang.StringBuilder,java.lang.Object)>
<org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter: org.springframework.security.web.server.header.ServerHttpHeadersWriter createDelegate(org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter$Mode)>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder header(java.lang.String,java.lang.String[])>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setReactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer)>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>(java.lang.Iterable)>-><io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: boolean isOldGenPool(java.lang.String)>
<java.util.stream.ForEachOps$ForEachTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatchesData: void <init>(java.util.Map,io.undertow.util.SubstringMap,java.util.Map)>-><java.util.HashMap: java.util.Set entrySet()>
<org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration: org.springframework.boot.actuate.trace.http.HttpExchangeTracer httpExchangeTracer(org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties)>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties: java.util.Set getInclude()>
<java.util.Collections$EmptySet: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.util.Assert: void state(boolean,java.util.function.Supplier)>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory undertowReactiveWebServerFactory(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory: java.util.Collection getBuilderCustomizers()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.IdentityHashMap: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.Collections$SynchronizedList: java.lang.Object get(int)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.MBeanParameterInfo: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.springframework.web.filter.RequestContextFilter: void <init>()>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<com.google.common.collect.Maps$Values: void clear()>-><com.google.common.collect.Maps$TransformedEntriesMap: void clear()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer(org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>
<com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.core.annotation.MissingMergedAnnotation: java.util.Optional getValue(java.lang.String,java.lang.Class)>-><java.util.Optional: java.util.Optional empty()>
<io.micrometer.core.util.internal.logging.JdkLogger: void fillCallerData(java.lang.String,java.util.logging.LogRecord)>-><java.util.logging.LogRecord: void setSourceClassName(java.lang.String)>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.imageio.ImageTypeSpecifier: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.task.TaskExecutionProperties getTaskExecutionPropertiesInstance()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.Assert: void state(boolean,java.lang.String)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$SingletonSet: int size()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>
<io.undertow.util.HeaderValues: java.lang.Object remove(int)>-><io.undertow.util.HeaderValues: java.lang.String remove(int)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.TabularDataSupport: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.lang.String: java.lang.String substring(int,int)>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><org.springframework.validation.AbstractBindingResult: java.util.List getAllErrors()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getCredentials()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.http.HttpRequest: org.springframework.http.HttpMethod getMethod()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHealthAggregator(org.springframework.boot.actuate.health.HealthAggregator)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.BasicPermission: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeFile(java.lang.String,boolean)>-><io.undertow.servlet.handlers.ServletPathMatch: void <init>(io.undertow.servlet.handlers.ServletChain,java.lang.String,java.lang.String,io.undertow.servlet.handlers.ServletPathMatch$Type,java.lang.String)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.UnboxedFixnum: int hashCode()>
<io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer mediaTypes(java.util.Map)>
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration: org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents autowiredWebSecurityConfigurersIgnoreParents(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>-><org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents: void <init>(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.misc.Signal: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void setMaxAge(java.time.Duration)>-><java.time.Duration: long getSeconds()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.Jsp: void <init>()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set createEntrySet()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: void <init>(com.google.common.collect.Maps$TransformedEntriesMap)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.ArrayList: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><com.couchbase.client.java.CouchbaseCluster: com.couchbase.client.java.CouchbaseCluster create(com.couchbase.client.java.env.CouchbaseEnvironment,java.util.List)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: org.springframework.http.client.ClientHttpRequestFactory unwrapRequestFactoryIfNecessary(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.util.ReflectionUtils: java.lang.reflect.Field findField(java.lang.Class,java.lang.String)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jmx.support.WebSphereMBeanServerFactoryBean: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.http.client.ClientHttpRequestFactory buildRequestFactory()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebMvcMetricsAutoConfiguration$MetricsWebMvcConfigurer(org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration$MetricsWebMvcConfigurer)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMapping,java.util.Collection,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.cors.CorsConfiguration,boolean)>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setOrder(int)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointFiltered(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: int size()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.util.AbstractSet: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerConfigurer(org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer)>
<org.owasp.webgoat.idor.IDORLogin: void <init>()>-><com.fasterxml.jackson.core.util.InternCache: void <init>()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.stream.Collectors: java.util.stream.Collector collectingAndThen(java.util.stream.Collector,java.util.function.Function)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.validation.FieldError: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.base.AbstractInstant: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray()>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<org.jruby.util.JRubyClassLoader: void terminateJarIndexCacheEntries()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: int hashCode()>
<io.undertow.servlet.spec.ServletPrintWriter: void createEncoder()>-><sun.nio.cs.US_ASCII: java.nio.charset.CharsetEncoder newEncoder()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment couchbaseEnvironment()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.internal.util.Pair: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.AsciiDoctorTemplateResolver asciiDoctorTemplateResolver(org.owasp.webgoat.i18n.Language)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues: boolean isEmpty()>
<io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.jruby.RubyHash$BaseSet: int size()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController basicErrorController(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: void <init>()>-><java.util.Collections: java.util.List emptyList()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.Row: boolean equals(java.lang.Object)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean resourceUrlEncodingFilter()>-><org.springframework.boot.web.servlet.FilterRegistrationBean: void <init>(javax.servlet.Filter,org.springframework.boot.web.servlet.ServletRegistrationBean[])>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<java.security.Provider: void implPutAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.factory.config.RuntimeBeanReference: int hashCode()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>
<java.lang.Object: java.lang.String toString()>-><java.awt.Color: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.x509.RDN: int hashCode()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: void <init>(org.springframework.http.MediaType[])>-><java.util.Collections: java.util.Set emptySet()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.PropertyResourceConfigurer: void <init>()>-><org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>
<io.undertow.util.HeaderValues: boolean removeFirstOccurrence(java.lang.Object)>-><io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>
<org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>-><org.springframework.web.servlet.i18n.SessionLocaleResolver: java.util.Locale resolveLocale(javax.servlet.http.HttpServletRequest)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: void <init>()>-><java.lang.Object: void <init>()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: java.util.Iterator iterator()>-><io.undertow.util.HeaderValues: java.util.ListIterator iterator(int,boolean)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.http.server.reactive.HttpHandler getHttpHandler()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.DateTimeType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.BeanNameViewResolver beanNameViewResolver()>-><org.springframework.web.servlet.view.BeanNameViewResolver: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$SynchronizedMap: java.util.Set entrySet()>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration: org.springframework.boot.actuate.health.HealthEndpoint healthEndpoint(org.springframework.boot.actuate.health.HealthContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>-><org.springframework.boot.actuate.health.HealthEndpoint: void <init>(org.springframework.boot.actuate.health.HealthContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>
<org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.support.EncodedResource)>-><org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.AbstractExposableEndpoint: void <init>(org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><java.nio.charset.Charset: java.lang.String name()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: void <init>(org.springframework.web.servlet.DispatcherServlet,java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: int size()>
<org.springframework.boot.web.client.RestTemplateBuilder: void addClientHttpRequestInitializer(org.springframework.web.client.RestTemplate)>-><java.util.Collections$EmptyMap: boolean isEmpty()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.Vector: java.lang.Object get(int)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.java.proxies.ArrayJavaProxy: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubySymbol: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean createExtensionBean(java.lang.String)>-><org.springframework.context.support.AbstractApplicationContext: org.springframework.core.env.Environment getEnvironment()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.core.ManagedServlets: io.undertow.servlet.handlers.ServletHandler addServlet(io.undertow.servlet.api.ServletInfo)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.EndpointId: void logWarning(java.lang.String)>-><java.util.HashSet: boolean add(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration: org.springframework.boot.actuate.info.InfoEndpoint infoEndpoint(org.springframework.beans.factory.ObjectProvider)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForAnnotationIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration: void <init>()>
<org.springframework.security.web.server.authentication.logout.SecurityContextServerLogoutHandler: void <init>()>-><org.springframework.security.web.server.context.WebSessionServerSecurityContextRepository: void <init>()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.LinkedHashMap$LinkedValues: void clear()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.invoke.LambdaForm$Name: int hashCode()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: boolean isManagementExtensionsPresent()>-><java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>
<org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.core.annotation.AnnotationAttributes getMergedAnnotationAttributes(java.lang.reflect.AnnotatedElement,java.lang.Class)>-><org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.core.annotation.MergedAnnotations getAnnotations(java.lang.reflect.AnnotatedElement)>
<java.util.stream.Stream: java.util.stream.Stream of(java.lang.Object[])>-><java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.http.converter.ResourceHttpMessageConverter$1: java.lang.String getFilename()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.core.annotation.MergedAnnotation findMergedAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.Class getBeanClass()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator getWebInvocationPrivilegeEvaluator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.springframework.core.annotation.TypeMappedAnnotation: org.springframework.core.annotation.MergedAnnotation from(java.lang.Object,java.lang.annotation.Annotation)>-><org.springframework.core.annotation.AnnotationTypeMappings: org.springframework.core.annotation.AnnotationTypeMappings forAnnotationType(java.lang.Class)>
<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Class getTargetType()>-><org.springframework.core.ResolvableType: java.lang.Class resolve()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setSuffix(java.lang.String)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void onClose()>-><org.springframework.context.support.AbstractApplicationContext: void onClose()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)>-><java.util.ArrayList$Itr: boolean hasNext()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(java.lang.Class,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(org.springframework.boot.actuate.endpoint.EndpointFilter,org.springframework.boot.actuate.endpoint.ExposableEndpoint)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<io.undertow.servlet.spec.HttpSessionImpl: io.undertow.servlet.spec.HttpSessionImpl forSession(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: void <init>(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean,io.undertow.servlet.handlers.ServletRequestContext)>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><io.undertow.util.Rfc6265CookieSupport: void validateCookieValue(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.awt.Point: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.AbstractCollection: java.lang.String toString()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.AbstractMap: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.servlet.core.ManagedServlets: io.undertow.servlet.handlers.ServletHandler addServlet(io.undertow.servlet.api.ServletInfo)>-><io.undertow.servlet.api.ServletInfo: java.lang.String getName()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate build(java.lang.Class)>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>
<org.jruby.anno.TypePopulator$ReflectiveTypePopulator: void addBoundMethodsUnlessOmited(org.jruby.Ruby,java.lang.String,java.util.List)>-><io.undertow.util.HeaderValues: int size()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.AbstractMap$1: void clear()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties: boolean isPreferFileSystemAccess()>
<com.fasterxml.jackson.module.paramnames.ParameterNamesModule: void <init>(com.fasterxml.jackson.annotation.JsonCreator$Mode)>-><com.fasterxml.jackson.databind.module.SimpleModule: void <init>(com.fasterxml.jackson.core.Version)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.lang.String resolveRequestUri(reactor.netty.http.server.HttpServerRequest)>-><reactor.netty.http.server.HttpServerRequest: java.lang.String uri()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointCompatibilityConfiguration: org.springframework.boot.actuate.health.HealthStatusHttpMapper healthStatusHttpMapper(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.core.style.DefaultToStringStyler: void styleIdentityHashCode(java.lang.StringBuilder,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.awt.image.ColorModel: int hashCode()>
<com.google.common.collect.TransformedIterator: java.lang.Object next()>-><com.google.common.collect.Multimaps$Keys$1: java.lang.Object transform(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void accept(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setConnectTimeout(org.springframework.http.client.ClientHttpRequestFactory)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFiltersMappingDescriptionProvider(org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter(org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: java.lang.String getOrDeducePassword(org.springframework.boot.autoconfigure.security.SecurityProperties$User,org.springframework.security.crypto.password.PasswordEncoder)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.api.DeploymentInfo: java.util.List getFilterMappings()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.core.annotation.TypeMappedAnnotations: org.springframework.core.annotation.MergedAnnotation get(java.lang.Class)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension environmentEndpointWebExtension(org.springframework.boot.actuate.env.EnvironmentEndpoint)>-><org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension: void <init>(org.springframework.boot.actuate.env.EnvironmentEndpoint)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.locale.BaseLocale: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><java.net.URI: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.type.ClassKey: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Vector$Itr: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties healthEndpointProperties(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint: void setKeysToSanitize(java.lang.String[])>-><org.springframework.boot.actuate.endpoint.Sanitizer: void setKeysToSanitize(java.lang.String[])>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.lang.ProcessEnvironment$StringValues: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDiskSpaceHealthIndicator(org.springframework.boot.actuate.system.DiskSpaceHealthIndicator)>
<org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver: void setBeanResolver(org.springframework.expression.BeanResolver)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: boolean containsKey(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>
<java.util.EnumMap: int entryHashCode(int)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeServlet(java.lang.String,boolean)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object)>-><org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object,org.springframework.core.style.ToStringStyler)>
<io.undertow.util.HeaderMap: void resize()>-><java.lang.AssertionError: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setAllowRequestOverride(boolean)>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.config.web.server.ServerHttpSecurity httpSecurity()>-><org.springframework.security.config.web.server.ServerHttpSecurity: org.springframework.security.config.web.server.ServerHttpSecurity authenticationManager(org.springframework.security.authentication.ReactiveAuthenticationManager)>
<java.util.TreeMap: void putAll(java.util.Map)>-><java.util.Collections$SynchronizedSortedMap: java.util.Comparator comparator()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundrySecurityInterceptor getSecurityInterceptor(org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.core.env.Environment)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundrySecurityInterceptor: void <init>(org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveTokenValidator,org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService,java.lang.String)>
<org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey createOperationKey(org.springframework.boot.actuate.endpoint.Operation)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$UnmodifiableSet: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.thoughtworks.xstream.io.path.Path: int hashCode()>
<org.springframework.boot.actuate.health.HealthStatusHttpMapper: void addStatusMapping(org.springframework.boot.actuate.health.Status,java.lang.Integer)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityService: void <init>(org.springframework.boot.web.client.RestTemplateBuilder,java.lang.String,boolean)>-><java.lang.Object: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.util.TypeKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration: org.springframework.boot.actuate.info.InfoEndpoint infoEndpoint(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.actuate.info.InfoEndpoint: void <init>(java.util.List)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.Collections$SynchronizedCollection: void clear()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderMap put(io.undertow.util.HttpString,java.lang.String)>-><io.undertow.util.HeaderValues: boolean add(java.lang.String)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build()>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build(java.lang.Class)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatchesData: void <init>(java.util.Map,io.undertow.util.SubstringMap,java.util.Map)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.SubList$1: boolean hasNext()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: void <init>(reactor.netty.http.server.HttpServerRequest,org.springframework.core.io.buffer.NettyDataBufferFactory)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet: org.springframework.util.MimeType getContentType()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers: void <init>(java.util.Collection)>-><java.lang.Object: void <init>()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>-><org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: void <init>(javax.servlet.ServletContext)>-><java.util.HashMap: void <init>()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler getMethodSecurityExpressionHandler()>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.text.SimpleDateFormat: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setExcludedViewNames(java.lang.String[])>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void <init>()>-><java.util.concurrent.ConcurrentHashMap: void <init>(int)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.servlet.spec.HttpSessionImpl: io.undertow.servlet.spec.HttpSessionImpl forSession(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>-><io.undertow.servlet.handlers.ServletRequestContext: io.undertow.servlet.handlers.ServletRequestContext current()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractList: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues$1: java.lang.String next()>-><io.undertow.util.HeaderValues: java.lang.String get(int)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService getQueryservice()>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void <init>()>-><org.springframework.web.context.support.GenericWebApplicationContext: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void accept(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setReadTimeout(org.springframework.http.client.ClientHttpRequestFactory)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: void <init>(javax.servlet.ServletContext)>
<org.owasp.webgoat.lessons.Hint: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getAssignmentPath()>
<org.springframework.boot.context.properties.source.AliasedConfigurationPropertySource: org.springframework.boot.context.properties.source.ConfigurationPropertyState containsDescendantOf(org.springframework.boot.context.properties.source.ConfigurationPropertyName)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.AbstractMap: boolean isEmpty()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.server.handlers.cache.LRUCache: void add(java.lang.Object,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLoggersEndpoint(org.springframework.boot.actuate.logging.LoggersEndpoint)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><org.springframework.util.LinkedMultiValueMap: boolean isEmpty()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><org.springframework.core.ResolvableType: org.springframework.core.ResolvableType forClass(java.lang.Class)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.ArraysParallelSortHelpers$FJObject$Merger: void compute()>-><org.springframework.core.OrderComparator: int compare(java.lang.Object,java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.RegularEnumSet: boolean isEmpty()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate namedParameterJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean isEmpty()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.util.LinkedMultiValueMap: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.io.PrintWriter getWriter()>-><io.undertow.servlet.spec.ServletPrintWriter: void <init>(io.undertow.servlet.spec.ServletOutputStreamImpl,java.lang.String)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setStandardServletMultipartResolver(org.springframework.web.multipart.support.StandardServletMultipartResolver)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Locale: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.imageio.ImageTypeSpecifier: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ast.SymbolNode: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap: boolean isEmpty()>
<org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration: org.springframework.boot.actuate.health.PingHealthIndicator pingHealthContributor()>-><org.springframework.boot.actuate.health.PingHealthIndicator: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyModule: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.util.ByteList: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractCollection: boolean isEmpty()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><org.springframework.http.HttpMethod: org.springframework.http.HttpMethod resolve(java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.ArrayList: int size()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>-><org.springframework.web.cors.CorsConfiguration: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: void <init>()>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation synthesizeAnnotation(java.lang.annotation.Annotation,java.lang.reflect.AnnotatedElement)>-><org.springframework.core.annotation.AbstractMergedAnnotation: java.lang.annotation.Annotation synthesize()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.CompositeDataSupport: int hashCode()>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <init>()>-><com.fasterxml.jackson.core.util.InternCache: void <init>()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate: io.undertow.servlet.spec.ServletPrintWriterDelegate newInstance(io.undertow.servlet.spec.ServletPrintWriter)>-><sun.misc.Unsafe: java.lang.Object allocateInstance(java.lang.Class)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void close()>-><java.nio.Buffer: int position()>
<io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$3$1: void accept(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeSet: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.SecureKey: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCStatement: void close()>
<java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>-><java.util.Collections$SynchronizedSortedSet: java.util.Comparator comparator()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration$ServletTraceFilterConfiguration: void <init>()>
<java.util.Spliterators$1Adapter: boolean hasNext()>-><java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.type.ClassKey: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.nio.ByteBuffer: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<io.undertow.server.handlers.cache.LRUCache$CacheEntry: void <init>(java.lang.Object,java.lang.Object,long,io.undertow.server.handlers.cache.LRUCache$1)>-><io.undertow.server.handlers.cache.LRUCache$CacheEntry: void <init>(java.lang.Object,java.lang.Object,long)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Float: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder awaitTerminationPeriod(java.time.Duration)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$KeySet: int size()>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.internal.database.base.Schema: int hashCode()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>-><java.util.ArrayDeque: boolean contains(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientFallbackConfiguration: org.elasticsearch.client.RestClient elasticsearchRestClient(org.elasticsearch.client.RestClientBuilder)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.lang.String: java.lang.String substring(int)>
<java.lang.management.ManagementFactory: java.lang.management.OperatingSystemMXBean getOperatingSystemMXBean()>-><sun.management.ManagementFactoryHelper: java.lang.management.OperatingSystemMXBean getOperatingSystemMXBean()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyThread: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.jruby.RubyHash$BaseSet: void clear()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer(org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setValidator(org.springframework.validation.Validator)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray(java.lang.Object[])>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.api.Location: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.web.reactive.result.view.UrlBasedViewResolver: void setRequestContextAttribute(java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSecurityReactorContextConfiguration$SecurityReactorContextSubscriberRegistrar(org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriberRegistrar)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.EndpointId: void logWarning(java.lang.String)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void warn(java.lang.Object)>
<org.springframework.boot.actuate.info.InfoEndpoint: void <init>(java.util.List)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.boot.web.reactive.result.view.MustacheViewResolver: void setCharset(java.lang.String)>
<org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>-><java.util.regex.Matcher: boolean matches()>
<org.springframework.boot.actuate.endpoint.web.EndpointMapping: void <init>(java.lang.String)>-><org.springframework.boot.actuate.endpoint.web.EndpointMapping: java.lang.String normalizePath(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.security.access.SecurityConfig: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,java.util.List,java.util.Collection,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection,java.util.Collection)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.endpoint.web.PathMapper getPathMapper()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<io.undertow.util.QueryParameterUtils: java.util.Map mergeQueryParametersWithNewQueryString(java.util.Map,java.lang.String,java.lang.String)>-><io.undertow.util.QueryParameterUtils: java.util.Map parseQueryString(java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration: io.micrometer.core.instrument.binder.system.ProcessorMetrics processorMetrics()>-><io.micrometer.core.instrument.binder.system.ProcessorMetrics: void <init>()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityService: void <init>(org.springframework.boot.web.client.RestTemplateBuilder,java.lang.String,boolean)>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder requestFactory(java.lang.Class)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: org.springframework.security.web.server.WebFilterChainProxy springSecurityWebFilterChainFilter()>-><org.springframework.security.web.server.WebFilterChainProxy: void <init>(java.util.List)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPathMapper(org.springframework.boot.actuate.endpoint.web.PathMapper)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration: org.springframework.boot.actuate.security.AuthenticationAuditListener authenticationAuditListener()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: void close()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.ResourceRegionHttpMessageConverter: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.passes.CompilerPass: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.sql.DriverInfo: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<io.undertow.util.HeaderValues$1: void set(java.lang.Object)>-><io.undertow.util.HeaderValues$1: void set(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.core.annotation.MergedAnnotations: org.springframework.core.annotation.MergedAnnotations from(java.lang.reflect.AnnotatedElement,org.springframework.core.annotation.MergedAnnotations$SearchStrategy)>
<java.lang.Object: java.lang.String toString()>-><java.text.ParsePosition: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.util.RawValue: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.core.annotation.MergedAnnotation findMergedAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource: void <init>()>-><org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource: void <init>()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.aop.framework.AopProxyUtils: java.lang.Class[] completeProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport,boolean)>-><java.lang.Class: java.lang.Class[] getInterfaces()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.field.MillisDurationField: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFlywayMigrationInitializer(org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration$ManagementErrorPageCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJvmGcMetrics(io.micrometer.core.instrument.binder.jvm.JvmGcMetrics)>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.util.LinkedMultiValueMap: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<java.util.AbstractMap: int hashCode()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.springframework.validation.BindException: java.lang.String getMessage()>
<org.springframework.core.style.DefaultToStringStyler: void styleEnd(java.lang.StringBuilder,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.util.CopyOnWriteMap: java.lang.Object get(java.lang.Object)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.internal.util.Pair: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.springframework.security.web.util.matcher.RegexRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor: void <init>()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])>
<org.springframework.security.config.web.server.ServerHttpSecurity: org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec headers()>-><org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties getConfigurationPropertiesReportEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties: void setKeysToSanitize(java.lang.String[])>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setCheckExistence(boolean)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps: java.lang.Object safeGet(java.util.Map,java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: int size()>
<org.springframework.boot.autoconfigure.context.MessageSourceProperties: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.Boolean: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.flywaydb.core.api.Location: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues$1: void set(java.lang.String)>-><io.undertow.util.HeaderValues: java.lang.String set(int,java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.health.HealthAggregator getHealthAggregator()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(org.springframework.boot.actuate.endpoint.EndpointFilter,org.springframework.boot.actuate.endpoint.ExposableEndpoint)>-><org.springframework.boot.util.LambdaSafe: org.springframework.boot.util.LambdaSafe$Callback callback(java.lang.Class,java.lang.Object,java.lang.Object,java.lang.Object[])>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: boolean add(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.awt.Color: boolean equals(java.lang.Object)>
<java.util.stream.AbstractTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>-><io.undertow.server.HttpServerExchange: io.undertow.util.HeaderMap getResponseHeaders()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: void <init>(org.springframework.http.MediaType[])>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$1: io.undertow.servlet.spec.ServletPrintWriterDelegate run()>-><io.undertow.servlet.spec.ServletPrintWriterDelegate: sun.misc.Unsafe access$000()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Vector: boolean isEmpty()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.JapaneseImperialCalendar: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue: java.util.Iterator iterator()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementErrorEndpoint errorEndpoint(org.springframework.boot.web.servlet.error.ErrorAttributes)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<java.util.AbstractList: void clear()>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: int hashCode()>
<io.undertow.util.HeaderValues: boolean offerLast(java.lang.String)>-><io.undertow.util.HeaderValues: void offerLastMultiValue(java.lang.String,int,java.lang.String[])>
<io.undertow.servlet.spec.SecurityActions$2: void <init>(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>-><java.lang.Object: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.cglib.core.Signature: int hashCode()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String nextFieldName()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: void clear()>-><javax.security.auth.Subject$SecureSet$6: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpSessionImpl$UnwrapSessionAction: io.undertow.server.session.Session run()>-><io.undertow.servlet.spec.HttpSessionImpl: io.undertow.server.session.Session getSession()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.ProcessEnvironment$StringEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: boolean isEmpty()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties)>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><org.jruby.RubyArray: boolean remove(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics jvmThreadMetrics()>-><io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Date: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: boolean equals(java.lang.Object)>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String getSessionId()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryHealthEndpointWebExtension cloudFoundryHealthEndpointWebExtension(org.springframework.boot.actuate.health.HealthEndpointWebExtension)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryHealthEndpointWebExtension: void <init>(org.springframework.boot.actuate.health.HealthEndpointWebExtension)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Byte: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.UUID: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFlyway(org.flywaydb.core.Flyway)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.PropertyValue: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.annotation.Annotation findAnnotationOnBean(java.lang.String,java.lang.Class)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration: void <init>()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.AllPermission: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.http.server.reactive.NettyHeadersAdapter: java.util.Set entrySet()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection createEndpointBeans()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: org.springframework.boot.actuate.endpoint.EndpointId getId()>
<org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.core.annotation.AnnotationAttributes getMergedAnnotationAttributes(java.lang.reflect.AnnotatedElement,java.lang.Class)>-><org.springframework.core.annotation.MergedAnnotationSelectors: org.springframework.core.annotation.MergedAnnotationSelector firstDirectlyDeclared()>
<org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics: void <init>()>-><java.util.Collections: java.util.List emptyList()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getBeanNamesForType(java.lang.Class)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class)>
<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>-><com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set createEntrySet()>
<io.undertow.servlet.handlers.ServletPathMatches: boolean isFilterApplicable(java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.BeanMetadataAttribute: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.AttributeEntry: int hashCode()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<io.undertow.util.SubstringMap: void doPut(java.lang.Object[],java.lang.String,java.lang.Object)>-><io.undertow.util.SubstringMap: int hash(java.lang.String,int)>
<java.util.AbstractList: void removeRange(int,int)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor: void <init>(java.lang.String,org.springframework.security.access.method.MethodSecurityMetadataSource,java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor: javax.servlet.ServletContext getServletContext()>-><org.springframework.web.context.support.ServletContextAwareProcessor: javax.servlet.ServletContext getServletContext()>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source as(java.util.function.Function)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: java.lang.String get(int)>-><java.lang.AssertionError: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.PluginMessages pluginMessages(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.Class getFilter(java.lang.Class)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String,int,boolean)>-><io.undertow.util.SubstringMap: int tablePos(java.lang.Object[],int)>
<sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(sun.security.ssl.ProtocolVersion)>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer initializeUserDetailsBeanManagerConfigurer(org.springframework.context.ApplicationContext)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setStatus(int)>-><io.undertow.servlet.spec.HttpServletResponseImpl: boolean responseStarted()>
<org.springframework.web.cors.CorsConfiguration: void setAllowedHeaders(java.util.List)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Vector: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>-><org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void <init>()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: boolean equals(java.lang.Object)>
<org.springframework.core.annotation.AnnotationTypeMapping: java.util.Map resolveAliasedForTargets()>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: boolean equals(java.lang.Object)>
<io.undertow.servlet.api.ServletInfo: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.ArrayType: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.util.PathMatcher getPathMatcher()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getDefaultMediaTypes()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.SubList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: boolean isRoleBasedAccessControlEnabled()>
<org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor: void <init>(java.util.function.Function)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties getWebEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties: void <init>()>
<org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration: void <init>(org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties)>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>-><org.springframework.core.annotation.AnnotationAwareOrderComparator: void sortIfNecessary(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.AbstractList$Itr: boolean hasNext()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.SubList: java.lang.Object get(int)>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder addCustomizers(org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.beans.factory.ObjectProvider,java.util.function.BiFunction)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$SynchronizedMap: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.WeakHashMap: java.util.Set keySet()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: com.fasterxml.jackson.databind.ObjectMapper build()>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.time.format.DateTimeFormatter: java.lang.Object parse(java.lang.CharSequence,java.time.temporal.TemporalQuery)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$1: void <init>(org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver,org.springframework.beans.factory.config.DependencyDescriptor,org.springframework.beans.factory.support.DefaultListableBeanFactory,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.task.TaskExecutionProperties getTaskExecutionPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void <init>()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.jsontype.NamedType: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setRequestContextAttribute(java.lang.String)>
<javax.crypto.JceSecurity: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.lang.String)>-><java.security.Provider$Service: java.security.Provider getProvider()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String value()>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getArgumentResolvers()>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch handleMatch(java.lang.String,io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,int)>-><io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch: boolean access$200(io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.SubList$1: java.lang.Object next()>
<org.springframework.util.ClassUtils: java.lang.String getShortNameAsProperty(java.lang.Class)>-><org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: java.lang.Class requiredViewClass()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpExchangeTracer(org.springframework.boot.actuate.trace.http.HttpExchangeTracer)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><io.undertow.util.HeaderValues: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSimpleCacheManager(org.springframework.cache.support.SimpleCacheManager)>
<io.undertow.util.SubstringMap: boolean doEquals(java.lang.String,java.lang.String,int)>-><java.lang.String: int length()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection createEndpointBeans()>-><org.springframework.aop.scope.ScopedProxyUtils: boolean isScopedTarget(java.lang.String)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder keepAlive(java.time.Duration)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.lang.ProcessEnvironment$StringKeySet: int size()>
<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<java.util.SubList: void removeRange(int,int)>-><java.util.Vector: void removeRange(int,int)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.Collections$UnmodifiableCollection: java.lang.String toString()>
<org.springframework.web.filter.FormContentFilter: void <init>()>-><org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyBasicObject: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.transaction.reactive.TransactionalOperator getTransactionalOperator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.WebGoat: void <init>()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<org.springframework.boot.actuate.env.EnvironmentEndpoint: void <init>(org.springframework.core.env.Environment)>-><java.lang.Object: void <init>()>
<sun.security.ssl.SSLSessionImpl: int hashCode()>-><sun.security.ssl.SessionId: int hashCode()>
<com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>-><com.google.common.collect.Maps: com.google.common.base.Function asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)>
<org.springframework.http.HttpRequest: org.springframework.http.HttpMethod getMethod()>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: java.lang.String getMethodValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setPathMatcher(org.springframework.util.PathMatcher)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: int hashCode()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.TreeMap$Values: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.TreeMap$Values: int size()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration: org.springframework.security.context.DelegatingApplicationListener delegatingApplicationListener()>
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><com.couchbase.client.core.env.QueryServiceConfig: com.couchbase.client.core.env.QueryServiceConfig create(int,int)>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.DateTimeZone: int hashCode()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate: sun.misc.Unsafe getUnsafe0()>-><java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.TextNode: int hashCode()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.ByteArrayHttpMessageConverter: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubySymbol: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.servlet.core.ServletContainerImpl: io.undertow.servlet.api.DeploymentManager getDeployment(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.StringHttpMessageConverter: void <init>()>
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void <init>()>-><org.springframework.util.ConcurrentReferenceHashMap: void <init>(int,org.springframework.util.ConcurrentReferenceHashMap$ReferenceType)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.reflect.Method: java.lang.String getName()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String getServletName()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isExtensionExposed(java.lang.Object)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isHealthEndpointExtension(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String getRedirectUrl()>-><org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><ch.qos.logback.core.joran.spi.ElementSelector: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<io.undertow.util.QueryParameterUtils: java.lang.String decodeParam(java.lang.String,int,int,java.lang.String,boolean)>-><java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.core.convert.support.ObjectToOptionalConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque: boolean isEmpty()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.challenges.Flag: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setOrder(int)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setMode(java.lang.String)>
<java.util.AbstractSet: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.util.collections.WeakHashSet: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties: java.lang.String cleanBasePath(java.lang.String)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.MBeanNotificationInfo: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ForEachOps$ForEachOp$OfRef: void accept(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void <init>()>
<java.lang.Object: java.lang.String toString()>-><java.text.DigitList: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.springframework.security.config.web.server.ServerHttpSecurity$LoginPageSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>-><org.springframework.security.config.web.server.ServerHttpSecurity$LoginPageSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder smile()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.jruby.RubyModule: boolean defineAnnotatedMethod(java.lang.String,java.util.List,org.jruby.runtime.MethodFactory)>-><io.undertow.util.HeaderValues: int size()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><java.util.ArrayList: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.Fixnum: int hashCode()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><org.springframework.util.ObjectUtils: java.lang.Object[] toObjectArray(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$SingletonMap: java.util.Set entrySet()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration: org.springframework.boot.actuate.health.HealthEndpointWebExtension healthEndpointWebExtension(org.springframework.boot.actuate.health.HealthContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.http.HttpEntity: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.AbstractServerHttpRequest: void <init>(java.net.URI,java.lang.String,org.springframework.http.HttpHeaders)>-><org.springframework.http.HttpHeaders: org.springframework.http.HttpHeaders readOnlyHttpHeaders(org.springframework.http.HttpHeaders)>
<java.lang.Object: java.lang.String toString()>-><java.security.UnresolvedPermission: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.jruby.util.collections.WeakHashSet: int size()>
<org.springframework.boot.actuate.trace.http.HttpTraceEndpoint: void <init>(org.springframework.boot.actuate.trace.http.HttpTraceRepository)>-><java.lang.Object: void <init>()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: void <init>(java.lang.String,org.springframework.http.HttpMethod)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: org.springframework.security.web.server.SecurityWebFilterChain springSecurityFilterChain(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration$OAuth2ClasspathGuard: boolean shouldConfigure(org.springframework.context.ApplicationContext)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(java.lang.Class,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>
<com.google.common.collect.Maps$TransformedEntriesMap: void clear()>-><java.util.Collections$UnmodifiableMap: void clear()>
<org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter: java.util.Set asSet(java.util.Collection)>-><java.util.Collections: java.util.Set emptySet()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Optional: boolean equals(java.lang.Object)>
<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.boot.actuate.context.ShutdownEndpoint: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String getAlphaNumerics(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.concurrent.ArrayBlockingQueue: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.io.FilePermission: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Date: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: boolean isEnabledByDefault()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String,int,boolean)>-><java.lang.IllegalArgumentException: void <init>()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer controllerEndpointDiscoverer(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,java.util.List,java.util.Collection)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.AbstractMap$1: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder threadNamePrefix(java.lang.String)>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.AbstractMap$1: int size()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.context.ShutdownEndpointAutoConfiguration: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMetricsWebFilter(org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter)>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.jruby.util.collections.WeakHashSet: void clear()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown getShutdown()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.Class getFilter()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyNil: int hashCode()>
<java.util.Collections$SetFromMap: void <init>(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.util.Set keySet()>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source as(java.util.function.Function)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>
<io.undertow.util.CopyOnWriteMap: java.lang.Object putInternal(java.lang.Object,java.lang.Object)>-><java.util.HashMap: void <init>(java.util.Map)>
<com.google.common.collect.Multimaps$Keys: int distinctElements()>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties getHttpTracePropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties: void setInclude(java.util.Set)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.util.List removeIncludeEvents(java.util.List)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.validation.BindException: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$TransformedEntriesMap$1: void <init>(com.google.common.collect.Maps$TransformedEntriesMap)>-><com.google.common.collect.Maps$EntrySet: void <init>()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.TabularType: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addExactMatch(java.lang.String,io.undertow.servlet.handlers.ServletChain)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$ServletManagementWebServerFactoryCustomizer servletManagementWebServerFactoryCustomizer(org.springframework.beans.factory.ListableBeanFactory)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.boot.model.relational.Namespace$Name: int hashCode()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.String: int hashCode()>
<org.springframework.boot.web.reactive.result.view.MustacheViewResolver: void <init>(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.boot.web.reactive.result.view.MustacheViewResolver: java.lang.Class requiredViewClass()>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch handleMatch(java.lang.String,io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,int)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.security.web.header.Header: int hashCode()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration: org.springframework.security.oauth2.server.resource.introspection.NimbusReactiveOpaqueTokenIntrospector opaqueTokenIntrospector(org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties)>-><org.springframework.security.oauth2.server.resource.introspection.NimbusReactiveOpaqueTokenIntrospector: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration: org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider flywayDefaultDdlModeProvider(org.springframework.beans.factory.ObjectProvider)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.BigIntegerNode: int hashCode()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.annotation.Annotation findAnnotationOnBean(java.lang.String,java.lang.Class)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.config.web.server.ServerHttpSecurity httpSecurity()>-><org.springframework.security.config.web.server.ServerHttpSecurity: org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec logout()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>-><io.undertow.servlet.spec.ServletContextImpl: java.lang.String getContextPath()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: void <init>(java.lang.Class,java.lang.Class,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.AbstractCollection: void clear()>-><io.micrometer.shaded.org.pcollections.IntTreePMap$1: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean createEndpointBean(java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><java.lang.Boolean: boolean booleanValue()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundrySecurityInterceptor getSecurityInterceptor(org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.core.env.Environment)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveTokenValidator: void <init>(org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService)>
<java.util.AbstractSet: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService getCloudFoundrySecurityService(org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.core.env.Environment)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Float: boolean equals(java.lang.Object)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback withLogger(java.lang.Class)>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Float: int hashCode()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer extractPathWithinApplication(org.springframework.http.server.PathContainer,org.springframework.http.server.PathContainer)>-><org.springframework.http.server.DefaultPathContainer: java.util.List elements()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.EnumMap$KeySet: int size()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void warn(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$OptionalPathExtensionContentNegotiationStrategy: void <init>(org.springframework.web.accept.ContentNegotiationStrategy)>-><java.lang.Object: void <init>()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>-><org.springframework.core.annotation.MergedAnnotations: org.springframework.core.annotation.MergedAnnotations from(java.lang.reflect.AnnotatedElement)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$EmptyMap: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.chrono.BasicChronology: int hashCode()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>()>-><io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>(java.lang.Iterable)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><java.lang.String: java.lang.String toLowerCase()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void copyRelevantMergedBeanDefinitionCaches(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.support.RootBeanDefinition)>-><org.springframework.core.ResolvableType: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setName(java.lang.String)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedValues: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration$IgnoredPathsSecurityConfiguration: void <init>()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.HashSet: int size()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap: java.util.Collection values()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor(org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeFile(java.lang.String,boolean)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source getSource(java.util.function.Supplier)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate,org.springframework.boot.context.properties.PropertyMapper$1)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.idor.IDORViewOwnProfile: void <init>()>
<org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration: org.springframework.boot.actuate.info.InfoEndpoint infoEndpoint(org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$Values: int size()>-><java.util.Collections$UnmodifiableMap: int size()>
<com.google.common.collect.Maps$TransformedEntriesMap: int size()>-><java.util.Collections$UnmodifiableMap: int size()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: boolean add(java.lang.Object)>
<org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration: void <init>()>-><org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.runtime.Arity: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><org.springframework.util.LinkedMultiValueMap: java.util.Set entrySet()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setInitializeAuthenticationProviderBeanManagerConfigurer(org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.core.annotation.AnnotationAttributes getMergedAnnotationAttributes(java.lang.reflect.AnnotatedElement,java.lang.Class)>-><org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.core.annotation.AnnotationAttributes getAnnotationAttributes(org.springframework.core.annotation.MergedAnnotation,boolean,boolean)>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher createDefaultRequestMacher()>-><org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher pathMatchers(java.lang.String[])>
<java.util.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>
<java.lang.Object: java.lang.String toString()>-><java.util.ResourceBundle$CacheKey: int hashCode()>
<org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.slf4j.LoggerFactory: java.util.Set findPossibleStaticLoggerBinderPathSet()>-><java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJavaDate()>-><org.springframework.format.datetime.DateFormatterRegistrar: void registerFormatters(org.springframework.format.FormatterRegistry)>
<io.undertow.servlet.spec.SecurityActions$2: java.lang.Object run()>-><io.undertow.servlet.spec.SecurityActions$2: io.undertow.servlet.spec.HttpSessionImpl run()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getPrefix()>-><java.lang.String: int length()>
<org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>-><java.lang.Character: boolean isDigit(char)>
<org.springframework.boot.util.LambdaSafe$Callback: void <init>(java.lang.Class,java.lang.Object,java.lang.Object,java.lang.Object[],org.springframework.boot.util.LambdaSafe$1)>-><org.springframework.boot.util.LambdaSafe$Callback: void <init>(java.lang.Class,java.lang.Object,java.lang.Object,java.lang.Object[])>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: void <init>(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultRestTemplateExchangeTagsProvider(org.springframework.boot.actuate.metrics.web.client.DefaultRestTemplateExchangeTagsProvider)>
<org.springframework.web.server.adapter.ForwardedHeaderTransformer: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: boolean isFilterApplicable(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLogbackMetrics(io.micrometer.core.instrument.binder.logging.LogbackMetrics)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder corePoolSize(int)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.undertow.servlet.spec.ServletCookieAdaptor: void <init>(javax.servlet.http.Cookie)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.core.annotation.TypeMappedAnnotations: org.springframework.core.annotation.MergedAnnotation get(java.lang.Class)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.ClobDataID: int hashCode()>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>-><java.util.ArrayDeque: java.lang.Object[] toArray()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.StringBuilder: void <init>()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementErrorEndpoint errorEndpoint(org.springframework.boot.web.servlet.error.ErrorAttributes)>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementErrorEndpoint: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: void setString(int,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: boolean equals(java.lang.Object)>
<java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>-><java.util.stream.MatchOps$MatchKind: boolean access$000(java.util.stream.MatchOps$MatchKind)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration: org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar servletEndpointRegistrar(org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><java.util.Collections$UnmodifiableMap: boolean isEmpty()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<java.util.LinkedHashMap$LinkedValues: void clear()>-><java.util.LinkedHashMap: void clear()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.HashMap$Node: java.lang.Object getValue()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.micrometer.core.util.internal.logging.JdkLogger: void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.util.logging.LogRecord: void <init>(java.util.logging.Level,java.lang.String)>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source getSource(java.util.function.Supplier)>-><org.springframework.boot.context.properties.PropertyMapper$CachingSupplier: void <init>(java.util.function.Supplier)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.jsoup.helper.ChangeNotifyingArrayList: void clear()>-><java.util.ArrayList: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.core.ManagedServlets: java.util.Map getServletHandlers()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.core.annotation.MergedAnnotation findMergedAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.beans.factory.support.RootBeanDefinition: java.lang.reflect.Method getResolvedFactoryMethod()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration: org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource jsr250MethodSecurityMetadataSource()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection getEndpoints()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.nio.charset.Charset getEncoding()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.asm.Handle: int hashCode()>
<org.owasp.webgoat.xxe.SimpleXXE: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.owasp.webgoat.xxe.Comment: java.lang.String getText()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>
<sun.net.RegisteredDomain: java.lang.String getRegisteredDomain(java.lang.String)>-><java.util.AbstractCollection: boolean contains(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Collections$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor(org.springframework.core.env.Environment)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setReactiveHealthEndpointWebExtension(org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension)>
<org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.handler.HandlerInterceptorAdapter: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.info.GitProperties: java.util.Properties processEntries(java.util.Properties)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.springframework.web.servlet.DispatcherServlet: void <init>()>-><org.springframework.web.servlet.FrameworkServlet: void setDispatchOptionsRequest(boolean)>
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$1: void <init>(org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate,int,float,boolean)>-><java.util.LinkedHashMap: void <init>(int,float,boolean)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension: void <init>(org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>-><org.springframework.boot.actuate.health.HealthEndpointSupport: void <init>(org.springframework.boot.actuate.health.ContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder roles(java.lang.String[])>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRestTemplate(org.springframework.web.client.RestTemplate)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.HashMap$KeySet: void clear()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: void clear()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder customizers(java.lang.Iterable)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.google.common.collect.Maps$Values: int size()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.annotation.Annotation,java.lang.Class)>-><org.springframework.core.annotation.RepeatableContainers: org.springframework.core.annotation.RepeatableContainers none()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.cert.Certificate: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.passes.CompilerPass: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration: org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean securityFilterChainRegistration(org.springframework.boot.autoconfigure.security.SecurityProperties)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.AbstractMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<java.lang.reflect.WeakCache$Factory: java.lang.Object get()>-><org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: java.lang.Object apply(java.lang.Object,java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<java.util.LinkedList: boolean addAll(int,java.util.Collection)>-><java.util.ArrayDeque: java.lang.Object[] toArray()>
<org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: void <init>()>-><java.io.File: void <init>(java.lang.String)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMultipartConfigElement(javax.servlet.MultipartConfigElement)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: boolean equals(java.lang.Object)>
<io.undertow.util.QueryParameterUtils: java.util.Map mergeQueryParametersWithNewQueryString(java.util.Map,java.lang.String,java.lang.String)>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties healthEndpointProperties(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>-><java.util.HashMap: void putAll(java.util.Map)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setCorsConfigurations(java.util.Map)>-><java.util.HashMap: void putAll(java.util.Map)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeServlet(java.lang.String,boolean)>-><io.undertow.servlet.handlers.ServletPathMatch: java.lang.String getMatched()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.TimestampData: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension environmentEndpointWebExtension(org.springframework.boot.actuate.env.EnvironmentEndpoint)>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.util.Arrays: java.lang.String toString(java.lang.Object[])>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><java.lang.String: java.lang.String valueOf(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.tz.CachedDateTimeZone: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$SingletonSet: int size()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$1: java.lang.Object next()>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<io.micrometer.core.instrument.simple.SimpleMeterRegistry: void <init>(io.micrometer.core.instrument.simple.SimpleConfig,io.micrometer.core.instrument.Clock)>-><io.micrometer.core.instrument.MeterRegistry: void <init>(io.micrometer.core.instrument.Clock)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter(org.springframework.boot.autoconfigure.http.HttpProperties)>-><org.springframework.http.converter.StringHttpMessageConverter: void setWriteAcceptCharset(boolean)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration: org.springframework.security.authentication.ReactiveAuthenticationManager authenticationManager()>-><org.springframework.security.authentication.UserDetailsRepositoryReactiveAuthenticationManager: void <init>(org.springframework.security.core.userdetails.ReactiveUserDetailsService)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: java.lang.Boolean isUseRegisteredSuffixPatternMatch()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.core.annotation.MergedAnnotation findMergedAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.core.annotation.MergedAnnotations: org.springframework.core.annotation.MergedAnnotations from(java.lang.reflect.AnnotatedElement,org.springframework.core.annotation.MergedAnnotations$SearchStrategy)>
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>-><java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAuthenticationManagerBuilder(org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder)>
<org.springframework.boot.actuate.health.HealthEndpointSupport: void <init>(org.springframework.boot.actuate.health.ContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>-><java.lang.Object: void <init>()>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><java.util.ArrayList: void <init>(int)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><java.util.stream.ForEachOps$ForEachOp$OfRef: java.lang.Object get()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void setExcludedViewNames(java.lang.String[])>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><java.util.Collections: java.util.Map emptyMap()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration: org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriberRegistrar securityReactorContextSubscriberRegistrar()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.Boolean: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.ArrayList: void <init>(java.util.Collection)>-><java.util.ArrayDeque: java.lang.Object[] toArray()>
<org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebEndpointDiscoverer(org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<java.time.format.DateTimeTextProvider$1: int compare(java.util.Map$Entry,java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenHasText()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: int hashCode()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletContextImpl: void updateSessionAccessTime(io.undertow.server.HttpServerExchange)>-><io.undertow.servlet.spec.HttpSessionImpl: io.undertow.server.session.Session getSession()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Collections$EmptyList: boolean isEmpty()>
<org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,java.util.List,java.util.Collection)>-><java.util.Collections: java.util.List emptyList()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback withLogger(org.apache.commons.logging.Log)>-><org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback self()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBean(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointFiltered(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>
<org.springframework.context.support.AbstractApplicationContext: boolean isSingleton(java.lang.String)>-><org.springframework.context.support.AbstractApplicationContext: void assertBeanFactoryActive()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.asm.MemberSubstitution: int hashCode()>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder poolSize(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Locale$LocaleKey: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1: java.lang.Object transform(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$1: com.google.common.collect.Multiset$Entry transform(java.util.Map$Entry)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><ch.qos.logback.core.subst.Token: int hashCode()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration: org.springframework.boot.jackson.JsonComponentModule jsonComponentModule()>-><org.springframework.boot.jackson.JsonComponentModule: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyObject: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.web.client.RestTemplate: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.ArrayList$Itr: boolean hasNext()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addExtensionMatch(java.lang.String,java.lang.String,io.undertow.servlet.handlers.ServletChain)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><ch.qos.logback.core.status.StatusBase: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void <init>(org.springframework.context.ApplicationEventPublisher)>-><java.lang.Object: void <init>()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.BinaryNode: int hashCode()>
<org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: void <init>()>
<java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.springframework.boot.web.server.AbstractConfigurableWebServerFactory: void <init>()>-><java.util.LinkedHashSet: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection,java.util.Collection)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.util.HeaderValues: java.lang.String removeFirst()>-><java.util.NoSuchElementException: void <init>()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: void <init>()>-><io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: void <init>(java.lang.Iterable)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.HashMap: java.util.Set entrySet()>
<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.FindOps$FindSink: void accept(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><javax.security.auth.Subject$SecureSet: int size()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.String toString()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.security.config.web.server.ServerHttpSecurity: void <init>()>-><org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher anyExchange()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties getDiskSpaceHealthIndicatorPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: void setPath(java.io.File)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,java.lang.String[])>-><org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,boolean,java.lang.String[])>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void <init>(java.lang.String)>-><org.springframework.format.support.DefaultFormattingConversionService: void <init>(boolean)>
<org.springframework.core.annotation.TypeMappedAnnotation: org.springframework.core.annotation.MergedAnnotation from(java.lang.Object,java.lang.annotation.Annotation)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.web.client.RestTemplateBuilder: void addClientHttpRequestInitializer(org.springframework.web.client.RestTemplate)>-><java.util.Collections$EmptySet: boolean isEmpty()>
<org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint: void <init>()>-><org.springframework.boot.actuate.endpoint.Sanitizer: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: boolean isRoleBasedAccessControlEnabled()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration: org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor meterRegistryPostProcessor(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor: void <init>(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.context.ApplicationContext)>
<org.springframework.http.client.HttpComponentsClientHttpResponse: org.springframework.http.HttpHeaders getHeaders()>-><org.springframework.http.HttpHeaders: void <init>()>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashSet: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory,java.lang.String,java.lang.Class[])>-><java.lang.Object: java.lang.Class getClass()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Long: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCharacterEncodingFilter(org.springframework.web.filter.CharacterEncodingFilter)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><java.lang.String: int lastIndexOf(java.lang.String)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder(org.springframework.context.ApplicationContext,java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.util.RecursiveComparator$Pair: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.HashMap$KeySet: void clear()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><java.util.Collections$EmptyList: java.lang.Object[] toArray()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<java.util.AbstractSet: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.ArrayList: boolean addAll(int,java.util.Collection)>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform get()>-><org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform[] values()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isHealthEndpointExtension(java.lang.Object)>-><java.util.Optional: java.util.Optional map(java.util.function.Function)>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><com.google.common.collect.Maps$Values: boolean isEmpty()>
<org.springframework.security.access.method.AbstractMethodSecurityMetadataSource: void <init>()>-><java.lang.Object: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet: boolean isEmpty()>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.ZoneId: int hashCode()>
<org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String getAlphaNumerics(java.lang.String)>-><java.lang.String: char charAt(int)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder threadNamePrefix(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: int hashCode()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setUserSessionData(org.owasp.webgoat.session.UserSessionData)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.config.ConfigurationHelper: java.lang.Integer getInteger(java.lang.String,java.util.Map)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.field.PreciseDurationField: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.Symbol: boolean equals(java.lang.Object)>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.ArrayList$SubList: int size()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Double: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.BinaryData: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.convert.TypeDescriptor: int hashCode()>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: org.springframework.security.web.reactive.result.view.CsrfRequestDataValueProcessor requestDataValueProcessor()>-><org.springframework.security.web.reactive.result.view.CsrfRequestDataValueProcessor: void <init>()>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.servlet.spec.ServletContextImpl$6: void <init>(io.undertow.servlet.spec.ServletContextImpl,io.undertow.servlet.spec.HttpSessionImpl)>-><java.lang.Object: void <init>()>
<java.util.TreeMap$Entry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.headius.invokebinder.Signature: boolean equals(java.lang.Object)>
<org.springframework.boot.info.GitProperties: void coercePropertyToEpoch(java.util.Properties,java.lang.String)>-><java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><com.thoughtworks.xstream.io.path.Path: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$EmptyList: int hashCode()>
<com.google.common.collect.Maps: com.google.common.collect.Maps$EntryTransformer asEntryTransformer(com.google.common.base.Function)>-><com.google.common.collect.Maps$7: void <init>(com.google.common.base.Function)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.Constructor: int hashCode()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<io.undertow.util.SubstringMap: void doPut(java.lang.Object[],java.lang.String,java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar: java.lang.String cleanBasePath(java.lang.String)>-><java.lang.String: boolean endsWith(java.lang.String)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: void <init>(reactor.netty.http.server.HttpServerRequest,org.springframework.core.io.buffer.NettyDataBufferFactory)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter getGlobalAuthenticationConfigurerAdapter()>
<org.springframework.security.web.server.header.StaticServerHttpHeadersWriter: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder builder()>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: void <init>()>
<io.undertow.util.SubstringMap: void doPut(java.lang.Object[],java.lang.String,java.lang.Object)>-><io.undertow.util.SubstringMap: int tablePos(java.lang.Object[],int)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><com.google.common.collect.Maps$EntrySet: void clear()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.format.support.FormattingConversionService mvcConversionService()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addFormatters(org.springframework.format.FormatterRegistry)>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>-><org.springframework.jdbc.core.JdbcTemplate: void setQueryTimeout(int)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object buildLazyResolutionProxy(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>-><org.springframework.util.Assert: void state(boolean,java.lang.String)>
<org.springframework.boot.actuate.health.HealthStatusHttpMapper: void addStatusMapping(org.springframework.boot.actuate.health.Status,java.lang.Integer)>-><org.springframework.boot.actuate.health.Status: java.lang.String getCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<io.micrometer.core.util.internal.logging.JdkLogger: void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.util.logging.LogRecord: void setLoggerName(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.math.BigDecimal: int hashCode()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.Boolean getEnabled()>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.WeakHashMap$KeySet: int size()>
<org.springframework.security.web.server.csrf.CsrfWebFilter: void <init>()>-><java.lang.Object: void <init>()>
<java.lang.Object: java.lang.String toString()>-><java.nio.ByteBuffer: int hashCode()>
<org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration: org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean securityFilterChainRegistration(org.springframework.boot.autoconfigure.security.SecurityProperties)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void setDispatcherTypes(java.util.EnumSet)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.IRScope: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void setRootViewName(java.lang.String)>-><org.springframework.web.servlet.mvc.ParameterizableViewController: void setViewName(java.lang.String)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.Expression: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.SubList$1: boolean hasNext()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.util.DerValue: int hashCode()>
<sun.security.ssl.SecureKey: int hashCode()>-><java.lang.Object: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Hashtable$ValueCollection: void clear()>
<org.springframework.boot.actuate.metrics.web.reactive.server.DefaultWebFluxTagsProvider: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateEntry(io.undertow.util.HttpString)>-><io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateEntry(io.undertow.util.HttpString)>
<org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: void <init>()>-><java.util.ArrayList: void <init>()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.validation.AbstractBindingResult: int getErrorCount()>-><java.util.LinkedList: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.field.MillisDurationField: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityService: void <init>(org.springframework.boot.web.client.RestTemplateBuilder,java.lang.String,boolean)>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate build()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<java.util.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.TreeMap$KeySet: int size()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>
<org.jruby.RubyModule$MethodClumper: void clump(java.lang.Class)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque: boolean isEmpty()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String readPublicKey()>-><org.springframework.util.StreamUtils: java.lang.String copyToString(java.io.InputStream,java.nio.charset.Charset)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor: void <init>()>-><org.springframework.orm.jpa.EntityManagerFactoryAccessor: void <init>()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.client.DefaultRestTemplateExchangeTagsProvider getRestTemplateExchangeTagsProvider()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<io.undertow.server.session.InMemorySessionManager$SessionImpl: void requestDone(io.undertow.server.HttpServerExchange)>-><io.undertow.util.AbstractAttachable: java.lang.Object getAttachment(io.undertow.util.AttachmentKey)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.util.AbstractCollection: void clear()>-><io.micrometer.shaded.org.pcollections.IntTree$EntryIterator: java.lang.Object next()>
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForAnnotationIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>-><org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] mergeNamesWithParent(java.lang.String[],java.lang.String[],org.springframework.beans.factory.HierarchicalBeanFactory)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: boolean isLazy(org.springframework.beans.factory.config.DependencyDescriptor)>-><org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.annotation.Annotation,java.lang.Class)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory: void <init>()>-><java.util.LinkedHashSet: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch handleMatch(java.lang.String,io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,int)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Double: int hashCode()>
<org.springframework.boot.actuate.endpoint.AbstractExposableEndpoint: void <init>(org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><java.lang.Object: void <init>()>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><org.xnio.OptionMap: boolean get(org.xnio.Option,boolean)>
<io.undertow.util.HeaderValues: java.lang.String removeLast()>-><io.undertow.util.HeaderValues: java.lang.String pollLast()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.WeakHashMap$EntrySet: int size()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafSecurityDialectConfiguration: org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect securityDialect()>-><org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>-><org.springframework.web.cors.CorsConfiguration: void <init>()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.jruby.RubyArray: void clear()>-><org.jruby.specialized.RubyArrayOneObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.web.filter.CharacterEncodingFilter: void setForceResponseEncoding(boolean)>
<com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeServlet(java.lang.String,boolean)>-><io.undertow.servlet.handlers.ServletPathMatch: boolean isRequiredWelcomeFileMatch()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.io.ClassPathResource: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint scheduledTasksEndpoint(org.springframework.beans.factory.ObjectProvider)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter(com.fasterxml.jackson.databind.ObjectMapper)>-><org.springframework.http.converter.json.MappingJackson2HttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.String: char charAt(int)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider findProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.core.style.DefaultToStringStyler: void styleValue(java.lang.StringBuilder,java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.IntervalMonthData: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.field.UnsupportedDurationField: int hashCode()>
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>-><javax.servlet.ServletRequestWrapper: java.lang.Object getAttribute(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.util.RecursiveComparator$Pair: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.io.ObjectStreamClass$FieldReflectorKey: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.IdentityHashMap$Values: void clear()>
<org.springframework.context.support.AbstractApplicationContext: boolean isTypeMatch(java.lang.String,org.springframework.core.ResolvableType)>-><org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<java.util.IdentityHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.util.Set entrySet()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.logging.Level: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.time.MonthDay: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<io.micrometer.core.instrument.binder.logging.LogbackMetrics: void <init>(java.lang.Iterable)>-><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.UnboxedBoolean: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents: void <init>(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection createEndpointBeans()>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addFormatters(org.springframework.format.FormatterRegistry)>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByName(java.lang.String)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.ResourceBundle$CacheKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.net.URI: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: java.util.ArrayDeque$DeqSpliterator trySplit()>-><java.util.ArrayDeque$DeqSpliterator: void <init>(java.util.ArrayDeque,int,int)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain servletChain(io.undertow.server.HttpHandler,io.undertow.servlet.core.ManagedServlet,java.util.Map,java.lang.String,io.undertow.servlet.api.DeploymentInfo,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><io.undertow.servlet.api.ServletInfo: java.util.List getHandlerChainWrappers()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.springframework.cglib.core.EmitUtils: void member_helper_type(org.springframework.cglib.core.CodeEmitter,java.util.List,org.springframework.cglib.core.ObjectSwitchCallback,org.springframework.cglib.core.EmitUtils$ParameterTyper,org.springframework.asm.Label,org.springframework.asm.Label,java.util.BitSet)>-><io.undertow.util.HeaderValues: int size()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: boolean welcomeTemplateExists(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.context.ApplicationContext)>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getCharacterEncoding()>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.api.DeploymentInfo getDeploymentInfo()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>-><com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementChildContextConfiguration$ReactiveManagementWebServerFactoryCustomizer reactiveManagementWebServerFactoryCustomizer(org.springframework.beans.factory.ListableBeanFactory)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void close()>-><org.xnio.channels.Channels: void flushBlocking(org.xnio.channels.SuspendableWriteChannel)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.RubyArray: int size()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.ArrayList$SubList: java.lang.Object get(int)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties getHttpTracePropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder roles(java.lang.String[])>-><java.util.ArrayList: void <init>(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.Spliterators$1Adapter: void accept(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration: org.springframework.boot.actuate.cache.CachesEndpoint cachesEndpoint(java.util.Map)>-><org.springframework.boot.actuate.cache.CachesEndpoint: void <init>(java.util.Map)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.persist.CachedObjectBase: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setInitializationMode(org.springframework.boot.jdbc.DataSourceInitializationMode)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Arrays$ArrayList: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.awt.Font: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyObject: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Integer extractKeyHash(java.lang.String)>-><org.springframework.util.Assert: void hasLength(java.lang.String,java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.Symbol: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.BeanMetadataAttribute: int hashCode()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.math.BigInteger: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.AbstractMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<io.undertow.servlet.spec.ServletContextImpl: void updateSessionAccessTime(io.undertow.server.HttpServerExchange)>-><io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.server.HttpServerExchange,boolean)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.jruby.javasupport.binding.ClassInitializer: void setupClassMethods(java.lang.Class,org.jruby.javasupport.binding.Initializer$State)>-><io.undertow.util.HeaderValues: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReduceOps$3ReducingSink: void accept(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.lang.Iterable: void forEach(java.util.function.Consumer)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.springframework.security.web.FilterInvocation: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: java.lang.Object get(int)>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServerHttpSecurity(org.springframework.security.config.web.server.ServerHttpSecurity)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.Maps$Values: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: java.lang.String getPath()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.ProcessEnvironment$StringEntrySet: int hashCode()>
<java.lang.ProcessEnvironment$StringKeySet: void clear()>-><java.util.HashMap$KeySet: void clear()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect java8TimeDialect()>-><org.thymeleaf.extras.java8time.dialect.Java8TimeDialect: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCurrentSecurityContextArgumentResolver(org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: int size()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getPrefix()>-><java.lang.String: boolean endsWith(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: boolean shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding$Type)>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setLookupPathAttributeName(java.lang.String)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.stream.ForEachOps$ForEachOrderedTask: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.stream.Sink)>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setAutoIndexCreation(java.lang.Boolean)>
<sun.security.ssl.SessionId: boolean equals(java.lang.Object)>-><sun.security.ssl.SessionId: byte[] getId()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration: java.lang.Object createDataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,java.lang.Class)>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder type(java.lang.Class)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration: org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor meterRegistryPostProcessor(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.context.ApplicationContext)>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.time.Instant: long toEpochMilli()>
<java.util.AbstractSet: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: boolean isAllowCoreThreadTimeout()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.font.AttributeValues: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.JumboEnumSet: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.IntervalMonthData: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.Clock$SystemClock: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$UnmodifiableMap: int hashCode()>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><java.lang.Object: java.lang.Class getClass()>
<io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch: void <init>(io.undertow.servlet.handlers.ServletChain)>-><java.util.HashMap: void <init>()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.jruby.RubyArray: boolean isEmpty()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform get()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.ClobDataID: boolean equals(java.lang.Object)>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback(java.lang.String)>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getRelativePath(java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: void <init>()>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: boolean equals(java.lang.Object)>
<sun.security.ssl.SSLSessionImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.http.converter.ResourceHttpMessageConverter$2: java.lang.String getFilename()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List extractPartConverters(org.springframework.http.converter.FormHttpMessageConverter)>
<java.util.concurrent.locks.ReentrantLock: boolean hasWaiters(java.util.concurrent.locks.Condition)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>-><java.util.TreeSet: java.util.Comparator comparator()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.SubList$1: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver conventionErrorViewResolver()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.net.URI: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.util.HashMap: java.util.Set entrySet()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: void clear()>-><java.util.concurrent.ConcurrentHashMap: void clear()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setRequestBodyAdvice(java.util.List)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.TreeMap: boolean containsKey(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback withLogger(org.apache.commons.logging.Log)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.joda.time.format.DateTimeFormatterBuilder: void <init>()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getCorsConfigurations()>-><org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.text.AttributeEntry: java.lang.Object getKey()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeServlet(java.lang.String,boolean)>-><io.undertow.servlet.handlers.ServletPathMatch: java.lang.String getRemaining()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: java.util.Optional getWelcomePage()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>-><java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
<org.springframework.web.util.WebUtils: java.lang.Object getSessionAttribute(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>-><org.springframework.web.servlet.view.InternalResourceViewResolver: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int,int)>-><org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String,int)>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addPrefixMatch(java.lang.String,io.undertow.servlet.handlers.ServletChain,boolean)>-><io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<io.undertow.server.handlers.cache.LRUCache: void bumpAccess(io.undertow.server.handlers.cache.LRUCache$CacheEntry)>-><io.undertow.server.handlers.cache.LRUCache$CacheEntry: boolean setToken(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.RowType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: java.lang.Object getSuggestedValue(org.springframework.beans.factory.config.DependencyDescriptor)>-><org.springframework.beans.factory.InjectionPoint: org.springframework.core.MethodParameter getMethodParameter()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.lessons.Hint: int hashCode()>-><java.lang.String: int hashCode()>
<io.undertow.servlet.spec.ServletCookieAdaptor: java.lang.String getValue()>-><javax.servlet.http.Cookie: java.lang.String getValue()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Vector: void clear()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.web.context.support.ServletContextResource: java.lang.String getFilename()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$1: java.lang.Object next()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.util.Set entrySet()>
<org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints: void <init>(java.lang.String,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints: java.util.Map getEndpoints(java.util.Collection)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.core.annotation.AbstractMergedAnnotation: java.lang.String getString(java.lang.String)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: java.lang.Object getTarget()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Maps$EntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><java.nio.charset.Charset: java.lang.String name()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.format.datetime.DateFormatterRegistrar: void setFormatter(org.springframework.format.datetime.DateFormatter)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.Type: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.Fixnum: int hashCode()>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.text.AttributeEntry: java.lang.Object getKey()>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><java.lang.String: char charAt(int)>
<org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter: void <init>(java.lang.Class,java.util.Collection,java.util.Collection,java.lang.String[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: boolean isLambdaGenericProblem(java.lang.ClassCastException)>-><org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: boolean startsWithArgumentClassName(java.lang.String)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setInfoContributor(org.springframework.boot.actuate.info.InfoContributor)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><java.util.stream.ReduceOps$Box: java.lang.Object get()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.security.ssl.SSLSessionContextImpl$1: java.lang.Object run()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.ForwardingConcurrentMap: boolean remove(java.lang.Object,java.lang.Object)>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.Collections$UnmodifiableList: java.util.List subList(int,int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isHealthEndpointExtension(java.lang.Object)>-><java.lang.Boolean: boolean booleanValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.util.collections.WeakHashSet: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration: org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer undertowWebServerFactoryCustomizer(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setConfigurationPropertiesReportEndpoint(org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundrySecurityInterceptor: void <init>(org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveTokenValidator,org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService,java.lang.String)>-><java.lang.Object: void <init>()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.authentication.ReactiveAuthenticationManager authenticationManager()>-><org.springframework.security.authentication.UserDetailsRepositoryReactiveAuthenticationManager: void <init>(org.springframework.security.core.userdetails.ReactiveUserDetailsService)>
<io.undertow.util.HeaderValues: java.lang.String remove(int)>-><java.lang.IndexOutOfBoundsException: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTransactionalOperator(org.springframework.transaction.reactive.TransactionalOperator)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><synthetic.method.FilterChainImpl: void <init>()>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver freeMarkerViewResolver()>-><org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties getProperties()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.core.style.DefaultToStringStyler: void styleIdentityHashCode(java.lang.StringBuilder,java.lang.Object)>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.text.DateFormat: java.util.Date parse(java.lang.String)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><org.dom4j.tree.BackedList: boolean remove(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter: void <init>(java.lang.Class,java.util.Collection,java.util.Collection,java.lang.String[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.MBeanExporter: void <init>()>
<org.springframework.web.servlet.i18n.SessionLocaleResolver: java.util.Locale resolveLocale(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.i18n.SessionLocaleResolver: java.util.Locale determineDefaultLocale(javax.servlet.http.HttpServletRequest)>
<org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.util.Collection)>-><java.util.LinkedHashSet: void <init>(java.util.Collection)>
<java.util.ArrayList: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Map map()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.field.ScaledDurationField: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.binder.system.UptimeMetrics: void <init>(java.lang.Iterable)>-><java.lang.management.ManagementFactory: java.lang.management.RuntimeMXBean getRuntimeMXBean()>
<org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher createDefaultRequestMacher()>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: void <init>(org.springframework.http.MediaType[])>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.springframework.web.servlet.mvc.method.annotation.AbstractMappingJacksonResponseBodyAdvice: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory getOperationsFactory(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection)>
<java.util.Collections$SetFromMap: void forEach(java.util.function.Consumer)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySet: void forEach(java.util.function.Consumer)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<com.google.common.collect.Maps: java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps: java.util.SortedMap transformEntries(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$EmptyMap: java.util.Set keySet()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer servletEndpointDiscoverer(org.springframework.context.ApplicationContext,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<org.springframework.web.util.HierarchicalUriComponents: void lambda$getQuery$0(java.lang.StringBuilder,java.lang.String,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.LinkedHashMap$LinkedKeySet: void clear()>-><java.util.LinkedHashMap: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object get(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.util.List get(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.NullNode: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.util.TypeKey: int hashCode()>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><java.util.Collections$EmptySet: int size()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: boolean flushBufferAsync(boolean)>-><java.nio.Buffer: int position()>
<org.springframework.core.annotation.AnnotationAwareOrderComparator: void sortIfNecessary(java.lang.Object)>-><org.springframework.core.annotation.AnnotationAwareOrderComparator: void sort(java.lang.Object[])>
<org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>-><java.lang.Character: boolean isUpperCase(char)>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: void <init>(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher)>-><java.lang.Object: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean: void <init>(java.lang.String,org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.util.Assert: void hasLength(java.lang.String,java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean resourceUrlEncodingFilter()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.IntervalSecondData: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.EndpointMapping: java.lang.String normalizePath(java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.util.collections.WeakHashSet: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter getWebSecurityConfigurerAdapter()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.api.DeploymentInfo getDeploymentInfo()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.TreeMap$KeySet: int size()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String readPublicKey()>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.validation.AbstractPropertyBindingResult: java.lang.Class getFieldType(java.lang.String)>-><org.springframework.validation.BeanPropertyBindingResult: java.lang.Object getTarget()>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration: org.springframework.boot.actuate.health.HealthEndpointWebExtension healthEndpointWebExtension(org.springframework.boot.actuate.health.HealthContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>-><org.springframework.boot.actuate.health.HealthEndpointWebExtension: void <init>(org.springframework.boot.actuate.health.HealthContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory,java.lang.String,java.lang.Class[])>-><org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
<org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint: void <init>(java.util.Collection)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.util.ObjectIdentifier: int hashCode()>
<java.util.Comparators$NaturalOrderComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.Duration: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeMap$Values: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque: int size()>
<java.util.EnumMap: void <init>(java.util.Map)>-><com.thoughtworks.xstream.core.util.WeakCache: java.util.Set keySet()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration: void <init>()>
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>-><io.undertow.util.HeaderValues: int size()>
<io.undertow.util.HeaderValues: void addLast(java.lang.String)>-><java.lang.IllegalStateException: void <init>()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext getServletContext()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.DistinctOps$1$2: void accept(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.PatternEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><java.lang.String: int indexOf(java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><java.io.InputStreamReader: void close()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.text.AttributeEntry: java.lang.Object getValue()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.ResultSetMetaData getMetaData()>
<org.springframework.boot.actuate.audit.listener.AbstractAuditListener: void <init>()>-><java.lang.Object: void <init>()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: boolean isManagementExtensionsPresent()>-><java.lang.Class: java.lang.ClassLoader getClassLoader()>
<org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int getKeyHash()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.ResultSetMetaData getMetaData()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.springframework.security.web.server.header.XXssProtectionServerHttpHeadersWriter: void updateDelegate()>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder builder()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object buildLazyResolutionProxy(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>-><org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>
<org.springframework.web.servlet.FrameworkServlet: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController basicErrorController(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.ServerProperties: org.springframework.boot.autoconfigure.web.ErrorProperties getError()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.EnumMap$EntrySet: void clear()>
<java.util.HashMap$Node: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.field.ScaledDurationField: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addReturnValueHandlers(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration: org.springframework.boot.actuate.env.EnvironmentEndpoint environmentEndpoint(org.springframework.core.env.Environment,org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties)>-><org.springframework.boot.actuate.env.EnvironmentEndpoint: void <init>(org.springframework.core.env.Environment)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setCharacterEncoding(java.lang.String)>-><io.undertow.server.HttpServerExchange: io.undertow.util.HeaderMap getResponseHeaders()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.BuddhistCalendar: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isHealthEndpointExtension(java.lang.Object)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: void <init>()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.FindOps$FindSink: void accept(java.lang.Object)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void close()>-><org.xnio.Bits: boolean allAreClear(int,int)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><java.util.LinkedHashMap$LinkedValues: java.util.Iterator iterator()>
<org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: void <init>()>-><org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher createDefaultRequestMacher()>
<org.springframework.web.servlet.FrameworkServlet: void <init>()>-><org.springframework.web.servlet.HttpServletBean: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: int hashCode()>
<org.springframework.http.server.reactive.AbstractServerHttpRequest: void <init>(java.net.URI,java.lang.String,org.springframework.http.HttpHeaders)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.jruby.RubyArray: void clear()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: int size()>-><java.util.ArrayDeque: int size()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean isEmpty()>
<org.springframework.boot.actuate.endpoint.EndpointId: void logWarning(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void warn(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.google.common.collect.Multimaps$Keys$1$1: int getCount()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.TabularType: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder awaitTermination(boolean)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.DynamicRegistrationBean: void <init>()>-><org.springframework.boot.web.servlet.RegistrationBean: void <init>()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerAdapter compositeHandlerAdapter(org.springframework.beans.factory.ListableBeanFactory)>-><org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerAdapter: void <init>(org.springframework.beans.factory.ListableBeanFactory)>
<org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration$MetricsWebMvcConfigurer: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>-><java.lang.Object: void <init>()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyMatchData: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.sql.DriverInfo: int hashCode()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher anyExchange()>-><org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers$1: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.Period: int hashCode()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.boot.context.properties.source.AliasedConfigurationPropertySource: org.springframework.boot.context.properties.source.ConfigurationPropertyState containsDescendantOf(org.springframework.boot.context.properties.source.ConfigurationPropertyName)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.core.Conventions: java.lang.Class getClassForValue(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.format.support.FormattingConversionService mvcConversionService()>-><org.springframework.boot.autoconfigure.web.format.WebConversionService: void <init>(java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void responseDone()>-><io.undertow.servlet.spec.HttpServletResponseImpl: void closeStreamAndWriter()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMappingJackson2HttpMessageConverter(org.springframework.http.converter.json.MappingJackson2HttpMessageConverter)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String getIssuerUri()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: org.springframework.http.client.ClientHttpRequestFactory unwrapRequestFactoryIfNecessary(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>
<org.jruby.javasupport.JavaArray: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><java.util.Iterator: void remove()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.ContentNegotiatingViewResolver viewResolver(org.springframework.beans.factory.BeanFactory)>-><org.springframework.web.servlet.view.ContentNegotiatingViewResolver: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toLowerCase()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><java.util.ArrayDeque: int size()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.LinkedList: int size()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebFluxEndpointHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><java.util.Collections: java.util.List emptyList()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>-><org.springframework.cache.concurrent.ConcurrentMapCache: void <init>(java.lang.String,java.util.concurrent.ConcurrentMap,boolean,org.springframework.core.serializer.support.SerializationDelegate)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: int getRow()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet()>-><org.springframework.web.servlet.DispatcherServlet: void setDetectAllViewResolvers(boolean)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$SingletonList: int size()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.info.InfoProperties: java.util.Properties copy(java.util.Properties)>-><java.util.Properties: void <init>()>
<org.springframework.boot.actuate.health.HealthEndpointSupport: void <init>(org.springframework.boot.actuate.health.ContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet()>-><org.springframework.web.servlet.DispatcherServlet: void setDetectAllHandlerMappings(boolean)>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.Nodes$SizedCollectorTask$OfRef: void accept(java.lang.Object)>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplyingWhenNonNull()>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplying(org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>
<org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.actuate.endpoint.web.annotation.RequestPredicateFactory: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void sendError(int,java.lang.String)>-><io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setStatusCode(int)>
<org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics jvmMemoryMetrics()>-><io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics: void <init>()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.expression.TypedValue: int hashCode()>
<java.util.stream.AbstractTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.util.Properties: java.lang.String getProperty(java.lang.String)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: void <init>()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.StringCharacterIterator: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String getMode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setParameterValueMapper(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper)>
<org.hibernate.engine.config.spi.StandardConverters$1: java.lang.Boolean convert(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: java.lang.String getThreadNamePrefix()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<sun.security.ssl.SecureKey: int hashCode()>-><java.security.AccessControlContext: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration: void <init>(io.micrometer.core.instrument.MeterRegistry,java.util.Collection,java.util.Map)>
<java.lang.Object: java.lang.String toString()>-><java.time.LocalDate: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.IntervalMonthData: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>-><org.springframework.validation.beanvalidation.MethodValidationPostProcessor: void setValidator(javax.validation.Validator)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection getEndpoints()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection discoverEndpoints()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<org.springframework.validation.BindException: java.lang.String getMessage()>-><org.springframework.validation.AbstractErrors: java.lang.String toString()>
<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.module.SimpleModule: void <init>(com.fasterxml.jackson.core.Version)>-><com.fasterxml.jackson.databind.Module: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.TemporaryVariable: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties: void <init>()>-><java.lang.Object: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: void <init>(org.springframework.web.servlet.DispatcherServlet,java.lang.String)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,java.lang.String[])>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.JavaType: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Multisets$EntrySet: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.thoughtworks.xstream.core.util.FastField: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.Class getType()>
<org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration: org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean securityFilterChainRegistration(org.springframework.boot.autoconfigure.security.SecurityProperties)>-><org.springframework.boot.web.servlet.RegistrationBean: void setOrder(int)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.hibernate.loader.BatchFetchStyle: org.hibernate.loader.BatchFetchStyle interpret(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><java.lang.reflect.WeakCache$Factory: java.lang.Object get()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setNimbusReactiveOpaqueTokenIntrospector(org.springframework.security.oauth2.server.resource.introspection.NimbusReactiveOpaqueTokenIntrospector)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.lang.ProcessEnvironment$StringKeySet: void clear()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.support.NullBean: int hashCode()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: io.micrometer.core.instrument.config.MeterFilter getMeterFilter()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addExtensionMatch(java.lang.String,java.lang.String,io.undertow.servlet.handlers.ServletChain)>-><io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String)>
<org.jruby.util.io.SelectorPool: java.nio.channels.Selector retrieveFromPool(java.nio.channels.spi.SelectorProvider)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<java.security.Provider: void implPutAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<io.undertow.util.AbstractAttachable: java.util.Map createAttachmentMap()>-><java.util.IdentityHashMap: void <init>(int)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter(com.fasterxml.jackson.databind.ObjectMapper)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.lang.StringBuilder: java.lang.String toString()>
<java.lang.Class: java.net.URL getResource(java.lang.String)>-><java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection convertToEndpoints(java.util.Collection)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>
<org.springframework.boot.actuate.endpoint.Sanitizer: void setKeysToSanitize(java.lang.String[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.HsqlNameManager$HsqlName: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.InterceptorRegistration: void <init>(org.springframework.web.servlet.HandlerInterceptor)>-><java.lang.Object: void <init>()>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.lang.Object: java.lang.String toString()>-><org.hibernate.boot.model.relational.Namespace: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer webEndpointDiscoverer(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,java.util.List,java.util.Collection,java.util.Collection)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: void <init>()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void <init>(org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.boot.web.servlet.DynamicRegistrationBean: void <init>()>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.lang.String: java.lang.String valueOf(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><ch.qos.logback.core.joran.spi.ElementSelector: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.interpreter.Profiler$IRCallSite: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<io.undertow.util.HeaderValues: java.lang.String get(int)>-><io.undertow.util.HeaderValues: int index(int)>
<io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics: void <init>()>-><java.util.Collections: java.util.List emptyList()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: int hashCode()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.apache.commons.logging.LogAdapter$Log4jLog: void warn(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>-><java.util.TreeMap$KeySet: java.util.Comparator comparator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><ch.qos.logback.classic.spi.ClassPackagingData: int hashCode()>
<org.springframework.boot.util.LambdaSafe$InvocationResult: org.springframework.boot.util.LambdaSafe$InvocationResult of(java.lang.Object)>-><org.springframework.boot.util.LambdaSafe$InvocationResult: void <init>(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><javax.management.openmbean.TabularDataSupport: boolean isEmpty()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.Method: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setExposeSessionAttributes(boolean)>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSpringSecurityDialect(org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect)>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.BasicChronology: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(java.lang.Class,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.Object getBean()>
<java.util.EnumMap: void <init>(java.util.Map)>-><org.springframework.util.LinkedMultiValueMap: boolean isEmpty()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>-><org.springframework.web.cors.CorsConfiguration: void addAllowedOrigin(java.lang.String)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.undertow.servlet.spec.HttpServletResponseImpl$DuplicateCookieCommitListener: void <init>(io.undertow.servlet.spec.HttpServletResponseImpl,io.undertow.servlet.spec.HttpServletResponseImpl$1)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.net.URL: int hashCode()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder(org.springframework.context.ApplicationContext,java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder applicationContext(org.springframework.context.ApplicationContext)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.Nodes$SpinedNodeBuilder: void accept(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor endpointCachingOperationInvokerAdvisor(org.springframework.core.env.Environment)>
<org.springframework.security.core.context.SecurityContextImpl: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.core.JsonLocation: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHealthEndpoint(org.springframework.boot.actuate.health.HealthEndpoint)>
<org.springframework.boot.util.LambdaSafe$Callback: void <init>(java.lang.Class,java.lang.Object,java.lang.Object,java.lang.Object[])>-><org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void <init>(java.lang.Class,java.lang.Object,java.lang.Object[])>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addExactMatch(java.lang.String,io.undertow.servlet.handlers.ServletChain)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.ProcessEnvironment$ExternalData: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.SubList: int size()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientPropertiesRegistrationAdapter: java.util.Map getClientRegistrations(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>-><java.util.HashMap: void <init>()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: boolean isLazy(org.springframework.beans.factory.config.DependencyDescriptor)>-><org.springframework.beans.factory.InjectionPoint: org.springframework.core.MethodParameter getMethodParameter()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAuditEventsEndpoint(org.springframework.boot.actuate.audit.AuditEventsEndpoint)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket getBucket()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.validation.ObjectError: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.boot.web.servlet.FilterRegistrationBean: void <init>(javax.servlet.Filter,org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void <init>(org.springframework.boot.web.servlet.ServletRegistrationBean[])>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.util.Collections$UnmodifiableCollection: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<sun.text.normalizer.IntTrie: int getSurrogateOffset(char,char)>-><sun.net.idn.StringPrep$StringPrepTrieImpl: int getFoldingOffset(int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: java.lang.RuntimeException concurrentModification(org.jruby.Ruby,java.lang.Exception)>
<org.owasp.webgoat.lessons.Hint: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getHint()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Character: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.flyway.FlywayEndpointAutoConfiguration: void <init>()>
<io.undertow.util.HeaderValues: java.lang.String[] toArray()>-><java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: int hashCode()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplying(org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>-><org.springframework.boot.context.properties.PropertyMapper: void <init>(org.springframework.boot.context.properties.PropertyMapper,org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilderCustomizer getEntityManagerFactoryBuilderCustomizer()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.AbstractMap$SimpleEntry: int hashCode()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.core.log.CompositeLog: boolean isDebugEnabled()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.HashSet: int size()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void close()>-><java.lang.Integer: java.lang.String toString(int)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration: org.springframework.jdbc.datasource.DataSourceTransactionManager transactionManager(javax.sql.DataSource,org.springframework.beans.factory.ObjectProvider)>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source getSource(java.util.function.Supplier)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.TabularDataSupport: int hashCode()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.security.web.server.authorization.HttpStatusServerAccessDeniedHandler: void <init>(org.springframework.http.HttpStatus)>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistration: void <init>(org.springframework.web.servlet.HandlerInterceptor)>-><java.util.ArrayList: void <init>()>
<io.undertow.util.HeaderValues: void addLast(java.lang.String)>-><io.undertow.util.HeaderValues: boolean offerLast(java.lang.String)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>-><java.util.regex.Matcher: boolean find()>
<org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.core.annotation.AnnotationAttributes getMergedAnnotationAttributes(java.lang.reflect.AnnotatedElement,java.lang.Class)>-><org.springframework.core.annotation.TypeMappedAnnotations: org.springframework.core.annotation.MergedAnnotation get(java.lang.Class,java.util.function.Predicate,org.springframework.core.annotation.MergedAnnotationSelector)>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.annotation.Annotation,java.lang.Class)>-><org.springframework.core.annotation.TypeMappedAnnotation: org.springframework.core.annotation.MergedAnnotation withNonMergedAttributes()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.jruby.RubyHash$BaseCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.EndpointId: void logWarning(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Log4jLog: boolean isWarnEnabled()>
<java.util.Collections$EmptySet: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.ISOChronology: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.jersey.JerseyManagementContextConfiguration: org.springframework.boot.web.servlet.ServletRegistrationBean jerseyServletRegistration(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath,org.glassfish.jersey.server.ResourceConfig)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyBasicObject: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.TreeMap: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addExtensionMatch(java.lang.String,java.lang.String,io.undertow.servlet.handlers.ServletChain)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<io.micrometer.core.util.internal.logging.JdkLogger: void fillCallerData(java.lang.String,java.util.logging.LogRecord)>-><java.util.logging.LogRecord: void setSourceMethodName(java.lang.String)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><java.lang.String: boolean endsWith(java.lang.String)>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Collection)>-><java.util.AbstractList$Itr: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: int hashCode()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.TreeSet: void clear()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><java.util.stream.FindOps$FindSink$OfRef: java.lang.Object get()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.TreeMap$EntrySet: int size()>
<org.springframework.aop.framework.CglibAopProxy: java.lang.Object getProxy(java.lang.ClassLoader)>-><java.lang.Class: java.lang.Class[] getInterfaces()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.google.common.collect.Maps$7: java.lang.Object transformEntry(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebFluxEndpointHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.endpoint.web.EndpointMapping: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.boot.autoconfigure.mustache.MustacheProperties: java.lang.String getSuffix()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>-><java.lang.Class: java.lang.reflect.Method[] getMethods()>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><javax.security.auth.Subject$SecureSet: void clear()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.HttpServletBean: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties)>-><org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void setOrder(int)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.util.Set keySet()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain servletChain(io.undertow.server.HttpHandler,io.undertow.servlet.core.ManagedServlet,java.util.Map,java.lang.String,io.undertow.servlet.api.DeploymentInfo,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><io.undertow.servlet.handlers.security.ServletSecurityRoleHandler: void <init>(io.undertow.server.HttpHandler,io.undertow.servlet.api.AuthorizationManager)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.BlobDataID: int hashCode()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.security.Provider$UString: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><javax.management.ObjectName: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: void appendFields(org.springframework.core.style.ToStringCreator)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.calendar.CalendarDate: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><com.google.common.collect.Maps$Values: java.util.Iterator iterator()>
<org.springframework.security.config.web.server.ServerHttpSecurity$RequestCacheSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void <init>()>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setStatusCode(int)>-><org.xnio.Bits: boolean allAreSet(int,int)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: int hashCode()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.security.authentication.AbstractUserDetailsReactiveAuthenticationManager: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.net.InetSocketAddress: int hashCode()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.MonthDay: int hashCode()>
<java.util.stream.ForEachOps$ForEachOrderedTask: void doCompute(java.util.stream.ForEachOps$ForEachOrderedTask)>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.time.ZonedDateTime: int hashCode()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$1: java.lang.Object run()>-><io.undertow.servlet.spec.ServletPrintWriterDelegate$1: io.undertow.servlet.spec.ServletPrintWriterDelegate run()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: java.util.List getDeferredResultInterceptors()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.springframework.boot.context.properties.source.AliasedConfigurationPropertySource: org.springframework.boot.context.properties.source.ConfigurationPropertyState containsDescendantOf(org.springframework.boot.context.properties.source.ConfigurationPropertyName)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher pathMatchers(org.springframework.http.HttpMethod,java.lang.String[])>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: void <init>(java.lang.String,org.springframework.http.HttpMethod)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.EnumMap$KeySet: int size()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: void setString(int,java.lang.String)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.accept.ContentNegotiationManager buildContentNegotiationManager()>-><org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void addMediaTypes(java.util.Map)>
<org.springframework.validation.BindException: void rejectValue(java.lang.String,java.lang.String)>-><org.springframework.validation.BindException: void rejectValue(java.lang.String,java.lang.String)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.TreeMap$Values: void clear()>-><java.util.TreeMap: void clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyFixnum: int hashCode()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: void setDateFormatter(org.joda.time.format.DateTimeFormatter)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration: org.springframework.boot.actuate.system.DiskSpaceHealthIndicator diskSpaceHealthIndicator(org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties)>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void <init>()>-><io.undertow.util.SubstringMap: void <init>()>
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection discoverEndpoints()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection convertToEndpoints(java.util.Collection)>
<org.springframework.boot.actuate.health.HealthEndpoint: void <init>(org.springframework.boot.actuate.health.HealthContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>-><org.springframework.boot.actuate.health.HealthEndpointSupport: void <init>(org.springframework.boot.actuate.health.ContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.AbstractServerHttpRequest: void <init>(java.net.URI,java.lang.String,org.springframework.http.HttpHeaders)>-><org.springframework.http.server.RequestPath: org.springframework.http.server.RequestPath parse(java.net.URI,java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBeansEndpoint(org.springframework.boot.actuate.beans.BeansEndpoint)>
<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher pathMatchers(org.springframework.http.HttpMethod,java.lang.String[])>-><java.util.ArrayList: boolean add(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.SimpleTimeZone: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void resetBuffer()>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.util.Collections$UnmodifiableCollection: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.JumboEnumSet: boolean isEmpty()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: java.lang.String getKey(java.lang.String)>-><java.lang.String: java.lang.String toLowerCase()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler build()>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver authenticationPrincipalArgumentResolver()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Collections$SetFromMap: void <init>(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: boolean isEmpty()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void <init>(java.lang.String,io.undertow.servlet.spec.ServletContextImpl)>-><io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>
<java.util.ArrayList: void <init>(java.util.Collection)>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.Collections$SingletonList: java.lang.Object get(int)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.temporal.WeekFields: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$Values: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Hashtable$EntrySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.boot.ansi.Ansi8BitColor: int hashCode()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect java8TimeDialect()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineUsername()>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void resetBuffer()>-><java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.core.io.FileSystemResource: java.io.InputStream getInputStream()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addFormatters(org.springframework.format.FormatterRegistry)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addFormatters(org.springframework.format.FormatterRegistry)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.hsqldb.persist.Cache$CachedObjectComparator: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<com.google.common.collect.Maps$EntrySet: void clear()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Map map()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String getPrefix()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.EndpointMapping: java.lang.String normalizePath(java.lang.String)>-><java.lang.String: int length()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatchesData$Builder builder()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.task.TaskExecutionProperties getTaskExecutionPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void setThreadNamePrefix(java.lang.String)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: org.springframework.core.task.AsyncTaskExecutor getTaskExecutor()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.chrono.AbstractChronology: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.x509.RDN: int hashCode()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateEntry(io.undertow.util.HttpString)>-><io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateNonEmpty(io.undertow.util.HttpString,java.lang.Object[],int,int,java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>-><org.springframework.web.cors.CorsConfiguration: void addAllowedOrigin(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.StackTraceElement: int hashCode()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder password(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.util.ByteList: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: boolean equals(java.lang.Object)>
<org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession getSession(boolean)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession(boolean)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTomcatReactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$LazyPasswordEncoder: void <init>(org.springframework.context.ApplicationContext)>-><java.lang.Object: void <init>()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Hashtable$ValueCollection: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Collection)>-><org.springframework.util.Assert: void notEmpty(java.util.Collection,java.lang.String)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setEnableSpringElCompiler(boolean)>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.LocalTime: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<org.springframework.web.cors.CorsConfiguration: void setAllowedOrigins(java.util.List)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.springframework.web.servlet.view.InternalResourceViewResolver: void <init>()>-><org.springframework.web.servlet.view.InternalResourceViewResolver: java.lang.Class requiredViewClass()>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: void <init>(java.util.List)>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(java.lang.Class,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint getFilterEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<io.undertow.servlet.core.ManagedServlets: io.undertow.servlet.handlers.ServletHandler addServlet(io.undertow.servlet.api.ServletInfo)>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.spec.ServletContextImpl getServletContext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint getFilterEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: boolean isEnabledByDefault()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHealthContributorRegistry(org.springframework.boot.actuate.health.HealthContributorRegistry)>
<org.springframework.boot.actuate.info.GitInfoContributor: void <init>(org.springframework.boot.info.GitProperties,org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode)>-><org.springframework.boot.actuate.info.InfoPropertiesInfoContributor: void <init>(org.springframework.boot.info.InfoProperties,org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.BinaryData: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.util.matcher.RegexRequestMatcher: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.LocalDate: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>
<java.util.AbstractCollection: java.lang.String toString()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.lang.String: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashMap$KeySet: void clear()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.TreeMap$Values: void clear()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Vector: boolean isEmpty()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ListableBeanFactory,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void <init>()>
<org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder queueCapacity(int)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.jruby.org.objectweb.asm.tree.MethodNode$1: boolean add(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMeterFilter(io.micrometer.core.instrument.config.MeterFilter)>
<java.util.stream.AbstractShortCircuitTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderMap put(io.undertow.util.HttpString,java.lang.String)>-><io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateEntry(io.undertow.util.HttpString)>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.io.ByteArrayResource: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<io.undertow.util.CopyOnWriteMap: java.lang.Object putInternal(java.lang.Object,java.lang.Object)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.core.style.ToStringCreator: java.lang.String toString()>-><org.springframework.core.style.DefaultToStringStyler: void styleEnd(java.lang.StringBuilder,java.lang.Object)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><org.springframework.util.ClassUtils: boolean isAssignableValue(java.lang.Class,java.lang.Object)>
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>-><org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpHandler(org.springframework.http.server.reactive.HttpHandler)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.WeakHashMap$Values: int size()>
<javax.validation.Validation$GenericBootstrapImpl: javax.validation.Configuration configure()>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.http.server.reactive.ReactorServerHttpResponse: void <init>(reactor.netty.http.server.HttpServerResponse,org.springframework.core.io.buffer.DataBufferFactory)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.context.ApplicationContext)>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration: void <init>()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.HsqlException: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties getDiskSpaceHealthIndicatorPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: void setThreshold(org.springframework.util.unit.DataSize)>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>-><io.undertow.util.QueryParameterUtils: java.lang.String getQueryParamEncoding(io.undertow.server.HttpServerExchange)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource methodMetadataSource(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.WeakHashMap$Values: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration: void <init>()>
<java.lang.Object: java.lang.String toString()>-><sun.security.provider.PolicyParser$PrincipalEntry: int hashCode()>
<java.util.Collections$ReverseComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration: org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer resourceHandlerRegistrationCustomizer()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<java.util.Collections$UnmodifiableCollection: int size()>-><io.undertow.util.HeaderValues: int size()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.lang.Enum: java.lang.Class getDeclaringClass()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><org.springframework.util.LinkedMultiValueMap: void add(java.lang.Object,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.health.HealthEndpointGroups getHealthEndpointGroups()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFile(java.io.File)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.boot.ansi.Ansi8BitColor: int hashCode()>
<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: java.time.format.DateTimeFormatterBuilder$PrefixTree getTree(java.time.format.DateTimeParseContext)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebFluxEndpointHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundrySecurityInterceptor getSecurityInterceptor(org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.core.env.Environment)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.CSRFLogin: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.aop.support.AbstractPointcutAdvisor: int hashCode()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.jruby.RubyHash: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><org.jruby.RubyEnumerator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: void clear()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>-><org.springframework.util.Assert: void hasText(java.lang.String,java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.factory.config.BeanDefinitionHolder: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><ch.qos.logback.core.subst.Node: int hashCode()>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider findProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.util.MimeType: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.field.MillisDurationField: int hashCode()>
<org.springframework.boot.web.servlet.RegistrationBean: void <init>()>-><java.lang.Object: void <init>()>
<java.util.AbstractList: void clear()>-><java.util.Collections$EmptyList: int size()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.support.EncodedResource: java.io.Reader getReader()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJavaDate()>-><org.springframework.format.datetime.DateFormatterRegistrar: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatchesData: void <init>(java.util.Map,io.undertow.util.SubstringMap,java.util.Map)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.jca.ProviderConfig: int hashCode()>
<sun.security.ssl.JsseJce$1: java.lang.Void run()>-><java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.jruby.RubyArray: int size()>
<java.util.Collections$UnmodifiableList: java.util.List subList(int,int)>-><io.undertow.util.HeaderValues: java.util.List subList(int,int)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection convertToEndpoints(java.util.Collection)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryInfoEndpointWebExtension cloudFoundryInfoEndpointWebExtension(org.springframework.boot.info.GitProperties,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.context.annotation.MBeanExportConfiguration: void setupRegistrationPolicy(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<org.springframework.boot.actuate.trace.http.HttpTraceEndpoint: void <init>(org.springframework.boot.actuate.trace.http.HttpTraceRepository)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap: java.util.Set entrySet()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.undertow.util.CopyOnWriteMap: java.util.Set entrySet()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.JdbcProperties getJdbcPropertiesInstance()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.ComparableTimSort: void mergeLo(int,int,int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<io.micrometer.core.instrument.binder.logging.LogbackMetrics: void <init>(java.lang.Iterable)>-><io.micrometer.core.instrument.binder.logging.LogbackMetrics: void <init>(java.lang.Iterable,ch.qos.logback.classic.LoggerContext)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$Values: int size()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ListableBeanFactory)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.lang.Object getIfUnique()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.util.collections.WeakHashSet: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.JavaObjectData: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><javax.management.MBeanOperationInfo: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration: org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider servletMappingDescriptionProvider()>-><org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection discoverEndpoints()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>
<java.util.EnumMap: void <init>(java.util.Map)>-><org.jruby.RubyHash$BaseSet: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><java.util.SimpleTimeZone: int hashCode()>
<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><java.util.Collections$SingletonMap: boolean isEmpty()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.io.File: int hashCode()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateEntry(io.undertow.util.HttpString)>-><io.undertow.util.HeaderMap: void resize()>
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setPathMatcher(org.springframework.util.PathMatcher)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Maps$TransformedEntriesMap: boolean containsKey(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean containsKey(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.util.TreeMap$Entry: int hashCode()>
<org.springframework.boot.actuate.endpoint.Sanitizer: java.util.regex.Pattern getPattern(java.lang.String)>-><org.springframework.boot.actuate.endpoint.Sanitizer: boolean isRegex(java.lang.String)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Vector: boolean isEmpty()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebFluxEndpointHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: void <init>(java.util.Collection)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch handleMatch(java.lang.String,io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,int)>-><io.undertow.servlet.handlers.ServletPathMatch: void <init>(io.undertow.servlet.handlers.ServletChain,java.lang.String,boolean)>
<org.springframework.boot.util.LambdaSafe$InvocationResult: void <init>(java.lang.Object)>-><java.lang.Object: void <init>()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><java.lang.reflect.Method: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Vector: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.LinkedList: int size()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.security.web.server.header.FeaturePolicyServerHttpHeadersWriter: void <init>()>-><java.lang.Object: void <init>()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: void clear()>-><jnr.constants.ConstantSet: java.util.Iterator iterator()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.thymeleaf.spring5.context.webflux.SpringWebFluxEngineContextFactory: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties getWebEndpointPropertiesInstance()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyString: int hashCode()>
<org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredWebEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean,java.util.Collection)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.EnumMap: void <init>(java.util.Map)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,boolean,java.lang.String[])>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<io.undertow.util.SubstringMap: void put(java.lang.String,java.lang.Object)>-><java.lang.NullPointerException: void <init>()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeMap$EntrySet: void clear()>
<org.springframework.security.web.FilterInvocation: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Maps: java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$TransformedEntriesMap: void <init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap$Node: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.text.AttributeEntry: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.LinkedHashMap$LinkedValues: int size()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><java.util.jar.Attributes: boolean isEmpty()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>-><org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setMessageInterpolator(javax.validation.MessageInterpolator)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayDeque: boolean isEmpty()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Env: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts getTimeouts()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><java.util.WeakHashMap: boolean isEmpty()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.csrf.CsrfWebFilter: void <init>()>-><org.springframework.security.web.server.authorization.HttpStatusServerAccessDeniedHandler: void <init>(org.springframework.http.HttpStatus)>
<java.util.ArrayList: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque: java.lang.Object[] toArray()>
<io.undertow.util.AbstractAttachable: java.lang.Object getAttachment(io.undertow.util.AttachmentKey)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown: java.time.Duration getAwaitTerminationPeriod()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration: void <init>()>
<org.springframework.boot.actuate.security.AuthenticationAuditListener: void <init>()>-><org.springframework.boot.actuate.security.AuthenticationAuditListener: org.springframework.boot.actuate.security.AuthenticationAuditListener$WebAuditListener maybeCreateWebListener()>
<org.owasp.webgoat.session.WebSession: void <init>()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setObjectPostProcessor(org.springframework.security.config.annotation.ObjectPostProcessor)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.config.ConfigurationHelper: java.lang.String getString(java.lang.String,java.util.Map)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.TabularType: int hashCode()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.WeakHashMap$Values: void clear()>-><java.util.WeakHashMap: void clear()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><org.springframework.util.LinkedMultiValueMap: boolean isEmpty()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.zone.ZoneOffsetTransition: int hashCode()>
<com.google.common.collect.Maps$Values: int size()>-><com.google.common.collect.Maps$TransformedEntriesMap: int size()>
<io.undertow.util.HeaderValues: boolean removeFirstOccurrence(java.lang.Object)>-><io.undertow.util.HeaderValues: java.lang.String remove(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><java.util.ArrayList: boolean contains(java.lang.Object)>
<org.springframework.security.config.web.server.ServerHttpSecurity$RequestCacheSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: boolean hasId(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.javasupport.JavaClass: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.internal.util.Pair: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.jsonwebtoken.impl.JwtMap: java.util.Set entrySet()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.springframework.aop.support.AbstractPointcutAdvisor: void setOrder(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointCompatibilityConfiguration: org.springframework.boot.actuate.health.HealthStatusHttpMapper healthStatusHttpMapper(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>-><org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties: java.util.Map getHttpMapping()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDataSourceTransactionManager(org.springframework.jdbc.datasource.DataSourceTransactionManager)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.util.Optional: boolean isPresent()>
<org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar: java.lang.String cleanBasePath(java.lang.String)>-><java.lang.String: int length()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPropertySourcesPlaceholderConfigurer(org.springframework.context.support.PropertySourcesPlaceholderConfigurer)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.BinaryData: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.LocalDateTime: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.ArrayList: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>-><org.thymeleaf.spring5.dialect.SpringStandardDialect: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>
<java.util.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.javasupport.JavaObject: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.UrlResource: java.lang.String getFilename()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyThread: int hashCode()>
<org.springframework.aop.support.StaticMethodMatcherPointcut: void <init>()>-><org.springframework.aop.support.StaticMethodMatcher: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.support.AbstractBeanDefinition: int hashCode()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration: org.springframework.security.config.annotation.rsocket.RSocketSecurity rsocketSecurity(org.springframework.context.ApplicationContext)>-><org.springframework.security.config.annotation.rsocket.RSocketSecurity: void setApplicationContext(org.springframework.context.ApplicationContext)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String getAssignmentPath()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: int hashCode()>
<org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: int size()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Map map()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.IRScope: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatchesData: void <init>(java.util.Map,io.undertow.util.SubstringMap,java.util.Map)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Double: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Multimaps: java.util.Collection access$000(java.util.Collection)>-><com.google.common.collect.Multimaps: java.util.Collection unmodifiableValueCollection(java.util.Collection)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><io.undertow.servlet.spec.SecurityActions$2: java.lang.Object run()>
<org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>-><org.springframework.util.MimeType: java.lang.String getSubtype()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.cglib.core.ClassInfo: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties getHealthIndicatorPropertiesInstance()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar: void <init>(java.lang.String,java.util.Collection)>-><java.lang.Object: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: void <init>(java.lang.Iterable)>-><io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: void <init>(java.lang.management.OperatingSystemMXBean,java.lang.Iterable)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setCheckTemplateLocation(boolean)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void close()>-><org.xnio.Bits: boolean anyAreSet(int,int)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.LinkedHashMap: java.util.Set entrySet()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.servlet.handlers.ServletPathMatches: boolean isFilterApplicable(java.lang.String,java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>-><org.springframework.beans.factory.support.AbstractBeanDefinitionReader: void setEnvironment(org.springframework.core.env.Environment)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.DurationFieldType$StandardDurationFieldType: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.LocalDate: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void responseDone()>
<org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration: org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource jsr250MethodSecurityMetadataSource()>-><org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: java.nio.charset.Charset getCharset()>
<org.springframework.security.access.prepost.PrePostAdviceReactiveMethodInterceptor: void <init>(org.springframework.security.access.method.MethodSecurityMetadataSource,org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice,org.springframework.security.access.prepost.PostInvocationAuthorizationAdvice)>-><org.springframework.security.core.authority.AuthorityUtils: java.util.List createAuthorityList(java.lang.String[])>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.lang.String getScheme(reactor.netty.http.server.HttpServerRequest)>-><reactor.netty.http.server.HttpServerRequest: java.lang.String scheme()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>-><javax.validation.Validation: javax.validation.bootstrap.GenericBootstrap byDefaultProvider()>
<org.springframework.beans.PropertyAccessorFactory: org.springframework.beans.BeanWrapper forBeanPropertyAccess(java.lang.Object)>-><org.springframework.beans.BeanWrapperImpl: void <init>(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addPrefixMatch(java.lang.String,io.undertow.servlet.handlers.ServletChain,boolean)>-><io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch: void <init>(io.undertow.servlet.handlers.ServletChain)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.ArrayDeque: void clear()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain servletChain(io.undertow.server.HttpHandler,io.undertow.servlet.core.ManagedServlet,java.util.Map,java.lang.String,io.undertow.servlet.api.DeploymentInfo,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><io.undertow.servlet.api.DeploymentInfo: boolean isSecurityDisabled()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><org.hsqldb.jdbc.JDBCResultSet: void beforeFirst()>
<synthetic.method.ServletResponseImpl: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.controller.Welcome: void <init>()>
<com.google.common.collect.Multimaps$UnmodifiableMultimap$1: void <init>(com.google.common.collect.Multimaps$UnmodifiableMultimap)>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><java.util.ArrayList: java.lang.Object[] toArray()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate: io.undertow.servlet.spec.ServletPrintWriterDelegate newInstance(io.undertow.servlet.spec.ServletPrintWriter)>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties getMetricsPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties: void setUseGlobalRegistry(boolean)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: int hashCode()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyFloat: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.ResultSetMetaData getMetaData()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void commit()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistration: void <init>(org.springframework.web.servlet.HandlerInterceptor)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.web.servlet.LocaleResolver getLocaleResolver()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setPrefix(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers$1: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder allowCoreThreadTimeOut(boolean)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.AttributedCharacterIterator$Attribute: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.base.AbstractPartial: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.aop.support.AbstractPointcutAdvisor: int hashCode()>
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: boolean remove(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Integer extractKeyHash(java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<io.undertow.util.QueryParameterUtils: java.lang.String getQueryParamEncoding(io.undertow.server.HttpServerExchange)>-><java.nio.charset.Charset: java.lang.String name()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.core.log.CompositeLog: void debug(java.lang.Object)>
<org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()>-><com.google.common.collect.Multimaps$Keys$1: void <init>(com.google.common.collect.Multimaps$Keys,java.util.Iterator)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityInterceptor getSecurityInterceptor(org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.core.env.Environment)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityService getCloudFoundrySecurityService(org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.core.env.Environment)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder taskDecorator(org.springframework.core.task.TaskDecorator)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.io.File: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><java.util.Collections: java.util.List emptyList()>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer mediaTypes(java.util.Map)>-><java.util.HashMap: void putAll(java.util.Map)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.FrozenString: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: void <init>()>-><com.google.common.collect.Sets$ImprovedAbstractSet: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.config.BeanDefinitionHolder: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setDeferredResultInterceptors(java.util.List)>
<org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.validation.FieldError: int hashCode()>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void <init>(org.springframework.context.ApplicationEventPublisher)>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.endpoint.EndpointIdTimeToLivePropertyFunction: void <init>(org.springframework.core.env.Environment)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setForwardHeadersStrategy(org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void closeStreamAndWriter()>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void close()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: boolean isEmpty()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<java.util.Properties: void loadFromXML(java.io.InputStream)>-><java.io.PushbackInputStream: void close()>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.HSQLDBDatabaseConfig: void <init>()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void warn(java.lang.Object)>
<org.hsqldb.types.Type: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.javasupport.JavaArray: int hashCode()>
<org.springframework.security.core.userdetails.User: org.springframework.security.core.userdetails.User$UserBuilder builder()>-><org.springframework.security.core.userdetails.User$UserBuilder: void <init>(org.springframework.security.core.userdetails.User$1)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Enum: int hashCode()>
<java.util.SubList: void removeRange(int,int)>-><java.util.AbstractList: void removeRange(int,int)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.internal.database.base.Schema: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.field.UnsupportedDurationField: int hashCode()>
<org.springframework.security.web.server.authentication.logout.LogoutWebFilter: void <init>()>-><org.springframework.security.web.server.authentication.logout.SecurityContextServerLogoutHandler: void <init>()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.String: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addArgumentResolvers(java.util.List)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addArgumentResolvers(java.util.List)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.LinkedHashSet: void <init>(java.util.Collection)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: java.util.Optional getWelcomePage()>-><org.springframework.boot.autoconfigure.web.ResourceProperties: java.lang.String[] getStaticLocations()>
<io.undertow.servlet.api.ServletInfo: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.FrozenString: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration$ManagementErrorPageCustomizer managementErrorPageCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration$ManagementErrorPageCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties: void <init>()>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAsciiDoctorTemplateResolver(org.owasp.webgoat.AsciiDoctorTemplateResolver)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.web.filter.CharacterEncodingFilter: void setEncoding(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.base.AbstractInstant: int hashCode()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: void <init>()>-><com.fasterxml.jackson.core.util.InternCache: void <init>()>
<org.jruby.util.JRubyClassLoader: void terminateJarIndexCacheEntries()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.String getKeyStorePassword()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.ArrayDeque: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.ProcessEnvironment$ExternalData: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.invoke.MethodType: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.net.SocketPermission: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.PropertyValue: int hashCode()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>-><org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object getLazyResolutionProxyIfNecessary(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory undertowReactiveWebServerFactory(org.springframework.beans.factory.ObjectProvider)>
<org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration: org.springframework.cache.support.NoOpCacheManager cacheManager()>-><org.springframework.cache.support.NoOpCacheManager: void <init>()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyRegistrationConfiguration: void <init>()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: org.springframework.transaction.jta.JtaTransactionManager transactionManager(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.transaction.config.JtaTransactionManagerFactoryBean: org.springframework.transaction.jta.JtaTransactionManager getObject()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void setViewNames(java.lang.String[])>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><java.util.Collections: java.util.List emptyList()>
<io.undertow.util.HeaderValues$1: void <init>(io.undertow.util.HeaderValues,int,boolean)>-><java.lang.Object: void <init>()>
<org.jruby.specialized.RubyArrayTwoObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyBasicObject: org.jruby.Ruby getRuntime()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setReadTimeout(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory,java.lang.String,java.lang.Class[])>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder awaitTerminationPeriod(java.time.Duration)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set)>
<org.springframework.boot.actuate.autoconfigure.health.HealthProperties: void <init>()>-><java.util.HashSet: void <init>()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<sun.security.ssl.SSLSessionImpl: java.lang.String getCipherSuite()>-><sun.security.ssl.SSLSessionImpl: sun.security.ssl.CipherSuite getSuite()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.util.locale.BaseLocale: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.trace.http.HttpTraceRepository getHttpTraceRepository()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration: org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer metricsRestTemplateCustomizer(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider,org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties)>
<java.util.IdentityHashMap$KeySet: void clear()>-><java.util.IdentityHashMap: void clear()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getReturnValueHandlers()>-><java.util.ArrayList: void <init>()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getBeanNamesForType(java.lang.Class)>-><org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues removeEntry(io.undertow.util.HttpString)>-><io.undertow.util.HttpString: int hashCode()>
<org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: org.springframework.boot.actuate.endpoint.web.annotation.ExposableControllerEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredControllerEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties getMetricsPropertiesInstance()>
<org.springframework.security.access.expression.method.ExpressionBasedPostInvocationAdvice: void <init>(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>-><java.lang.Object: java.lang.Class getClass()>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addPrefixMatch(java.lang.String,io.undertow.servlet.handlers.ServletChain,boolean)>-><io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch: boolean access$202(io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,boolean)>
<org.springframework.aop.framework.CglibAopProxy: java.lang.Object getProxy(java.lang.ClassLoader)>-><java.lang.Class: java.lang.Class getSuperclass()>
<org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration: org.springframework.boot.actuate.system.DiskSpaceHealthIndicator diskSpaceHealthIndicator(org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties)>-><org.springframework.boot.actuate.system.DiskSpaceHealthIndicator: void <init>(java.io.File,org.springframework.util.unit.DataSize)>
<java.lang.Object: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringEntrySet: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.dom4j.tree.BackedList: void clear()>-><java.util.ArrayList: void clear()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.feed.AtomFeedHttpMessageConverter: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.awt.Color: int hashCode()>
<org.springframework.boot.actuate.endpoint.EndpointId: org.springframework.boot.actuate.endpoint.EndpointId of(org.springframework.core.env.Environment,java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.IdentityHashMap: java.util.Set entrySet()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.owasp.webwolf.user.WebGoatUser: java.lang.String getUsername()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch handleMatch(java.lang.String,io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,int)>-><java.lang.String: java.lang.String substring(int,int)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistrationBean(org.springframework.web.servlet.DispatcherServlet)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object get(java.lang.Object)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void closeAsync()>-><org.xnio.Bits: boolean allAreClear(int,int)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.jruby.specialized.RubyArrayTwoObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.Ruby: org.jruby.runtime.builtin.IRubyObject getNil()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.security.access.prepost.PrePostAdviceReactiveMethodInterceptor: void <init>(org.springframework.security.access.method.MethodSecurityMetadataSource,org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice,org.springframework.security.access.prepost.PostInvocationAuthorizationAdvice)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><java.lang.String: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$Values: boolean isEmpty()>-><java.util.Collections$UnmodifiableMap: boolean isEmpty()>
<org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyBasicObject: org.jruby.Ruby getRuntime()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getQuery()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration: org.springframework.boot.actuate.info.GitInfoContributor gitInfoContributor(org.springframework.boot.info.GitProperties,org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties)>
<java.lang.Object: java.lang.String toString()>-><java.lang.Package: int hashCode()>
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<io.undertow.servlet.core.DeploymentImpl: void addLifecycleObjects(io.undertow.servlet.core.Lifecycle[])>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void <init>(org.springframework.jdbc.core.JdbcOperations)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.AbstractList: void clear()>-><org.jruby.runtime.ObjectSpace$ObjectGroup: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.slf4j.helpers.SubstituteLogger: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.invoke.LambdaForm$Name: int hashCode()>
<org.springframework.boot.actuate.endpoint.Sanitizer: boolean isRegex(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<org.springframework.boot.convert.CollectionToDelimitedStringConverter: java.lang.Object convert(java.util.Collection,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<java.util.Collections$UnmodifiableCollection: boolean isEmpty()>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: java.lang.Boolean isUseTrailingSlashMatch()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String getAlphaNumerics(java.lang.String)>-><java.lang.StringBuilder: void <init>(int)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.CompositeDataSupport: int hashCode()>
<org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate namedParameterJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)>-><org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void <init>(org.springframework.jdbc.core.JdbcOperations)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$EmptySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.env.PropertySource: int hashCode()>
<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPropertiesMeterFilter(org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupDomain(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getBeanNamesForType(java.lang.Class)>-><org.springframework.context.support.AbstractApplicationContext: void assertBeanFactoryActive()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDispatcherServletRegistrationBean(org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.JavaType: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.core.io.SerializedString: int hashCode()>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mustache.MustacheProperties getMustachePropertiesInstance()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryHealthEndpointWebExtension cloudFoundryHealthEndpointWebExtension(org.springframework.boot.actuate.health.HealthEndpointWebExtension)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.WeakHashMap$KeySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.hibernate.ConnectionReleaseMode: org.hibernate.ConnectionReleaseMode interpret(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateNonEmpty(io.undertow.util.HttpString,java.lang.Object[],int,int,java.lang.Object)>-><io.undertow.util.HeaderMap: void resize()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureMessageConverters(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.util.Map$Entry next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.cglib.proxy.BridgeMethodResolver$BridgedFinder: org.springframework.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><java.util.LinkedList: boolean remove(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.management.openmbean.TabularDataSupport: boolean isEmpty()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.web.servlet.error.DefaultErrorAttributes errorAttributes()>-><org.springframework.boot.autoconfigure.web.ServerProperties: org.springframework.boot.autoconfigure.web.ErrorProperties getError()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter controllerExposeExcludePropertyEndpointFilter()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure: java.util.Set getExclude()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.io.File: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.TextNode: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.LinkedHashMap$LinkedKeySet: int size()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDataSource(javax.sql.DataSource)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.PatternEntry: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: int hashCode()>
<org.springframework.web.filter.FormContentFilter: void <init>()>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder maxPoolSize(int)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.jruby.util.JRubyClassLoader: void terminateJarIndexCacheEntries()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.boot.util.LambdaSafe$GenericTypeFilter: boolean match(java.lang.Class,java.lang.Object,java.lang.Object,java.lang.Object[])>-><org.springframework.core.ResolvableType: org.springframework.core.ResolvableType[] getGenerics()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<org.springframework.boot.jdbc.EmbeddedDatabaseConnection: boolean isEmbedded(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.thymeleaf.spring5.SpringWebFluxTemplateEngine: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><org.springframework.util.MimeType: java.util.Map getParameters()>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory undertowReactiveWebServerFactory(org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.AbstractList: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.GregorianCalendar: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.SubList: int size()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractSet: int hashCode()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><java.lang.Object: java.lang.Class getClass()>
<io.undertow.servlet.core.ServletContainerImpl: io.undertow.servlet.api.DeploymentManager getDeployment(java.lang.String)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><java.lang.Object: void <init>()>
<io.micrometer.core.instrument.binder.system.ProcessorMetrics: java.lang.Class getFirstClassFound(java.util.List)>-><java.util.AbstractList$Itr: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.MessageFormat: int hashCode()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: boolean isDebugEnabled()>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.jruby.RubyHash$BaseCollection: void clear()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: void <init>(java.util.Collection)>-><java.util.AbstractCollection: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMapReactiveUserDetailsService(org.springframework.security.core.userdetails.MapReactiveUserDetailsService)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebMvcConfigurer(org.springframework.web.servlet.config.annotation.WebMvcConfigurer)>
<org.springframework.security.web.util.matcher.RegexRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mustache.MustacheProperties getMustachePropertiesInstance()>-><org.springframework.boot.autoconfigure.mustache.MustacheProperties: void setSuffix(java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$SynchronizedMap: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$SynchronizedSet: int hashCode()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void <init>()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.base.AbstractDuration: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mustache.MustacheProperties getMustachePropertiesInstance()>-><org.springframework.boot.autoconfigure.mustache.MustacheProperties: void setPrefix(java.lang.String)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket getBucket()>
<java.lang.ThreadLocal: java.lang.Object setInitialValue()>-><io.undertow.servlet.core.ApplicationListeners$1: java.lang.Object initialValue()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping welcomePageHandlerMapping(org.springframework.context.ApplicationContext,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setInterceptors(java.lang.Object[])>
<io.undertow.server.HttpServerExchange: java.util.Map getResponseCookies()>-><java.util.TreeMap: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultErrorViewResolver(org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.sql.DriverInfo: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDelegatingFilterProxyRegistrationBean(org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties getMetricsPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties: void <init>()>
<com.google.common.collect.Maps: java.util.SortedMap transformEntriesIgnoreNavigable(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$TransformedEntriesSortedMap: void <init>(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.security.authentication.AnonymousAuthenticationToken: void <init>(java.lang.String,java.lang.Object,java.util.Collection)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: void <init>(java.lang.Integer,java.lang.Object,java.util.Collection)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.ClassLoader getClassLoader()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void setStatus(int)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection discoverEndpoints()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection createEndpointBeans()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setData(java.util.List)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.TimeData: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties: org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build getBuild()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.core.annotation.AbstractMergedAnnotation: java.lang.Class getClass(java.lang.String)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.concurrent.locks.ReentrantLock: boolean hasWaiters(java.util.concurrent.locks.Condition)>-><java.lang.NullPointerException: void <init>()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.Collections$UnmodifiableCollection: int size()>-><java.util.ArrayDeque: int size()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setDefaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><java.util.HashSet: boolean add(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>-><org.springframework.jdbc.core.JdbcTemplate: void <init>(javax.sql.DataSource)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getPrefix()>-><java.lang.String: java.lang.String substring(int,int)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>-><io.undertow.servlet.spec.ContentTypeInfo: java.lang.String getCharset()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: java.lang.String getCharacterEncoding()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServer(org.hsqldb.server.Server)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<io.undertow.util.QueryParameterUtils: void handleQueryParameter(java.lang.String,java.util.Map,int,int,int,java.lang.String,boolean)>-><java.util.ArrayDeque: boolean add(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setExposeRequestAttributes(boolean)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyFixnum: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration: void <init>()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMapping,java.util.Collection,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.cors.CorsConfiguration,org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityInterceptor,org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver)>-><org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMapping,java.util.Collection,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.cors.CorsConfiguration,boolean)>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: void <init>()>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate: io.undertow.servlet.spec.ServletPrintWriterDelegate newInstance(io.undertow.servlet.spec.ServletPrintWriter)>-><java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.OffsetTime: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<org.springframework.security.authentication.AbstractAuthenticationToken: void <init>(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setConnectTimeout(org.springframework.http.client.ClientHttpRequestFactory)>-><java.lang.Math: int toIntExact(long)>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch handleMatch(java.lang.String,io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,int)>-><io.undertow.servlet.core.ManagedServlet: io.undertow.servlet.api.ServletInfo getServletInfo()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebInvocationPrivilegeEvaluator(org.springframework.security.web.access.WebInvocationPrivilegeEvaluator)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.util.MimeType: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void resetBuffer()>-><io.undertow.servlet.spec.ServletPrintWriterDelegate: io.undertow.servlet.spec.ServletPrintWriterDelegate newInstance(io.undertow.servlet.spec.ServletPrintWriter)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool getPool()>
<com.google.common.collect.ForwardingMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.ForwardingMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints pathMappedEndpoints(java.util.Collection)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.PreparedStatement prepareStatement(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: void <init>(java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.metrics.Log4J2MetricsAutoConfiguration: io.micrometer.core.instrument.binder.logging.Log4j2Metrics log4j2Metrics()>-><io.micrometer.core.instrument.binder.logging.Log4j2Metrics: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: int hashCode()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.HashSet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatchesData$Builder builder()>-><io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>-><org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer,boolean,java.lang.String,java.util.Set,java.util.Set,java.util.function.Supplier,org.springframework.web.util.UriTemplateHandler,org.springframework.web.client.ResponseErrorHandler,org.springframework.boot.web.client.BasicAuthentication,java.util.Map,java.util.Set,java.util.Set)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setReactiveCloudFoundryActuatorAutoConfiguration$WebFilterChainPostProcessor(org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration$WebFilterChainPostProcessor)>
<org.springframework.format.support.DefaultFormattingConversionService: void <init>(boolean)>-><org.springframework.format.support.DefaultFormattingConversionService: void <init>(org.springframework.util.StringValueResolver,boolean)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.config.BeanExpressionContext: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void <init>()>-><java.lang.Object: void <init>()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$SynchronizedMap: boolean isEmpty()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.Proxy$Key1: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps: java.lang.Object safeGet(java.util.Map,java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver: void setApplicationContext(org.springframework.context.ApplicationContext)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties getTaskSchedulingPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void setThreadNamePrefix(java.lang.String)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Vector$Itr: boolean hasNext()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setConnectTimeout(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory,java.lang.String,java.lang.Class[])>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers: void <init>(java.util.Collection)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.AbstractList: boolean add(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: sun.security.ssl.SessionId getSessionId()>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source when(java.util.function.Predicate)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.internal.info.MigrationInfoImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder customizers(java.lang.Iterable)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.Provider$ServiceKey: int hashCode()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: boolean isManagementExtensionsPresent()>-><io.micrometer.core.util.internal.logging.LocationAwareSlf4JLogger: void warn(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><sun.security.provider.PolicyFile$SelfPermission: int hashCode()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status: void <init>()>-><java.lang.Object: void <init>()>
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendPattern(java.lang.String)>-><org.joda.time.format.DateTimeFormat: void appendPatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics jvmThreadMetrics()>
<io.undertow.util.CopyOnWriteMap: int size()>-><java.util.HashMap: int size()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getReturnValueHandlers()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><java.net.IDN$1: java.lang.Object run()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.EnumMap: void putAll(java.util.Map)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.jar.Attributes: boolean isEmpty()>
<java.lang.Object: java.lang.String toString()>-><org.hsqldb.HsqlException: int hashCode()>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMultipartResolver(org.springframework.web.multipart.MultipartResolver)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundrySecurityInterceptor getSecurityInterceptor(org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.core.env.Environment)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService getCloudFoundrySecurityService(org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.core.env.Environment)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRequestMappingHandlerMapping(org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.locale.BaseLocale$Key: int hashCode()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.web.header.Header: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.Sanitizer: void <init>(java.lang.String[])>-><java.lang.Object: void <init>()>
<java.util.AbstractMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.api.Location: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection createEndpointBeans()>-><java.util.LinkedHashMap: java.util.Collection values()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.DatabaseInitialization: void <init>(javax.sql.DataSource,java.lang.String)>
<org.springframework.boot.util.LambdaSafe: org.springframework.boot.util.LambdaSafe$Callback callback(java.lang.Class,java.lang.Object,java.lang.Object,java.lang.Object[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder corePoolSize(int)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.EnumMap$Values: void clear()>-><java.util.EnumMap: void clear()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.io.ByteArrayResource: int hashCode()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityInterceptor getSecurityInterceptor(org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.core.env.Environment)>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointCompatibilityConfiguration: org.springframework.boot.actuate.autoconfigure.health.HealthContributorRegistryHealthIndicatorRegistryAdapter healthIndicatorRegistry(org.springframework.boot.actuate.health.HealthContributorRegistry)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubySymbol: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.Row: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><com.google.common.collect.Multisets$EntrySet: void clear()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void <init>(org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><java.util.LinkedHashSet: void <init>()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.jruby.util.JRubyClassLoader: void terminateJarIndexCacheEntries()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.UnboxedBoolean: int hashCode()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getSocketConnect()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.lang.Object)>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.time.format.DateTimeTextProvider$1: int compare(java.util.Map$Entry,java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.Proxy$Key1: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object,org.springframework.core.style.ToStringStyler)>-><java.lang.StringBuilder: void <init>(int)>
<org.springframework.boot.actuate.logging.LogFileWebEndpoint: void <init>(org.springframework.boot.logging.LogFile,java.io.File)>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.Instant: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSchemaPassword(java.lang.String)>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.Collections$EmptyList: java.lang.Object get(int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<java.lang.Object: java.lang.String toString()>-><java.lang.reflect.Parameter: int hashCode()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.EnumMap$EntrySet: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<io.micrometer.core.util.internal.logging.Slf4JLogger: void warn(java.lang.String)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: int size()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.core.annotation.AbstractMergedAnnotation: boolean getBoolean(java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch handleMatch(java.lang.String,io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,int)>-><io.undertow.servlet.api.ServletInfo: boolean isRequireWelcomeFileMapping()>
<sun.security.ssl.SSLSessionImpl: java.lang.String toString()>-><sun.security.ssl.SSLSessionImpl: java.lang.String getCipherSuite()>
<java.util.Hashtable: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: boolean isEmpty()>
<io.undertow.util.Rfc6265CookieSupport: void validateDomain(java.lang.String)>-><java.util.BitSet: boolean get(int)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection createEndpointBeans()>-><java.util.HashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Date: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCourse(org.owasp.webgoat.session.Course)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.CurrentScope: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Hashtable$Entry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.factory.support.AbstractBeanDefinition: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.actuate.management.HeapDumpWebEndpoint: void <init>()>-><org.springframework.boot.actuate.management.HeapDumpWebEndpoint: void <init>(long)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.undertow.servlet.spec.ServletCookieAdaptor: io.undertow.server.handlers.Cookie setVersion(int)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.String: boolean endsWith(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.io.support.EncodedResource: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setResponseBodyAdvice(java.util.List)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashSet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: java.lang.Boolean isUseSuffixPatternMatch()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection convertToEndpoints(java.util.Collection)>-><java.util.HashSet: boolean add(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.web.filter.RequestContextFilter requestContextFilter()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration$OAuth2ClasspathGuard: boolean shouldConfigure(org.springframework.context.ApplicationContext)>-><org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getBeanNamesForType(java.lang.Class)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.StreamSpliterators$DistinctSpliterator: void accept(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyHash$ConvertingEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.boot.util.LambdaSafe$GenericTypeFilter: boolean match(java.lang.Class,java.lang.Object,java.lang.Object,java.lang.Object[])>-><org.springframework.core.ResolvableType: org.springframework.core.ResolvableType forClass(java.lang.Class,java.lang.Class)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLessonTemplateResolver(org.owasp.webgoat.LessonTemplateResolver)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String getCharsetName()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver reactiveCurrentSecurityContextArgumentResolver()>-><org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver: void setBeanResolver(org.springframework.expression.BeanResolver)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.security.Provider: java.util.Set keySet()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.TreeSet: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Optional: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.asm.Type: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.info.GitProperties: void <init>(java.util.Properties)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMetricsRestTemplateCustomizer(org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer)>
<java.util.IdentityHashMap$EntrySet: void clear()>-><java.util.IdentityHashMap: void clear()>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.util.List removeIncludeEvents(java.util.List)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.BinaryNode: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.security.x509.Extension: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: void <init>(org.springframework.web.servlet.DispatcherServlet,java.lang.String)>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>
<com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration: com.fasterxml.jackson.databind.ObjectMapper jacksonObjectMapper(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder createXmlMapper(boolean)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter: void <init>(org.springframework.boot.actuate.trace.http.HttpTraceRepository,org.springframework.boot.actuate.trace.http.HttpExchangeTracer)>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.math.BigDecimal: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.security.web.header.Header: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.config.web.server.ServerHttpSecurity httpSecurity()>-><org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.authentication.ReactiveAuthenticationManager authenticationManager()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice getPreInvocationAuthorizationAdvice()>
<io.micrometer.core.util.internal.logging.JdkLogger: void fillCallerData(java.lang.String,java.util.logging.LogRecord)>-><java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: boolean flushBufferAsync(boolean)>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void createChannel()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setUndertowWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer)>
<java.util.AbstractList: void removeRange(int,int)>-><java.util.AbstractList: java.util.ListIterator listIterator(int)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: void clear()>
<org.springframework.boot.autoconfigure.jackson.JacksonProperties: void <init>()>-><java.util.EnumMap: void <init>(java.lang.Class)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String escapeHtml(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.context.support.ApplicationListenerDetector: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration: org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider filterMappingDescriptionProvider()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebFluxEndpointHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.util.Comparators$NaturalOrderComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<com.google.common.collect.Multisets$EntrySet: void clear()>-><com.google.common.collect.Multimaps$Keys: void clear()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpTraceRepository(org.springframework.boot.actuate.trace.http.HttpTraceRepository)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.RegularEnumSet: int size()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><java.util.LinkedHashSet: void <init>()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<java.util.Collections$UnmodifiableMap: java.util.Collection values()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Collection values()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.io.InputStreamResource: int hashCode()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.AbstractMap$1: boolean isEmpty()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLocaleResolver(org.springframework.web.servlet.LocaleResolver)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setEntityManagerFactoryBuilderCustomizer(org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilderCustomizer)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.internal.info.MigrationInfoImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver freeMarkerViewResolver()>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><org.springframework.security.authentication.AbstractAuthenticationToken: boolean isAuthenticated()>
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration: org.springframework.security.oauth2.server.resource.introspection.NimbusReactiveOpaqueTokenIntrospector opaqueTokenIntrospector(org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.AbstractCollection: boolean isEmpty()>
<org.springframework.boot.actuate.management.ThreadDumpEndpoint: void <init>()>-><org.springframework.boot.actuate.management.PlainTextThreadDumpFormatter: void <init>()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyString: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.springframework.boot.util.LambdaSafe$GenericTypeFilter: void <init>()>-><java.lang.Object: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setGlobalAuthenticationConfigurerAdapter(org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void sendError(int,java.lang.String)>-><io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.api.Deployment getDeployment()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashMap$EntrySet: void clear()>
<java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>-><java.util.stream.MatchOps$MatchKind: boolean access$100(java.util.stream.MatchOps$MatchKind)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.nio.charset.Charset getEncoding()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.tz.FixedDateTimeZone: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.HashMap$Node: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration: org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer metricsRestTemplateCustomizer(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider,org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties)>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client$ClientRequest: org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties getAutotime()>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: org.springframework.security.web.server.SecurityWebFilterChain springSecurityFilterChain()>-><org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebMvcEndpointChildContextConfiguration$ManagementErrorPageCustomizer(org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration$ManagementErrorPageCustomizer)>
<io.undertow.util.QueryParameterUtils: java.util.Map mergeQueryParametersWithNewQueryString(java.util.Map,java.lang.String,java.lang.String)>-><io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><java.util.Vector: boolean remove(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: java.util.Optional getWelcomePage()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration: java.lang.String[] getResourceLocations(java.lang.String[])>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.jar.Manifest: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.FrozenString: int hashCode()>
<org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer: void <init>(org.springframework.context.ApplicationContext)>-><org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter: void <init>()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.security.authentication.AbstractUserDetailsReactiveAuthenticationManager: void setPasswordEncoder(org.springframework.security.crypto.password.PasswordEncoder)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyArray: boolean isEmpty()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<synthetic.method.ServletRequestImpl: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Hashtable$EntrySet: void clear()>-><java.security.Provider: void clear()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><io.micrometer.core.instrument.Tags$ArrayIterator: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.health.HealthProperties: void <init>()>-><java.lang.Object: void <init>()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: java.lang.String remove(int)>-><java.lang.AssertionError: void <init>()>
<java.lang.Object: java.lang.String toString()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter: org.springframework.security.web.server.header.ServerHttpHeadersWriter createDelegate(org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter$Mode)>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder builder()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.aop.framework.JdkDynamicAopProxy: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.health.HealthEndpointWebExtension: void <init>(org.springframework.boot.actuate.health.HealthContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>-><org.springframework.boot.actuate.health.HealthEndpointSupport: void <init>(org.springframework.boot.actuate.health.ContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setJndiName(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.time.Duration: int hashCode()>
<org.springframework.boot.actuate.endpoint.Sanitizer: void <init>(java.lang.String[])>-><org.springframework.boot.actuate.endpoint.Sanitizer: void setKeysToSanitize(java.lang.String[])>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext$ServerManager: reactor.core.publisher.Mono handle(org.springframework.http.server.reactive.ServerHttpRequest,org.springframework.http.server.reactive.ServerHttpResponse)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.util.RecursiveComparator$Pair: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder url(java.lang.String)>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: org.springframework.security.core.userdetails.MapReactiveUserDetailsService reactiveUserDetailsService(org.springframework.boot.autoconfigure.security.SecurityProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: org.springframework.security.core.userdetails.UserDetails getUserDetails(org.springframework.boot.autoconfigure.security.SecurityProperties$User,java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: void <init>()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: void <init>(java.lang.management.OperatingSystemMXBean,java.lang.Iterable)>-><java.lang.Object: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.DefaultPathContainer: java.util.List elements()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$EmptyMap: java.util.Set entrySet()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<io.undertow.util.SubstringMap: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer(org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer(org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: org.springframework.boot.actuate.endpoint.web.ExposableServletEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$UnmodifiableSet: int hashCode()>
<org.thymeleaf.extras.java8time.dialect.Java8TimeExpressionFactory: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.ArrayType: int hashCode()>
<org.springframework.validation.BindException: java.lang.Object getTarget()>-><org.springframework.validation.BeanPropertyBindingResult: java.lang.Object getTarget()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractList$Itr: java.lang.Object next()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: java.lang.Object extractValue(org.springframework.core.annotation.AnnotationAttributes)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.springframework.security.web.server.authentication.logout.SecurityContextServerLogoutHandler: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.javasupport.JavaClass: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory undertowReactiveWebServerFactory(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.GJCacheKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistrationBean(org.springframework.web.servlet.DispatcherServlet)>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: void <init>(org.springframework.web.servlet.DispatcherServlet,java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.TimeData: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket: java.lang.String getName()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.lang.Object: java.lang.String toString()>-><java.awt.Font: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.SubList$1: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.security.web.header.Header: int hashCode()>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String getCharsetName()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.WeakCache$CacheKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<org.springframework.http.HttpHeaders: java.util.List put(java.lang.String,java.util.List)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.PropertyName: int hashCode()>
<java.util.Collections$SynchronizedSortedMap: java.util.Comparator comparator()>-><java.util.TreeMap: java.util.Comparator comparator()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService: org.springframework.http.client.reactive.ReactorClientHttpConnector buildTrustAllSslConnector()>-><org.springframework.http.client.reactive.ReactorClientHttpConnector: void <init>(reactor.netty.http.client.HttpClient)>
<org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: boolean isEmpty()>
<io.undertow.servlet.api.ServletInfo: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.jar.Attributes: boolean isEmpty()>
<java.util.AbstractMap$1: void clear()>-><java.util.AbstractMap: void clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.security.Provider: java.util.Set entrySet()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration: org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration$MetricsWebMvcConfigurer metricsWebMvcConfigurer(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addArgumentResolvers(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.core.style.DefaultToStringStyler: void styleIdentityHashCode(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.util.ObjectUtils: java.lang.String getIdentityHexString(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.javasupport.JavaConstructor: int hashCode()>
<org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher createDefaultRequestMacher()>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: void <init>(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap: java.util.Set entrySet()>
<java.util.Collections$EmptySet: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Character$Subset: int hashCode()>
<io.undertow.util.HeaderValues: java.lang.String remove(int)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><javax.net.ssl.SNIHostName: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.chrono.BuddhistChronology: int hashCode()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.springframework.util.ClassUtils: java.lang.String getShortNameAsProperty(java.lang.Class)>-><java.lang.String: java.lang.String substring(int)>
<io.micrometer.core.util.internal.logging.JdkLogger: void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.util.logging.LogRecord: void setThrown(java.lang.Throwable)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><java.lang.Object: void <init>()>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: boolean isLazy(org.springframework.beans.factory.config.DependencyDescriptor)>-><org.springframework.core.MethodParameter: java.lang.reflect.Method getMethod()>
<java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.config.web.server.ServerHttpSecurity httpSecurity()>-><org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec: org.springframework.security.config.web.server.ServerHttpSecurity and()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String,int,boolean)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory,java.lang.String,java.lang.Class[])>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: void <init>(java.lang.Object,java.util.function.Supplier)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.String getKey()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>()>
<io.undertow.util.HeaderValues$1: java.lang.String next()>-><java.util.NoSuchElementException: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.TreeMap$KeySet: boolean isEmpty()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.ReferencePipeline: java.lang.Object[] toArray(java.util.function.IntFunction)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: void close()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Double: int hashCode()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><java.lang.Object: java.lang.Class getClass()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReduceOps$4ReducingSink: void accept(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: org.springframework.http.client.ClientHttpRequestFactory unwrapRequestFactoryIfNecessary(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.misc.Signal: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: boolean equals(java.lang.Object)>
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>-><java.security.Provider$ServiceKey: boolean matches(java.lang.String,java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Vector: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.calendar.Era: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.ObjectName: int hashCode()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration: java.util.EnumSet getDispatcherTypes(org.springframework.boot.autoconfigure.security.SecurityProperties)>-><java.util.stream.Collectors: java.util.stream.Collector collectingAndThen(java.util.stream.Collector,java.util.function.Function)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRelyingPartyRegistrationRepository(org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository)>
<org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration: org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer metricsRestTemplateCustomizer(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider,org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties)>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties: org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web getWeb()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$EntrySet: int size()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.font.AttributeValues: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Vector$Itr: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.BooleanNode: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.ProtectionDomain$WeakProtectionDomainKey: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getCorsConfigurations()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.javasupport.JavaConstructor: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeMap$KeySet: void clear()>
<org.springframework.cglib.core.EmitUtils$4: void processCase(int,org.springframework.asm.Label)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.AbstractCollection: void clear()>-><java.util.Iterator: void remove()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.zip.ZipEntry: int hashCode()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String migrateLegacyId(org.springframework.core.env.Environment,java.lang.String)>-><java.lang.Boolean: boolean booleanValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.Constructor: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.Hashtable$ValueCollection: void clear()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.HashMap$Values: java.util.Iterator iterator()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isAllowSessionOverride()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.ImmutableDescriptor: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.UnboxedFixnum: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics: void <init>()>-><java.util.Collections: java.util.List emptyList()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$EmptyMap: java.util.Set entrySet()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: void <init>()>-><java.lang.Object: void <init>()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration: org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration$MetricsWebMvcConfigurer metricsWebMvcConfigurer(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>-><org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration$MetricsWebMvcConfigurer: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.TreeMap$KeySet: void clear()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.tz.FixedDateTimeZone: int hashCode()>
<io.undertow.server.handlers.cache.LRUCache: java.lang.Object get(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.StringLiteral: int hashCode()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPrePostAdviceReactiveMethodInterceptor(org.springframework.security.access.prepost.PrePostAdviceReactiveMethodInterceptor)>
<java.util.logging.Level$KnownLevel: void add(java.util.logging.Level)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.springframework.security.web.server.util.matcher.AndServerWebExchangeMatcher: void <init>(java.util.List)>-><org.springframework.util.Assert: void notEmpty(java.util.Collection,java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.ResultSetMetaData getMetaData()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Character$Subset: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeServlet(java.lang.String,boolean)>-><java.lang.StringBuilder: void setLength(int)>
<java.util.Collections$UnmodifiableMap: boolean containsKey(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: boolean containsKey(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.DecimalFormat: int hashCode()>
<org.springframework.security.authentication.AbstractUserDetailsReactiveAuthenticationManager: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyHash$BaseSet: java.util.Iterator iterator()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.actuate.endpoint.web.PathMapper: java.lang.String getRootPath(java.util.List,org.springframework.boot.actuate.endpoint.EndpointId)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.web.util.UriComponents: java.lang.String getVariableValueAsString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>
<org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>-><org.springframework.boot.actuate.endpoint.EndpointId: void logWarning(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.cglib.core.Signature: int hashCode()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>-><java.util.ArrayDeque: boolean contains(java.lang.Object)>
<io.undertow.util.Rfc6265CookieSupport: void validateCookieValue(java.lang.String)>-><java.lang.String: char charAt(int)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.web.context.support.ServletContextResource: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.provider.PolicyParser$PrincipalEntry: int hashCode()>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: java.lang.String getOrDeducePassword(org.springframework.boot.autoconfigure.security.SecurityProperties$User,org.springframework.security.crypto.password.PasswordEncoder)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor$MethodSecurityMetadataSourcePointcut: void <init>(org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor)>-><org.springframework.aop.support.StaticMethodMatcherPointcut: void <init>()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource)>-><org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: org.springframework.boot.actuate.endpoint.EndpointId of(org.springframework.core.env.Environment,java.lang.String)>
<org.springframework.boot.actuate.endpoint.EndpointId: void logWarning(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>-><org.springframework.context.support.AbstractApplicationContext: org.springframework.core.env.ConfigurableEnvironment getEnvironment()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.http.HttpEntity: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder allowCoreThreadTimeOut(boolean)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<io.undertow.server.handlers.cache.LRUCache: void add(java.lang.Object,java.lang.Object)>-><java.lang.System: long currentTimeMillis()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.CodeSigner: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration$ReactiveTraceFilterConfiguration: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(java.lang.Class,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.core.ResolvableType: java.lang.Class resolveGeneric(int[])>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.cache.CacheProperties getCachePropertiesInstance()>-><org.springframework.boot.autoconfigure.cache.CacheProperties: void setType(org.springframework.boot.autoconfigure.cache.CacheType)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: java.lang.Object[] toArray(java.lang.Object[])>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties: org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git getGit()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$1: boolean hasNext()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder threadNamePrefix(java.lang.String)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap: java.util.Set entrySet()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.EnumMap: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<javax.servlet.ServletRequestWrapper: java.util.Locale getLocale()>-><javax.servlet.ServletRequestWrapper: java.util.Locale getLocale()>
<org.springframework.boot.actuate.endpoint.EndpointId: void logWarning(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Log4jLog: void warn(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Hashtable: java.util.Set entrySet()>
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>-><java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
<com.google.common.collect.Platform: java.util.SortedMap mapsTransformEntriesSortedMap(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps: java.util.NavigableMap transformEntries(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<io.micrometer.core.util.internal.logging.JdkLogger: void warn(java.lang.String)>-><java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setUndertowServletWebServerFactory(org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory)>
<org.dom4j.tree.BackedList: void clear()>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: void mergeLo(int,int,int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setExposeSpringMacroHelpers(boolean)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer localeCharsetMappingsCustomizer()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.BuddhistChronology: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setClusterInfo(com.couchbase.client.java.cluster.ClusterInfo)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafSecurityDialectConfiguration: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.Label: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer tomcatReactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>
<org.springframework.http.server.RequestPath: org.springframework.http.server.RequestPath parse(java.net.URI,java.lang.String)>-><org.springframework.http.server.DefaultRequestPath: void <init>(java.net.URI,java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: java.sql.ResultSet executeQuery()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer getControllerEndpointsSupplier()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.IdentityHashMap: boolean isEmpty()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver reactiveCurrentSecurityContextArgumentResolver()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.LongNode: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><java.util.IdentityHashMap: boolean isEmpty()>
<org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>-><org.springframework.core.annotation.TypeMappedAnnotations: boolean isPresent(java.lang.Class)>
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><java.lang.Double: int hashCode()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.jackson.JacksonProperties)>-><java.lang.Object: void <init>()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues: int size()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void <init>(org.springframework.context.ApplicationEventPublisher)>-><org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void addMapping(java.lang.String,java.lang.Class)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket: java.lang.String getPassword()>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: org.springframework.security.core.userdetails.UserDetails getUserDetails(org.springframework.boot.autoconfigure.security.SecurityProperties$User,java.lang.String)>-><org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder roles(java.lang.String[])>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.tz.CachedDateTimeZone: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.web.servlet.error.DefaultErrorAttributes errorAttributes()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: java.lang.Class getFirstClassFound(java.util.List)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.GJChronology: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void writeBufferBlocking(boolean)>-><java.nio.Buffer: java.nio.Buffer clear()>
<org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration: org.springframework.boot.actuate.logging.LogFileWebEndpoint logFileWebEndpoint(org.springframework.beans.factory.ObjectProvider,org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties)>-><org.springframework.boot.actuate.logging.LogFileWebEndpoint: void <init>(org.springframework.boot.logging.LogFile,java.io.File)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.TemporaryVariable: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.dom4j.tree.BackedList: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer controllerEndpointDiscoverer(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.ArrayDeque$DeqSpliterator: void <init>(java.util.ArrayDeque,int,int)>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues: boolean add(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration: io.micrometer.core.instrument.binder.system.ProcessorMetrics processorMetrics()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.support.EncodedResource: boolean requiresReader()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.JumboEnumSet: java.util.EnumSet clone()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupRegistrationPolicy(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.jmx.support.MBeanRegistrationSupport: void setRegistrationPolicy(org.springframework.jmx.support.RegistrationPolicy)>
<org.springframework.boot.actuate.endpoint.Sanitizer: void <init>()>-><org.springframework.boot.actuate.endpoint.Sanitizer: void <init>(java.lang.String[])>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.hibernate.metamodel.model.domain.NavigableRole: int hashCode()>
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>-><java.util.ArrayList: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.Session: void <init>()>
<java.lang.Object: java.lang.String toString()>-><java.util.WeakHashMap$Entry: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void setRootViewName(java.lang.String)>-><org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void setRootHandler(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$1: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter)>-><java.util.AbstractSet: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.Duration: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isHealthEndpointExtension(java.lang.Object)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.undertow.server.HttpServerExchange: java.util.Map getResponseCookies()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.IdentityHashMap$Values: int size()>
<java.lang.Object: java.lang.String toString()>-><sun.font.AttributeValues: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint getFilterEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.IRScope: int hashCode()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Hashtable: boolean isEmpty()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.AbstractList: void clear()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHealthEndpointWebExtension(org.springframework.boot.actuate.health.HealthEndpointWebExtension)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$SynchronizedMap: java.util.Set entrySet()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>-><org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.io.ClassPathResource: int hashCode()>
<io.undertow.servlet.spec.SecurityActions: io.undertow.servlet.spec.HttpSessionImpl forSession(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>-><io.undertow.servlet.spec.SecurityActions$2: void <init>(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.MessageFormat: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<java.util.TreeMap$Entry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.Label: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.util.List removeIncludeEvents(java.util.List)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.EnumMap: void <init>(java.util.Map)>-><org.jruby.RubyHash: boolean isEmpty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.SimpleType: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void sendError(int,java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: boolean responseStarted()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.config.RuntimeBeanReference: int hashCode()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(org.springframework.boot.actuate.endpoint.EndpointFilter,org.springframework.boot.actuate.endpoint.ExposableEndpoint)>-><org.springframework.boot.util.LambdaSafe$InvocationResult: java.lang.Object get()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setReadTimeout(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void invoke(org.springframework.http.client.ClientHttpRequestFactory,java.lang.reflect.Method,java.lang.Object[])>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.WeakHashMap$Values: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.jruby.RubyHash: java.lang.Object get(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.boot.ansi.Ansi8BitColor: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.web.client.RestTemplate: java.util.List getMessageConverters()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.springframework.aop.framework.AopProxyUtils: java.lang.Class[] completeProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport,boolean)>-><java.lang.Class: boolean isInterface()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: io.netty.handler.codec.http.HttpHeaders access$100(org.springframework.http.server.reactive.NettyHeadersAdapter)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><java.lang.Object: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.ToStringCreator: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.SubList: java.util.Iterator iterator()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Boolean: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isExtensionExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: java.lang.Class getFilter()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.text.AttributedCharacterIterator$Attribute: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.util.calendar.Era: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection,java.util.Collection)>-><java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isExposeSpringMacroHelpers()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$1$1: int getCount()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.calendar.Era: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties getEnvironmentEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties: void setKeysToSanitize(java.lang.String[])>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasWaiters(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: boolean hasWaiters()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRequestMatcherProvider(org.springframework.boot.autoconfigure.security.servlet.RequestMatcherProvider)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><io.jsonwebtoken.impl.JwtMap: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList$Itr: void remove()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setManagementErrorEndpoint(org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementErrorEndpoint)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><org.apache.commons.logging.LogAdapter$Log4jLog: void debug(java.lang.Object,java.lang.Throwable)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void resetBuffer()>-><io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getCharacterEncoding()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<io.undertow.servlet.spec.SecurityActions: io.undertow.servlet.spec.HttpSessionImpl forSession(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: io.undertow.servlet.spec.HttpSessionImpl forSession(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><org.springframework.util.StringUtils: java.lang.String[] toStringArray(java.util.Collection)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Object: int hashCode()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration$ContextAwareServerHttpSecurity: void <init>()>-><org.springframework.security.config.web.server.ServerHttpSecurity: void <init>()>
<org.hibernate.boot.registry.selector.internal.StrategySelectorImpl: java.lang.Object resolveStrategy(java.lang.Class,java.lang.Object,java.util.concurrent.Callable,org.hibernate.boot.registry.selector.spi.StrategyCreator)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.apache.logging.log4j.spi.Provider: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.RubyHash$BaseSet: int size()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void <init>()>-><java.lang.Object: void <init>()>
<java.lang.Object: java.lang.String toString()>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: int hashCode()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.servlet.spec.ServletContextImpl: io.undertow.server.session.SessionConfig getSessionConfig()>
<org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor: void <init>(java.lang.String,org.springframework.security.access.method.MethodSecurityMetadataSource,java.lang.String)>-><org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor$MethodSecurityMetadataSourcePointcut: void <init>(org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.support.ErrorPageFilter: void <init>()>-><java.util.HashMap: void <init>()>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: java.lang.Object findValue(java.lang.annotation.Annotation[])>-><org.springframework.core.annotation.AnnotatedElementUtils: java.lang.reflect.AnnotatedElement forAnnotations(java.lang.annotation.Annotation[])>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.CurrentScope: boolean equals(java.lang.Object)>
<java.util.Spliterator: boolean hasCharacteristics(int)>-><java.util.ArrayDeque$DeqSpliterator: int characteristics()>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.annotation.Annotation,java.lang.Class)>-><org.springframework.core.annotation.AbstractMergedAnnotation: java.util.Optional synthesize(java.util.function.Predicate)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.util.TypeKey: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<java.util.Collections$ReverseComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: int size()>-><com.google.common.collect.Maps$EntrySet: int size()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$JettyAccessLogCustomizer: void <init>()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$AccessLogCustomizer: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.util.DerInputBuffer: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void updateDelegate()>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter build()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.config.web.server.ServerHttpSecurity httpSecurity()>-><org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: org.springframework.security.config.web.server.ServerHttpSecurity and()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: void clear()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setRole(int)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void closeAsync()>-><io.undertow.servlet.spec.ServletOutputStreamImpl$1: void <init>(io.undertow.servlet.spec.ServletOutputStreamImpl)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setResponseBodyAdvice(java.util.List)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: boolean startsWithArgumentClassName(java.lang.String)>-><java.util.stream.ReferencePipeline: boolean anyMatch(java.util.function.Predicate)>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Collection)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>-><org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.Period: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String substring(int)>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><io.undertow.util.Rfc6265CookieSupport: void validatePath(java.lang.String)>
<java.util.AbstractSet: int hashCode()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.core.annotation.AnnotationAwareOrderComparator: void sort(java.lang.Object[])>-><java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>
<io.undertow.server.HttpServerExchange: void addResponseCommitListener(io.undertow.server.ResponseCommitListener)>-><io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange addResponseWrapper(io.undertow.server.ConduitWrapper)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<java.util.Collections$SynchronizedCollection: void clear()>-><com.google.common.collect.Maps$Values: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.annotation.Annotation,java.lang.Class)>-><org.springframework.core.annotation.TypeMappedAnnotations: org.springframework.core.annotation.MergedAnnotation get(java.lang.Class)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><ch.qos.logback.core.subst.Node: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: int hashCode()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.EnumMap: void <init>(java.util.Map)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplying(org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$SynchronizedMap: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><io.undertow.servlet.spec.HttpSessionImpl$UnwrapSessionAction: java.lang.Object run()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.FrozenString: int hashCode()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void extendMessageConverters(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletEndpointRegistrar(org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.EnumMap$Values: void clear()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.beans.IndexedPropertyDescriptor: int hashCode()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Env: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints getEndpoints()>
<org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar springApplicationAdminRegistrar(org.springframework.beans.factory.ObjectProvider,org.springframework.core.env.Environment)>-><org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar: void <init>(java.lang.String)>
<org.springframework.cache.support.SimpleCacheManager: void <init>()>-><java.util.Collections: java.util.Set emptySet()>
<java.util.HashMap: int hash(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.lang.String: java.lang.String substring(int)>
<io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>-><java.lang.Class: java.lang.String getName()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties)>
<org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper getParameterValueMapper()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<org.springframework.security.core.userdetails.User$UserBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration: io.micrometer.core.instrument.composite.CompositeMeterRegistry compositeMeterRegistry(io.micrometer.core.instrument.Clock,java.util.List)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: void <init>(reactor.netty.http.server.HttpServerRequest,org.springframework.core.io.buffer.NettyDataBufferFactory)>-><org.springframework.http.server.reactive.AbstractServerHttpRequest: void <init>(java.net.URI,java.lang.String,org.springframework.http.HttpHeaders)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.PreparedStatement prepareStatement(java.lang.String)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.EnumMap$Values: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDataSourcePoolMetadataProvider(org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$EmptyList: int size()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$2: sun.misc.Unsafe run()>-><io.undertow.servlet.spec.ServletPrintWriterDelegate: sun.misc.Unsafe access$100()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar springApplicationAdminRegistrar(org.springframework.beans.factory.ObjectProvider,org.springframework.core.env.Environment)>
<com.google.common.collect.ForwardingConcurrentMap: boolean remove(java.lang.Object,java.lang.Object)>-><com.google.common.collect.ForwardingConcurrentMap: boolean remove(java.lang.Object,java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.util.Set entrySet()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jcodings.Encoding: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>
<org.springframework.web.servlet.config.annotation.CorsRegistry: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.XXssProtectionServerHttpHeadersWriter: void updateDelegate()>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder header(java.lang.String,java.lang.String[])>
<org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>-><org.springframework.core.annotation.MergedAnnotations: org.springframework.core.annotation.MergedAnnotations from(java.lang.reflect.AnnotatedElement)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.Hashtable$KeySet: void clear()>-><java.util.Hashtable: void clear()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection createEndpointBeans()>-><org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForAnnotationIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.WeakHashMap$Entry: int hashCode()>
<io.undertow.util.HeaderMap: void resize()>-><java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder authorities(java.util.Collection)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><org.springframework.web.servlet.view.InternalResourceViewResolver: java.lang.Class requiredViewClass()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.String)>-><io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.collect.Multimaps: java.util.Collection unmodifiableValueCollection(java.util.Collection)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultCouchbaseEnvironment(com.couchbase.client.java.env.DefaultCouchbaseEnvironment)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.GregorianCalendar: int hashCode()>
<org.springframework.boot.actuate.management.ThreadDumpEndpoint: void <init>()>-><java.lang.Object: void <init>()>
<java.lang.Object: java.lang.String toString()>-><sun.misc.Signal: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch: void <init>(io.undertow.servlet.handlers.ServletChain)>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.field.ScaledDurationField: int hashCode()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.util.DefaultPropertiesPersister: void loadFromXml(java.util.Properties,java.io.InputStream)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap: java.util.Set entrySet()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.DurationFieldType$StandardDurationFieldType: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Hashtable: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.annotation.Annotation findAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.core.annotation.AbstractMergedAnnotation: java.util.Optional synthesize(java.util.function.Predicate)>
<org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter: void <init>(java.lang.Class,java.util.Collection,java.util.Collection,java.lang.String[])>-><org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter: java.util.Set asSet(java.util.Collection)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.jersey.JerseyManagementContextConfiguration: void <init>()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: int hashCode()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void closeAsync()>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void setFlags(int)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setUseTrailingSlashMatch(boolean)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void clearFlags(int)>-><java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl: boolean compareAndSet(java.lang.Object,int,int)>
<org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void <init>()>-><org.springframework.web.reactive.result.view.ViewResolverSupport: void <init>()>
<org.springframework.core.style.ToStringCreator: org.springframework.core.style.ToStringCreator append(java.lang.String,java.lang.Object)>-><org.springframework.core.style.ToStringCreator: void printFieldSeparatorIfNecessary()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer flywayInitializer(org.flywaydb.core.Flyway,org.springframework.beans.factory.ObjectProvider)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer reactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.springframework.security.web.server.header.CacheControlServerHttpHeadersWriter: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.temporal.WeekFields: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.String: java.lang.String substring(int)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.provider.PolicyParser$PermissionEntry: int hashCode()>
<io.undertow.servlet.spec.ServletContextImpl: java.lang.String getContextPath()>-><io.undertow.servlet.api.DeploymentInfo: java.lang.String getContextPath()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: java.lang.Object[] toArray()>-><io.undertow.util.HeaderValues: java.lang.String[] toArray()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>-><java.lang.String: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void invoke(org.springframework.http.client.ClientHttpRequestFactory,java.lang.reflect.Method,java.lang.Object[])>-><org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBean(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setEnvironmentEndpoint(org.springframework.boot.actuate.env.EnvironmentEndpoint)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.sun.jmx.mbeanserver.NamedObject: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration: org.springframework.boot.actuate.health.PingHealthIndicator pingHealthContributor()>
<org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint configurationPropertiesReportEndpoint(org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties)>-><org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint: void setKeysToSanitize(java.lang.String[])>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer initializeAuthenticationProviderBeanManagerConfigurer(org.springframework.context.ApplicationContext)>-><org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer: void <init>(org.springframework.context.ApplicationContext)>
<org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter: org.springframework.security.web.server.header.ServerHttpHeadersWriter createDelegate(org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter$Mode)>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter build()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: int hashCode()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration: org.springframework.boot.actuate.web.mappings.MappingsEndpoint mappingsEndpoint(org.springframework.context.ApplicationContext,org.springframework.beans.factory.ObjectProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.expression.TypedValue: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher createDefaultRequestMacher()>-><org.springframework.security.web.server.util.matcher.AndServerWebExchangeMatcher: void <init>(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher[])>
<java.util.AbstractList: void removeRange(int,int)>-><java.util.LinkedList: java.util.ListIterator listIterator(int)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJackson2ObjectMapperBuilder(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder)>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.owasp.webgoat.xxe.Comment: java.lang.String getText()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><sun.util.calendar.ZoneInfo: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration: org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter webfluxMetrics(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsProvider)>-><org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsProvider,java.lang.String,org.springframework.boot.actuate.metrics.AutoTimer)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.FieldPosition: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration: org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer resourceHandlerRegistrationCustomizer()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyString: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBeanFactoryPostProcessor(org.springframework.beans.factory.config.BeanFactoryPostProcessor)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder customizers(java.lang.Iterable)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isExposeRequestAttributes()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$UnmodifiableCollection: void clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<java.util.Collections$EmptyList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<org.xnio.OptionMap: boolean get(org.xnio.Option,boolean)>-><org.xnio.SingleOption: java.lang.Object cast(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.context.ShutdownEndpointAutoConfiguration: org.springframework.boot.actuate.context.ShutdownEndpoint shutdownEndpoint()>-><org.springframework.boot.actuate.context.ShutdownEndpoint: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.io.InputStreamResource: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.core.io.support.EncodedResource: void <init>(org.springframework.core.io.Resource,java.nio.charset.Charset)>-><org.springframework.core.io.support.EncodedResource: void <init>(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByValue(int)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer(org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setConversionService(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.core.annotation.MergedAnnotation findMergedAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.core.annotation.TypeMappedAnnotations: org.springframework.core.annotation.MergedAnnotation get(java.lang.Class)>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: java.lang.Object findValue(java.lang.annotation.Annotation[])>-><org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: java.lang.Object extractValue(org.springframework.core.annotation.AnnotationAttributes)>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><reactor.core.publisher.Mono: reactor.core.publisher.Mono empty()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getContentType()>-><java.lang.StringBuilder: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.runtime.Arity: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray()>-><java.util.ArrayDeque: java.lang.Object[] toArray()>
<io.undertow.servlet.spec.ServletPrintWriter: void <init>(io.undertow.servlet.spec.ServletOutputStreamImpl,java.lang.String)>-><java.lang.Object: void <init>()>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: void <init>(java.lang.String,org.springframework.http.HttpMethod)>-><org.springframework.web.util.pattern.PathPatternParser: org.springframework.web.util.pattern.PathPattern parse(java.lang.String)>
<org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers platformTransactionManagerCustomizers(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers: void <init>(java.util.Collection)>
<org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointCompatibilityConfiguration: org.springframework.boot.actuate.autoconfigure.health.HealthContributorRegistryHealthIndicatorRegistryAdapter healthIndicatorRegistry(org.springframework.boot.actuate.health.HealthContributorRegistry)>-><org.springframework.boot.actuate.autoconfigure.health.HealthContributorRegistryHealthIndicatorRegistryAdapter: void <init>(org.springframework.boot.actuate.health.HealthContributorRegistry)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCacheable(boolean)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><jnr.constants.ConstantSet: int size()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(org.springframework.boot.actuate.endpoint.EndpointFilter,org.springframework.boot.actuate.endpoint.ExposableEndpoint)>-><org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback withLogger(java.lang.Class)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>-><java.lang.String: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.Parameter: int hashCode()>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><org.springframework.util.LinkedMultiValueMap: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><java.util.HashSet: void <init>()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void close()>-><org.xnio.IoUtils: void safeClose(java.io.Closeable)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.api.Deployment getDeployment()>
<java.util.stream.MatchOps: java.util.stream.TerminalOp makeRef(java.util.function.Predicate,java.util.stream.MatchOps$MatchKind)>-><java.util.stream.MatchOps$MatchOp: void <init>(java.util.stream.StreamShape,java.util.stream.MatchOps$MatchKind,java.util.function.Supplier)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.java.proxies.ArrayJavaProxy: int hashCode()>
<java.util.Collections$SynchronizedCollection: boolean isEmpty()>-><java.util.ArrayDeque: boolean isEmpty()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$EmptyList: int size()>
<java.util.Collections$SynchronizedCollection: boolean isEmpty()>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.IdentityHashMap$EntrySet: int size()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.security.config.web.server.ServerHttpSecurity: void <init>()>-><org.springframework.security.config.web.server.ServerHttpSecurity$LoginPageSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.jruby.RubyHash$BaseSet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Arrays$ArrayList: int size()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration: void <init>(org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJavaDate()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.dom4j.tree.BackedList: boolean add(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.BinaryData: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: int getCoreSize()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.EnumMap$EntrySet: void clear()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setCustomReturnValueHandlers(java.util.List)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: void <init>()>
<java.lang.Object: java.lang.String toString()>-><org.hsqldb.types.IntervalMonthData: int hashCode()>
<org.springframework.validation.AbstractBindingResult: java.util.List getAllErrors()>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: java.lang.String getOrDeducePassword(org.springframework.boot.autoconfigure.security.SecurityProperties$User,org.springframework.security.crypto.password.PasswordEncoder)>-><java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMethodValidationPostProcessor(org.springframework.validation.beanvalidation.MethodValidationPostProcessor)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>-><org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setPrefix(java.lang.String)>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(sun.security.ssl.CipherSuite)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int index(int)>-><java.lang.AssertionError: void <init>()>
<org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor: javax.servlet.ServletContext getServletContext()>-><org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext getServletContext()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration: org.springframework.boot.actuate.env.EnvironmentEndpoint environmentEndpoint(org.springframework.core.env.Environment,org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties)>-><org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties: java.lang.String[] getKeysToSanitize()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setScheduledTasksEndpoint(org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpMessageConverters(org.springframework.boot.autoconfigure.http.HttpMessageConverters)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void updateDelegate()>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder builder()>
<java.lang.Object: java.lang.String toString()>-><java.lang.invoke.LambdaFormEditor$Transform: int hashCode()>
<org.springframework.boot.info.BuildProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.BuildProperties: java.util.Properties processEntries(java.util.Properties)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setControllerEndpointDiscoverer(org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer)>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Character: int hashCode()>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: org.springframework.security.web.server.WebFilterChainProxy springSecurityWebFilterChainFilter()>-><org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: java.util.List getSecurityWebFilterChains()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.Expression: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.SubList$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.net.URI: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.Statement getStatement()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>
<java.io.ObjectInputStream$PeekInputStream: int read(byte[],int,int)>-><java.io.InputStream: int read(byte[],int,int)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.lang.ProcessEnvironment$StringEntrySet: void clear()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<sun.util.locale.provider.LocaleProviderAdapter: boolean isSupportedLocale(java.util.Locale,sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: java.lang.Class getFirstClassFound(java.util.List)>-><java.lang.Class: java.lang.Class forName(java.lang.String)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setOrderedFormContentFilter(org.springframework.boot.web.servlet.filter.OrderedFormContentFilter)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.text.AttributeEntry: java.lang.Object getKey()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer(org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer)>
<java.lang.Object: java.lang.String toString()>-><java.util.HashMap$Node: int hashCode()>
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>-><java.util.HashSet: boolean contains(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.IdentityHashMap$EntryIterator$Entry: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration: org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar servletEndpointRegistrar(org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection getEndpoints()>
<javax.servlet.ServletRequestWrapper: java.lang.Object getAttribute(java.lang.String)>-><javax.servlet.ServletRequestWrapper: java.lang.Object getAttribute(java.lang.String)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Collection values()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Collection createValues()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory,java.lang.String,java.lang.Class[])>-><java.lang.StringBuilder: void <init>()>
<io.undertow.util.SubstringMap: void put(java.lang.String,java.lang.Object)>-><io.undertow.util.SubstringMap: void doPut(java.lang.Object[],java.lang.String,java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineUsername()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>-><java.lang.Object: void <init>()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: int hashCode()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void onClose()>-><org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void stopAndReleaseWebServer()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeFile(java.lang.String,boolean)>-><java.lang.StringBuilder: void setLength(int)>
<sun.util.locale.LocaleUtils: boolean isEmpty(java.util.Set)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryReactiveHealthEndpointWebExtension cloudFoundryReactiveHealthEndpointWebExtension(org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension)>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.ConcurrentModificationException: void <init>()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setCharacterEncoding(java.lang.String)>-><io.undertow.util.HeaderMap: io.undertow.util.HeaderMap put(io.undertow.util.HttpString,java.lang.String)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.lang.ProcessEnvironment$StringEntrySet: int size()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$1: java.lang.Object run()>-><sun.security.ssl.JsseJce$1: java.lang.Void run()>
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForAnnotationIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>-><org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<io.undertow.util.HeaderValues: java.lang.String remove(int)>-><io.undertow.util.HeaderValues: java.lang.String removeFirst()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.thymeleaf.spring5.linkbuilder.webflux.SpringWebFluxLinkBuilder: void <init>()>-><org.thymeleaf.linkbuilder.StandardLinkBuilder: void <init>()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><io.undertow.server.HttpServerExchange: io.undertow.server.ServerConnection getConnection()>
<org.springframework.boot.context.properties.PropertyMapper$NullPointerExceptionSafeSupplier: java.lang.Object get()>-><org.springframework.boot.context.properties.PropertyMapper$NullPointerExceptionSafeSupplier: java.lang.Object get()>
<io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>-><io.undertow.server.session.InMemorySessionManager$SessionImpl: java.lang.String getId()>
<org.springframework.http.server.reactive.HttpHeadResponseDecorator: void <init>(org.springframework.http.server.reactive.ServerHttpResponse)>-><org.springframework.http.server.reactive.ServerHttpResponseDecorator: void <init>(org.springframework.http.server.reactive.ServerHttpResponse)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration: org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer standardJacksonObjectMapperBuilderCustomizer(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.jackson.JacksonProperties)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>-><org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Class)>
<io.micrometer.core.instrument.binder.system.ProcessorMetrics: java.lang.Class getFirstClassFound(java.util.List)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void close()>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void clearFlags(int)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$Values: java.util.Iterator iterator()>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><java.util.Spliterators$1Adapter: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>
<org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration: org.springframework.boot.autoconfigure.context.MessageSourceProperties messageSourceProperties()>-><org.springframework.boot.autoconfigure.context.MessageSourceProperties: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.RequestDispatcherImpl: void <init>(java.lang.String,io.undertow.servlet.spec.ServletContextImpl)>-><java.lang.Object: void <init>()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>
<org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,java.util.List,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection,java.util.Collection)>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.validation.BeanPropertyBindingResult: java.lang.Object getTarget()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletManagementChildContextConfiguration$JettyAccessLogCustomizer(org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$JettyAccessLogCustomizer)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar: java.lang.String cleanBasePath(java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<io.undertow.servlet.handlers.ServletPathMatchesData: void <init>(java.util.Map,io.undertow.util.SubstringMap,java.util.Map)>-><io.undertow.servlet.handlers.ServletChain: boolean isDefaultServletMapping()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.SymbolProc: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><io.undertow.util.Rfc6265CookieSupport: void validateDomain(java.lang.String)>
<java.util.Hashtable: java.lang.String toString()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>-><org.springframework.web.cors.CorsConfiguration: void setAllowedHeaders(java.util.List)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getDefaultMediaTypes()>-><org.springframework.http.MediaType: org.springframework.http.MediaType valueOf(java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: void <init>()>-><org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter: org.springframework.security.web.server.header.ServerHttpHeadersWriter createDelegate(org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy)>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder builder()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void resetBuffer()>-><org.xnio.Bits: boolean allAreClear(int,int)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.actuate.health.HealthStatusHttpMapper: void setStatusMapping(java.util.Map)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource: void <init>()>
<com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.core.annotation.AbstractMergedAnnotation: java.util.Optional getValue(java.lang.String,java.lang.Class)>-><org.springframework.core.annotation.TypeMappedAnnotation: java.lang.Object getAttributeValue(java.lang.String,java.lang.Class)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyHash: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<io.micrometer.core.util.internal.logging.LocationAwareSlf4JLogger: void warn(java.lang.String)>-><io.micrometer.core.util.internal.logging.LocationAwareSlf4JLogger: void log(int,java.lang.String)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.view.BeanNameViewResolver: void <init>()>-><org.springframework.web.context.support.WebApplicationObjectSupport: void <init>()>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>-><javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest getRequest()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeFile(java.lang.String,boolean)>-><io.undertow.server.handlers.resource.ResourceManager$1: io.undertow.server.handlers.resource.Resource getResource(java.lang.String)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><io.undertow.util.HeaderValues: boolean remove(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void sendError(int,java.lang.String)>-><io.undertow.util.AbstractAttachable: java.lang.Object getAttachment(io.undertow.util.AttachmentKey)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.util.Set getExtensions()>
<org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration: org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer metricsRestTemplateCustomizer(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider,org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties)>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client: org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client$ClientRequest getRequest()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void <init>()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown: void <init>()>
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setUrl(java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.Collections$SingletonList: int size()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.util.List getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter: io.netty.handler.codec.http.HttpHeaders access$100(org.springframework.http.server.reactive.NettyHeadersAdapter)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void sendError(int,java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setSuffix(java.lang.String)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void <init>(java.lang.String)>-><org.springframework.format.support.DefaultFormattingConversionService: void addDefaultFormatters(org.springframework.format.FormatterRegistry)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ast.SymbolNode: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.web.authentication.WebAuthenticationDetails: int hashCode()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.Statement getStatement()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.AttributeAccessorSupport: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAutowiredWebSecurityConfigurersIgnoreParents(org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents)>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setForwardedHeaderTransformer(org.springframework.web.server.adapter.ForwardedHeaderTransformer)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyHash: boolean isEmpty()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void <init>(java.time.Duration,java.time.Duration,java.lang.Boolean)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository clientRegistrationRepository(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>
<java.lang.Object: java.lang.String toString()>-><java.net.Inet4Address: int hashCode()>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPathMappedEndpoints(org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.SubList$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJsr310()>-><org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void setDateFormatter(java.time.format.DateTimeFormatter)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ContentTypeInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.IdentityHashMap$KeySet: void clear()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.jruby.RubyArray: java.lang.Object[] toArray()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Language language(org.springframework.web.servlet.LocaleResolver)>
<java.util.AbstractCollection: void clear()>-><io.micrometer.shaded.org.pcollections.IntTree$EntryIterator: void remove()>
<java.text.AttributeEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>-><com.google.common.collect.Multimaps$UnmodifiableMultimap$1: void <init>(com.google.common.collect.Multimaps$UnmodifiableMultimap)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureMessageConverters(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<io.undertow.servlet.api.ServletInfo: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration: org.springframework.boot.actuate.management.ThreadDumpEndpoint dumpEndpoint()>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.ProcessEnvironment$StringEntrySet: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Locale: boolean equals(java.lang.Object)>
<synthetic.method.HttpSessionImpl: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHealthEndpointGroups(org.springframework.boot.actuate.health.HealthEndpointGroups)>
<com.google.common.collect.Maps$EntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set keySet()>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Collection)>-><org.springframework.security.core.userdetails.User: java.lang.String getUsername()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler methodSecurityExpressionHandler()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>-><com.google.common.collect.Multimaps$Keys: int distinctElements()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.HashMap: boolean isEmpty()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.config.web.server.ServerHttpSecurity httpSecurity()>-><org.springframework.security.config.web.server.ServerHttpSecurity: org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec headers()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultWebFluxTagsProvider(org.springframework.boot.actuate.metrics.web.reactive.server.DefaultWebFluxTagsProvider)>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setPathPrefixes(java.util.Map)>-><java.util.LinkedHashMap: void <init>(java.util.Map)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.lang.StringBuilder: void <init>()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setStringHttpMessageConverter(org.springframework.http.converter.StringHttpMessageConverter)>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties healthEndpointProperties(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupDomain(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.BeanNameViewResolver beanNameViewResolver()>-><org.springframework.web.servlet.view.BeanNameViewResolver: void setOrder(int)>
<org.springframework.security.access.method.AbstractMethodSecurityMetadataSource: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean isEmpty()>
<java.util.Hashtable: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.thymeleaf.spring5.SpringWebFluxTemplateEngine getISpringWebFluxTemplateEngine()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext getManagementServletContext()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.jruby.specialized.RubyArrayTwoObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.specialized.RubyArraySpecialized: boolean packed()>
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$InvocationResult invoke(java.lang.Object,java.util.function.Supplier)>-><org.springframework.boot.util.LambdaSafe$InvocationResult: org.springframework.boot.util.LambdaSafe$InvocationResult of(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setTemplateEngine(org.thymeleaf.spring5.ISpringTemplateEngine)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: org.springframework.security.core.userdetails.UserDetails getUserDetails(org.springframework.boot.autoconfigure.security.SecurityProperties$User,java.lang.String)>-><org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder password(java.lang.String)>
<java.util.AbstractSet: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: boolean isCommitted()>-><io.undertow.servlet.spec.HttpServletResponseImpl: boolean responseStarted()>
<org.springframework.core.convert.support.ObjectToOptionalConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getCharacterEncoding()>-><io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.api.Deployment getDeployment()>
<org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status: void <init>()>-><java.util.ArrayList: void <init>()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><java.lang.Integer: int parseInt(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setThreadPoolTaskExecutor(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.server.handlers.cache.LRUCache: java.lang.Object get(java.lang.Object)>-><io.undertow.server.handlers.cache.LRUCache$CacheEntry: long getExpires()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyFloat: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.boot.model.relational.Namespace: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><org.jruby.RubyArray: boolean isEmpty()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.javasupport.JavaClass: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.security.context.DelegatingApplicationListener: void <init>()>-><java.lang.Object: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$2$1: void accept(java.lang.Object)>
<com.google.common.collect.Multimaps: java.util.Collection unmodifiableValueCollection(java.util.Collection)>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.io.ClassPathResource: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray(java.lang.Object[])>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void <init>(org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubySymbol: boolean equals(java.lang.Object)>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.TimestampData: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.passes.CompilerPass: int hashCode()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableMap: boolean isEmpty()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket: java.lang.String getPassword()>
<java.util.stream.DistinctOps$1$2: void accept(java.lang.Object)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebFluxEndpointHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><java.util.ArrayList: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.Collections$SynchronizedCollection: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics classLoaderMetrics()>
<io.undertow.util.QueryParameterUtils: java.util.Map mergeQueryParametersWithNewQueryString(java.util.Map,java.lang.String,java.lang.String)>-><java.util.ArrayDeque: void <init>(java.util.Collection)>
<sun.security.ssl.SSLSessionContextImpl$1: java.lang.Object run()>-><sun.security.ssl.SSLSessionContextImpl$1: java.lang.String run()>
<java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.requests.Requests: void <init>(org.owasp.webwolf.requests.WebWolfTraceRepository,com.fasterxml.jackson.databind.ObjectMapper)>
<org.springframework.security.config.web.server.ServerHttpSecurity$ExceptionHandlingSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><java.lang.Object: void <init>()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.server.handlers.cache.LRUCache: void add(java.lang.Object,java.lang.Object)>-><io.undertow.server.handlers.cache.LRUCache: void bumpAccess(io.undertow.server.handlers.cache.LRUCache$CacheEntry)>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration: org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean freeMarkerConfiguration()>-><org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.Expression: boolean equals(java.lang.Object)>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.Year: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.CompositeType: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties getHttpTracePropertiesInstance()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.HashMap$EntrySet: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.field.PreciseDurationField: int hashCode()>
<java.util.TreeMap$KeySet: void clear()>-><java.util.TreeMap: void clear()>
<org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementChildContextConfiguration$ReactiveManagementWebServerFactoryCustomizer reactiveManagementWebServerFactoryCustomizer(org.springframework.beans.factory.ListableBeanFactory)>-><org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementChildContextConfiguration$ReactiveManagementWebServerFactoryCustomizer: void <init>(org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementChildContextConfiguration,org.springframework.beans.factory.ListableBeanFactory)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.cglib.core.MethodInfo: int hashCode()>
<org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: void <init>()>-><org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: java.lang.Class requiredViewClass()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><org.springframework.core.io.buffer.NettyDataBufferFactory: void <init>(io.netty.buffer.ByteBufAllocator)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.endpoint.web.EndpointMapping: void <init>(java.lang.String)>
<org.springframework.boot.validation.MessageInterpolatorFactory: void <init>()>-><java.lang.Object: void <init>()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.cglib.core.EmitUtils: void stringSwitchHelper(org.springframework.cglib.core.CodeEmitter,java.util.List,org.springframework.cglib.core.ObjectSwitchCallback,org.springframework.asm.Label,org.springframework.asm.Label,int)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder roles(java.lang.String[])>-><org.springframework.util.Assert: void isTrue(boolean,java.util.function.Supplier)>
<java.lang.Object: java.lang.String toString()>-><java.security.cert.Certificate: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.jar.Attributes: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<org.springframework.security.web.server.authentication.logout.LogoutWebFilter: void <init>()>-><org.springframework.security.web.server.authentication.logout.RedirectServerLogoutSuccessHandler: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJavaDate()>-><org.springframework.format.datetime.DateFormatter: void <init>(java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>-><sun.security.ssl.JsseJce$1: java.lang.Object run()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration$ReactiveTraceFilterConfiguration: org.springframework.boot.actuate.web.trace.reactive.HttpTraceWebFilter httpTraceWebFilter(org.springframework.boot.actuate.trace.http.HttpTraceRepository,org.springframework.boot.actuate.trace.http.HttpExchangeTracer,org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties)>
<org.owasp.webwolf.WebWolf: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.StackTraceElement: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.Collections: java.util.Set emptySet()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><jnr.constants.ConstantSet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$UnmodifiableMap: boolean isEmpty()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyMatchData: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.api.ServletInfo: void <init>(java.lang.String,java.lang.Class)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: void <init>()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.ReduceOps$3ReducingSink: void accept(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.ScopeModule: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>
<org.springframework.security.web.authentication.WebAuthenticationDetails: boolean equals(java.lang.Object)>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String getRemoteAddress()>
<java.lang.Object: java.lang.String toString()>-><java.time.ZoneId: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.security.authentication.AbstractUserDetailsReactiveAuthenticationManager: void <init>()>-><org.springframework.security.crypto.factory.PasswordEncoderFactories: org.springframework.security.crypto.password.PasswordEncoder createDelegatingPasswordEncoder()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: boolean isEmpty()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool: int getSize()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<java.util.AbstractList: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.Collections$UnmodifiableCollection: int size()>
<io.undertow.servlet.handlers.ServletPathMatchesData: void <init>(java.util.Map,io.undertow.util.SubstringMap,java.util.Map)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<java.security.Provider: void implPutAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineUrl()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider,java.lang.String,org.springframework.boot.actuate.metrics.AutoTimer)>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.util.DerInputBuffer: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters$1: java.util.List defaultMessageConverters()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: void <init>()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps: java.util.Collection unmodifiableValueCollection(java.util.Collection)>-><java.util.Collections: java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.javasupport.JavaObject: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setGitInfoContributor(org.springframework.boot.actuate.info.GitInfoContributor)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void setFlags(int)>-><java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl: boolean compareAndSet(java.lang.Object,int,int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: java.util.List getSecurityWebFilterChains()>-><org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object)>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.prepost.PrePostAdviceReactiveMethodInterceptor securityMethodInterceptor(org.springframework.security.access.method.AbstractMethodSecurityMetadataSource,org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>-><org.springframework.security.access.prepost.PrePostAdviceReactiveMethodInterceptor: void <init>(org.springframework.security.access.method.MethodSecurityMetadataSource,org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice,org.springframework.security.access.prepost.PostInvocationAuthorizationAdvice)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String[] getViewNames()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isExtensionExposed(java.lang.Object)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isCloudFoundryHealthEndpointExtension(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaProperties: java.lang.Boolean getOpenInView()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.stream.Collectors: java.util.stream.Collector toMap(java.util.function.Function,java.util.function.Function)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setCharacterEncoding(java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: boolean isCommitted()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getCharacterEncoding()>-><java.nio.charset.Charset: java.lang.String name()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.net.URL: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.security.context.DelegatingApplicationListener: void <init>()>-><java.util.concurrent.CopyOnWriteArrayList: void <init>()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void responseDone()>-><io.undertow.servlet.spec.ServletContextImpl: void updateSessionAccessTime(io.undertow.server.HttpServerExchange)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.ServletPathMatches: boolean isFilterApplicable(java.lang.String,java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.http.server.DefaultRequestPath: void <init>(java.net.URI,java.lang.String)>-><java.net.URI: java.lang.String getRawPath()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.HsqlNameManager$HsqlName: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryInfoEndpointWebExtension cloudFoundryInfoEndpointWebExtension(org.springframework.boot.info.GitProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.actuate.info.InfoEndpoint: void <init>(java.util.List)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebFluxEndpointHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties getLogFileWebEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties: void setExternalFile(java.io.File)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration: org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter webfluxMetrics(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsProvider)>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties: org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web getWeb()>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><java.lang.String: java.lang.String valueOf(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><com.google.common.collect.Maps$Values: boolean isEmpty()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: boolean isManagementExtensionsPresent()>-><io.micrometer.core.util.internal.logging.Slf4JLogger: void warn(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.awt.Color: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.CharacterType: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: int hashCode()>
<io.undertow.util.HeaderValues: void clear()>-><io.undertow.util.HeaderValues: void clearInternal()>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredControllerEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><java.util.Collections: java.util.List emptyList()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer(org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatchesData: void <init>(java.util.Map,io.undertow.util.SubstringMap,java.util.Map)>-><io.undertow.servlet.handlers.ServletPathMatch: void <init>(io.undertow.servlet.handlers.ServletChain,java.lang.String,boolean)>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><java.lang.ref.Reference: java.lang.Object get()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.EnumMap: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String getAlphaNumerics(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.cache.support.SimpleCacheManager: void <init>()>-><org.springframework.cache.support.AbstractCacheManager: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><ch.qos.logback.core.status.StatusBase: int hashCode()>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>-><org.springframework.jdbc.core.JdbcTemplate: void setFetchSize(int)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: void <init>(javax.servlet.ServletContext)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.IdentityHashMap$EntryIterator$Entry: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration: io.micrometer.core.instrument.binder.system.UptimeMetrics uptimeMetrics()>-><io.micrometer.core.instrument.binder.system.UptimeMetrics: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.beans.PropertyDescriptor: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari: com.zaxxer.hikari.HikariDataSource dataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties)>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void extendMessageConverters(java.util.List)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void extendMessageConverters(java.util.List)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService: void <init>(org.springframework.web.reactive.function.client.WebClient$Builder,java.lang.String,boolean)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.AttributedString$AttributedStringIterator: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.Instant: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.api.ServletInfo: boolean isRequireWelcomeFileMapping()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: int hashCode()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.core.annotation.TypeMappedAnnotation: org.springframework.core.annotation.MergedAnnotation from(java.lang.Object,java.lang.annotation.Annotation)>-><org.springframework.core.annotation.AnnotationTypeMappings: org.springframework.core.annotation.AnnotationTypeMapping get(int)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.ClobDataID: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration: org.springframework.boot.actuate.env.EnvironmentEndpoint environmentEndpoint(org.springframework.core.env.Environment,org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties)>-><org.springframework.boot.actuate.env.EnvironmentEndpoint: void setKeysToSanitize(java.lang.String[])>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.headius.invokebinder.Signature: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.LinkedHashMap$LinkedEntrySet: void clear()>
<org.springframework.boot.actuate.endpoint.EndpointId: void logWarning(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.format.DecimalStyle: int hashCode()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>
<org.springframework.http.server.reactive.ReactorServerHttpResponse: void <init>(reactor.netty.http.server.HttpServerResponse,org.springframework.core.io.buffer.DataBufferFactory)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: void <init>(io.netty.handler.codec.http.HttpHeaders)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.AbstractList: void clear()>-><java.util.Arrays$ArrayList: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<org.hibernate.tool.schema.internal.Helper: org.hibernate.tool.schema.spi.ScriptTargetOutput interpretScriptTargetSetting(java.lang.Object,org.hibernate.boot.registry.classloading.spi.ClassLoaderService,java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.web.authentication.WebAuthenticationDetails: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor methodSecurityInterceptor(org.springframework.security.access.method.AbstractMethodSecurityMetadataSource)>-><org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor: void <init>(java.lang.String,org.springframework.security.access.method.MethodSecurityMetadataSource,java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: int size()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler build()>-><org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void <init>()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory undertowServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: java.util.Collection getBuilderCustomizers()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><org.springframework.util.Assert: void state(boolean,java.util.function.Supplier)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatchesData: void <init>(java.util.Map,io.undertow.util.SubstringMap,java.util.Map)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Collection createValues()>-><com.google.common.collect.Maps$Values: void <init>(java.util.Map)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration: org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter webfluxMetrics(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsProvider)>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest: java.lang.String getMetricName()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List extractPartConverters(org.springframework.http.converter.FormHttpMessageConverter)>-><org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.AbstractSet: int hashCode()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration: org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider dispatcherServletMappingDescriptionProvider()>-><org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider: void <init>()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.core.style.ToStringCreator: org.springframework.core.style.ToStringCreator append(java.lang.String,java.lang.Object)>-><org.springframework.core.style.DefaultToStringStyler: void styleField(java.lang.StringBuilder,java.lang.String,java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.AbstractCollection: void clear()>
<java.util.EnumMap: void <init>(java.util.Map)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><java.util.TreeMap: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: java.util.Optional getWelcomePage()>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.springframework.web.servlet.HttpServletBean: void setEnvironment(org.springframework.core.env.Environment)>-><org.springframework.util.Assert: void isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.springframework.boot.context.properties.PropertyMapper$NullPointerExceptionSafeSupplier: void <init>(java.util.function.Supplier)>-><java.lang.Object: void <init>()>
<java.util.AbstractList: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.util.Collections$UnmodifiableList: java.lang.Object get(int)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter createRequestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletPrintWriter: void <init>(io.undertow.servlet.spec.ServletOutputStreamImpl,java.lang.String)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration: void <init>()>-><org.springframework.security.authentication.DelegatingReactiveAuthenticationManager: void <init>(org.springframework.security.authentication.ReactiveAuthenticationManager[])>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><org.springframework.util.MimeType: java.lang.String toString()>
<org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.BeanWrapper createBeanWrapper()>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$1: java.lang.Object next()>
<java.security.Provider: void implPutAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.boot.web.servlet.FilterRegistrationBean: void <init>(javax.servlet.Filter,org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.sun.beans.WildcardTypeImpl: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.AbstractMap$1: int size()>
<org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint: void <init>(org.springframework.context.ConfigurableApplicationContext)>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.config.annotation.CorsRegistry: void <init>()>-><java.util.ArrayList: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<io.undertow.server.handlers.cache.LRUCache: void bumpAccess(io.undertow.server.handlers.cache.LRUCache$CacheEntry)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties healthEndpointProperties(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>-><org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties: java.util.Map getHttpMapping()>
<org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyRegistrationConfiguration: org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository relyingPartyRegistrationRepository(org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyProperties)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain servletChain(io.undertow.server.HttpHandler,io.undertow.servlet.core.ManagedServlet,java.util.Map,java.lang.String,io.undertow.servlet.api.DeploymentInfo,boolean,javax.servlet.http.MappingMatch,java.lang.String)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.Class getFilter(java.lang.Class)>-><org.springframework.core.annotation.MergedAnnotations: org.springframework.core.annotation.MergedAnnotations from(java.lang.reflect.AnnotatedElement,org.springframework.core.annotation.MergedAnnotations$SearchStrategy)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.springframework.core.style.DefaultToStringStyler: void styleFieldStart(java.lang.StringBuilder,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer(org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)>
<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: java.time.format.DateTimeFormatterBuilder$PrefixTree getTree(java.time.format.DateTimeParseContext)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.LocalVariable: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: java.io.PrintWriter getWriter()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: org.springframework.web.servlet.config.annotation.InterceptorRegistration addInterceptor(org.springframework.web.servlet.HandlerInterceptor)>-><org.springframework.web.servlet.config.annotation.InterceptorRegistration: void <init>(org.springframework.web.servlet.HandlerInterceptor)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.format.InternalParserDateTimeParser: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: java.lang.Class getFirstClassFound(java.util.List)>-><java.util.AbstractList$Itr: boolean hasNext()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><java.lang.String: char charAt(int)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: java.lang.String getSuffix()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.function.Predicate: java.util.function.Predicate and(java.util.function.Predicate)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: void <init>()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>-><java.lang.Enum: java.lang.String name()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineUsername()>-><org.springframework.boot.jdbc.EmbeddedDatabaseConnection: boolean isEmbedded(java.lang.String)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$KeySet: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMessageSourceProperties(org.springframework.boot.autoconfigure.context.MessageSourceProperties)>
<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>-><java.util.Map: void forEach(java.util.function.BiConsumer)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<io.micrometer.core.instrument.binder.system.ProcessorMetrics: void <init>(java.lang.Iterable)>-><java.lang.Object: void <init>()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryInfoEndpointWebExtension cloudFoundryInfoEndpointWebExtension(org.springframework.boot.info.GitProperties,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFilter(javax.servlet.Filter)>
<io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics: void <init>(java.lang.Iterable)>-><java.lang.Object: void <init>()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.jruby.javasupport.binding.InterfaceInitializer: void setupInterfaceMethods(java.lang.Class,org.jruby.javasupport.binding.Initializer$State)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<java.lang.Object: java.lang.String toString()>-><java.time.LocalTime: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><jnr.constants.ConstantSet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: int hashCode()>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.security.Provider$Service: java.lang.Object newInstance(java.lang.Object)>-><java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
<io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics: void <init>(java.lang.Iterable)>-><java.lang.Object: void <init>()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: void <init>()>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void <init>()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter,org.springframework.http.server.reactive.NettyHeadersAdapter$1)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object buildLazyResolutionProxy(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>-><org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$1: void <init>(org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver,org.springframework.beans.factory.config.DependencyDescriptor,org.springframework.beans.factory.support.DefaultListableBeanFactory,java.lang.String)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.IdentityHashMap$Values: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.Instant: int hashCode()>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void setMaxAge(java.time.Duration)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration: void <init>()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.web.PathMapper: java.lang.String getRootPath(java.util.List,org.springframework.boot.actuate.endpoint.EndpointId)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.stream.ReferencePipeline: boolean anyMatch(java.util.function.Predicate)>-><java.util.stream.MatchOps: java.util.stream.TerminalOp makeRef(java.util.function.Predicate,java.util.stream.MatchOps$MatchKind)>
<org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter build()>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter: void <init>(org.springframework.http.HttpHeaders)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.persist.CachedObjectBase: int hashCode()>
<java.util.Collections$UnmodifiableCollection: void clear()>-><java.lang.UnsupportedOperationException: void <init>()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer errorPageCustomizer(org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Integer: int hashCode()>
<org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.awt.Point: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher createDefaultRequestMacher()>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: void setIgnoredMediaTypes(java.util.Set)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.LocalTime: int hashCode()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setColor(java.lang.String)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.springframework.boot.web.servlet.DynamicRegistrationBean: java.lang.String getOrDeduceName(java.lang.Object)>-><org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>
<org.springframework.boot.actuate.security.AuthenticationAuditListener$WebAuditListener: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multimaps$UnmodifiableMultimap$1: java.util.Collection apply(java.util.Collection)>-><com.google.common.collect.Multimaps: java.util.Collection access$000(java.util.Collection)>
<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.util.QueryParameterUtils: void handleQueryParameter(java.lang.String,java.util.Map,int,int,int,java.lang.String,boolean)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: java.lang.String path(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.springframework.boot.actuate.trace.http.HttpTrace: org.springframework.boot.actuate.trace.http.HttpTrace$Request getRequest()>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder awaitTermination(boolean)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><java.lang.Boolean: boolean booleanValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setUptimeMetrics(io.micrometer.core.instrument.binder.system.UptimeMetrics)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Collection)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getConnect()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDispatcherServletsMappingDescriptionProvider(org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider)>
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.core.annotation.AbstractMergedAnnotation: java.lang.String getString(java.lang.String)>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.Sink$OfInt: void accept(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.lang.String getMethodValue()>-><reactor.netty.http.server.HttpServerRequest: io.netty.handler.codec.http.HttpMethod method()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration: org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter stringOrNumberMigrationVersionConverter()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter: void <init>(org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$1)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointFiltered(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(org.springframework.boot.actuate.endpoint.EndpointFilter,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.HsqlNameManager$HsqlName: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><java.lang.Boolean: int hashCode()>
<org.springframework.core.style.DefaultToStringStyler: void styleField(java.lang.StringBuilder,java.lang.String,java.lang.Object)>-><org.springframework.core.style.DefaultToStringStyler: void styleFieldStart(java.lang.StringBuilder,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyThread: int hashCode()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService getViewservice()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration: void <init>()>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$1: void <init>(org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter)>
<org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter: org.springframework.security.web.server.header.ServerHttpHeadersWriter createDelegate(org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy)>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder header(java.lang.String,java.lang.String[])>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: boolean isEmpty()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.PropertyName: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter controllerExposeExcludePropertyEndpointFilter()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties: org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure getExposure()>
<org.hibernate.ConnectionAcquisitionMode: org.hibernate.ConnectionAcquisitionMode interpret(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<sun.text.normalizer.ICUBinary: byte[] readHeader(java.io.InputStream,byte[],sun.text.normalizer.ICUBinary$Authenticate)>-><sun.net.idn.StringPrepDataReader: boolean isDataVersionAcceptable(byte[])>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.servlet.api.ServletInfo: java.util.List getHandlerChainWrappers()>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<org.springframework.boot.context.properties.PropertyMapper$CachingSupplier: void <init>(java.util.function.Supplier)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics jvmMemoryMetrics()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.ParsePosition: int hashCode()>
<io.undertow.util.QueryParameterUtils: void handleQueryParameter(java.lang.String,java.util.Map,int,int,int,java.lang.String,boolean)>-><java.util.ArrayDeque: void <init>(int)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void <init>()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool: void <init>()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyObject: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMapping,java.util.Collection,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.cors.CorsConfiguration,boolean)>-><org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping: void <init>()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Maps$EntrySet: void clear()>-><com.google.common.collect.Maps$TransformedEntriesMap: void clear()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.boot.model.relational.Namespace: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.asm.Handle: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration$ServletTraceFilterConfiguration: org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter httpTraceFilter(org.springframework.boot.actuate.trace.http.HttpTraceRepository,org.springframework.boot.actuate.trace.http.HttpExchangeTracer)>-><org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter: void <init>(org.springframework.boot.actuate.trace.http.HttpTraceRepository,org.springframework.boot.actuate.trace.http.HttpExchangeTracer)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: java.sql.ResultSet executeQuery()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJvmThreadMetrics(io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics)>
<org.springframework.cglib.proxy.Enhancer: void emitMethods(org.springframework.cglib.core.ClassEmitter,java.util.List,java.util.List)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration: org.springframework.security.authentication.DefaultAuthenticationEventPublisher authenticationEventPublisher(org.springframework.context.ApplicationEventPublisher)>-><org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void <init>(org.springframework.context.ApplicationEventPublisher)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isHealthEndpointExtension(java.lang.Object)>-><org.springframework.core.annotation.AbstractMergedAnnotation: java.util.Optional getValue(java.lang.String,java.lang.Class)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(java.lang.Class,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>
<io.micrometer.core.util.internal.logging.Slf4JLogger: void warn(java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void addMapping(java.lang.String,java.lang.Class)>-><java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Long: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.net.URL: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.ListMultimap delegate()>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: com.google.common.collect.Multimap delegate()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.runtime.Block: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.ObjectInstance: int hashCode()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties healthEndpointProperties(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>-><org.springframework.boot.actuate.autoconfigure.health.HealthProperties: org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status getStatus()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<io.micrometer.core.util.internal.logging.JdkLogger: void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.util.logging.Logger: void log(java.util.logging.LogRecord)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: void close()>
<org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int)>-><java.util.Collections$UnmodifiableCollection: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.io.InputStreamResource: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<java.lang.reflect.WeakCache$Factory: java.lang.Object get()>-><com.google.common.collect.ForwardingConcurrentMap: boolean remove(java.lang.Object,java.lang.Object)>
<io.undertow.util.AbstractAttachable: java.lang.Object putAttachment(io.undertow.util.AttachmentKey,java.lang.Object)>-><io.undertow.util.AbstractAttachable: java.util.Map createAttachmentMap()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.TreeSet: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.HsqlException: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.concurrent.ArrayBlockingQueue: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setCallableInterceptors(java.util.List)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.WebGoat: org.owasp.webgoat.session.UserSessionData userSessionData()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><io.micrometer.core.instrument.Tags$ArrayIterator: boolean hasNext()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String getSessionId()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$4$1: void accept(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String,int,boolean)>-><io.undertow.util.SubstringMap: boolean doEquals(java.lang.String,java.lang.String,int)>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues: int size()>
<java.util.Collections$SetFromMap: boolean add(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ListableBeanFactory)>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void stopAndReleaseWebServer()>-><java.lang.IllegalStateException: void <init>(java.lang.Throwable)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.Period: int hashCode()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings)>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.sql.Timestamp: int hashCode()>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.Collections$UnmodifiableRandomAccessList: java.util.List subList(int,int)>
<org.springframework.boot.web.servlet.support.SpringBootServletInitializer: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setPathPrefixes(java.util.Map)>-><java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,boolean,java.lang.String[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.jruby.javasupport.JavaClass: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.Sink$OfInt: void accept(java.lang.Object)>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.util.AbstractAttachable: java.lang.Object getAttachment(io.undertow.util.AttachmentKey)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: boolean isStoreByValue()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.UnboxedFixnum: int hashCode()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.springframework.core.DecoratingClassLoader: boolean isExcluded(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setOrder(int)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter: void <init>(org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$1)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter: void <init>()>
<io.undertow.servlet.spec.SecurityActions: io.undertow.servlet.spec.HttpSessionImpl forSession(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>-><java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.lang.String: java.lang.String substring(int,int)>
<com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.HashMap$EntrySet: int size()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setAsyncRequestTimeout(long)>-><java.lang.Long: java.lang.Long valueOf(long)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1: javax.management.MBeanServer getMBeanServer()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: org.springframework.boot.actuate.endpoint.EndpointId getId()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<io.undertow.servlet.handlers.ServletRequestContext: io.undertow.servlet.handlers.ServletRequestContext current()>-><java.lang.SecurityManager: void checkPermission(java.security.Permission)>
<io.micrometer.core.instrument.binder.system.ProcessorMetrics: void <init>(java.lang.Iterable)>-><io.micrometer.core.instrument.binder.system.ProcessorMetrics: java.lang.reflect.Method detectMethod(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.LinkedList: void clear()>
<org.springframework.core.style.DefaultToStringStyler: void styleValue(java.lang.StringBuilder,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.undertow.servlet.api.DeploymentInfo: int getDefaultCookieVersion()>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration$OAuth2ClasspathGuard: boolean shouldConfigure(org.springframework.context.ApplicationContext)>-><org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>
<java.lang.Object: java.lang.String toString()>-><java.net.URL: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<com.google.common.collect.Maps$TransformedEntriesMap: void clear()>-><com.google.common.collect.Maps$TransformedEntriesMap: void clear()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$EmptySet: int size()>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.web.server.adapter.ForwardedHeaderTransformer forwardedHeaderTransformer()>-><org.springframework.web.server.adapter.ForwardedHeaderTransformer: void <init>()>
<org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties: void <init>()>-><org.springframework.boot.actuate.trace.http.Include: java.util.Set defaultIncludes()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration: org.springframework.cache.support.NoOpCacheManager cacheManager()>
<java.lang.Object: java.lang.String toString()>-><java.time.LocalDateTime: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSortHandlerMethodArgumentResolverCustomizer(org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.x509.GeneralName: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void addMapping(java.lang.String,java.lang.Class)>-><java.lang.Class: java.lang.String getName()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object get(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: boolean equals(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.jruby.RubyHash$BaseSet: java.util.Iterator iterator()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.io.PrintWriter getWriter()>-><io.undertow.servlet.spec.HttpServletResponseImpl: void createOutputStream()>
<org.springframework.boot.actuate.health.HealthStatusHttpMapper: void <init>()>-><org.springframework.boot.actuate.health.HealthStatusHttpMapper: void setupDefaultStatusMapping()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJsr310()>-><java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withResolverStyle(java.time.format.ResolverStyle)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSpringResourceTemplateResolver(org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver)>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch handleMatch(java.lang.String,io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,int)>-><io.undertow.servlet.handlers.ServletChain: io.undertow.servlet.core.ManagedServlet getManagedServlet()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: void <init>()>-><org.springframework.security.authentication.DelegatingReactiveAuthenticationManager: void <init>(org.springframework.security.authentication.ReactiveAuthenticationManager[])>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.Nodes$FixedNodeBuilder: void accept(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><org.jruby.util.collections.WeakHashSet: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration: org.springframework.boot.actuate.audit.AuditEventsEndpoint auditEventsEndpoint(org.springframework.boot.actuate.audit.AuditEventRepository)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><java.time.Period: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$UnmodifiableMap: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter controllerExposeExcludePropertyEndpointFilter()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure: java.util.Set getInclude()>
<io.undertow.util.HeaderValues: boolean remove(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean removeFirstOccurrence(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: int size()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><synthetic.method.ServletResponseImpl: void <init>()>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><java.lang.CharSequence$1CharIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void <init>(java.lang.String)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>-><org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder$PublicKeyReactiveJwtDecoderBuilder withPublicKey(java.security.interfaces.RSAPublicKey)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.core.ManagedServlets: io.undertow.servlet.handlers.ServletHandler getServletHandler(java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.JsonViewRequestBodyAdvice: void <init>()>
<java.lang.Object: java.lang.String toString()>-><java.security.CodeSigner: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><javax.management.MBeanInfo: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletCookieAdaptor: java.lang.String getName()>-><javax.servlet.http.Cookie: java.lang.String getName()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.invoke.MethodType: int hashCode()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform get()>-><java.lang.Class: java.lang.ClassLoader getClassLoader()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isAllowRequestOverride()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.math.BigInteger: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.AbstractMap: boolean isEmpty()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider findProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.SimpleDateFormat: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeServlet(java.lang.String,boolean)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter: void <init>()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown getShutdown()>
<org.springframework.boot.autoconfigure.mongo.MongoProperties: java.lang.String getMongoClientDatabase()>-><com.mongodb.MongoClientURI: void <init>(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.Type: int hashCode()>
<org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: org.springframework.boot.actuate.endpoint.web.annotation.ExposableControllerEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet: boolean isEmpty()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.context.ApplicationContext)>
<org.thymeleaf.extras.java8time.dialect.Java8TimeDialect: void <init>()>-><org.thymeleaf.dialect.AbstractDialect: void <init>(java.lang.String)>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><org.springframework.validation.AbstractBindingResult: int getErrorCount()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues$1: void remove()>-><java.lang.IllegalStateException: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping createRequestMappingHandlerMapping()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.stream.Nodes$SizedCollectorTask: void <init>(java.util.Spliterator,java.util.stream.PipelineHelper,int)>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Hashtable$KeySet: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void <init>()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String determineHighestPriorityCandidate(java.util.Map,java.lang.Class)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration: org.springframework.boot.actuate.health.HealthEndpoint healthEndpoint(org.springframework.boot.actuate.health.HealthContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>-><io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.api.Deployment getDeployment()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.http.HttpEntity: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Short: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyFloat: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.security.Provider: void implPutAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration: java.util.EnumSet getDispatcherTypes(org.springframework.boot.autoconfigure.security.SecurityProperties)>-><java.util.stream.Collectors: java.util.stream.Collector toSet()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.actuate.cache.CachesEndpoint: void <init>(java.util.Map)>-><java.lang.Object: void <init>()>
<org.springframework.security.authentication.UserDetailsRepositoryReactiveAuthenticationManager: void <init>(org.springframework.security.core.userdetails.ReactiveUserDetailsService)>-><org.springframework.security.authentication.AbstractUserDetailsReactiveAuthenticationManager: void <init>()>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.UserDetails build()>-><org.springframework.security.core.userdetails.User: void <init>(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,java.util.Collection)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$AccessLogCustomizer: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><java.util.regex.Pattern$1MatcherIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.jruby.ir.IRBuilder: org.jruby.ir.operands.Operand buildFixnumCase(org.jruby.ast.CaseNode)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<org.jruby.RubyModule$MethodClumper: void clump(java.lang.Class)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<io.undertow.util.SubstringMap: int hash(java.lang.String,int)>-><java.lang.String: char charAt(int)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineDriverClassName()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.core.JsonLocation: int hashCode()>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque: int size()>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Collection)>-><org.springframework.security.core.userdetails.MapReactiveUserDetailsService: java.lang.String getKey(java.lang.String)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.web.filter.CharacterEncodingFilter: void <init>()>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.server.HttpHandler wrapHandlers(io.undertow.server.HttpHandler,java.util.List)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.io.InputStream: int read(byte[],int,int)>-><org.jruby.RubyFile$2: int read()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getCorsConfigurations()>
<java.beans.Introspector: void addPropertyDescriptor(java.beans.PropertyDescriptor)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties: java.lang.String[] getTemplateLoaderPath()>
<io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String,int,boolean)>-><io.undertow.util.SubstringMap: int hash(java.lang.String,int)>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void <init>()>-><java.util.HashMap: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey createOperationKey(org.springframework.boot.actuate.endpoint.Operation)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.format.InternalParserDateTimeParser: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.DefaultPathContainer: java.lang.String value()>
<java.util.AbstractCollection: java.lang.String toString()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><java.util.ArrayList: void <init>()>
<org.jruby.anno.TypePopulator$ReflectiveTypePopulator: void addBoundMethodsUnlessOmited(org.jruby.Ruby,java.lang.String,java.util.List)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void addUrlMappings(java.lang.String[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSimpleConfig(io.micrometer.core.instrument.simple.SimpleConfig)>
<org.springframework.boot.actuate.env.EnvironmentEndpoint: void <init>(org.springframework.core.env.Environment)>-><org.springframework.boot.actuate.endpoint.Sanitizer: void <init>()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.EnumMap: java.lang.Enum[] getKeyUniverse(java.lang.Class)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractCachingViewResolver: void setCache(boolean)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.EnumMap$Values: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void <init>()>-><org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void setMaxAge(java.time.Duration)>
<java.lang.Object: java.lang.String toString()>-><java.util.zip.ZipEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties healthEndpointProperties(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>-><org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status: java.util.Map getHttpMapping()>
<org.springframework.security.access.prepost.PrePostAdviceReactiveMethodInterceptor: void <init>(org.springframework.security.access.method.MethodSecurityMetadataSource,org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice,org.springframework.security.access.prepost.PostInvocationAuthorizationAdvice)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: void <init>(java.lang.String,java.lang.Object,java.util.Collection)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.ObjectNode: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration: io.micrometer.core.instrument.binder.system.UptimeMetrics uptimeMetrics()>
<org.springframework.security.config.web.server.ServerHttpSecurity$CsrfSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.csrf.CsrfWebFilter: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.AbstractList: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.GsonHttpMessageConverter: void <init>()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.crypto.CryptoAllPermission: int hashCode()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory undertowServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderMap put(io.undertow.util.HttpString,java.lang.String)>-><io.undertow.util.HeaderMap: java.util.Collection remove(io.undertow.util.HttpString)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<io.micrometer.core.util.internal.logging.JdkLogger: void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.util.logging.LogManager$RootLogger: void log(java.util.logging.LogRecord)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: java.util.Map getPathPrefixes()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplyingWhenNonNull()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.actuate.security.AuthenticationAuditListener: void <init>()>-><org.springframework.boot.actuate.security.AbstractAuthenticationAuditListener: void <init>()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void addUrlMappings(java.lang.String[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenHasText()>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source when(java.util.function.Predicate)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object getLazyResolutionProxyIfNecessary(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>-><org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object buildLazyResolutionProxy(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><java.util.Collections$SynchronizedSortedSet: java.util.Comparator comparator()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: boolean containsKey(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setAuthenticationDatabase(java.lang.String)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.AbstractMap$1: void clear()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.core.annotation.MergedAnnotation findMergedAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedLocalBeanDefinition(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLanguage(org.owasp.webgoat.i18n.Language)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.AbstractCollection: boolean isEmpty()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.javasupport.JavaObject: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter: void <init>()>-><java.lang.Object: void <init>()>
<java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.IdentityHashMap$Values: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><javax.management.MBeanParameterInfo: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.WebGoat: org.owasp.webgoat.session.WebSession webSession()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration: org.springframework.boot.actuate.management.HeapDumpWebEndpoint heapDumpWebEndpoint()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.lang.ProcessEnvironment$StringKeySet: int size()>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.LocalDate: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMeterRegistryPostProcessor(org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder username(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration: void <init>(io.micrometer.core.instrument.MeterRegistry,java.util.Collection,java.util.Map)>-><com.fasterxml.jackson.core.util.InternCache: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory,java.lang.String,java.lang.Class[])>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><java.nio.charset.Charset: java.lang.String name()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch handleMatch(java.lang.String,io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,int)>-><java.util.HashMap: boolean isEmpty()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings)>-><org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.logging.Level: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.resource.ResourceUrlEncodingFilter: void <init>()>-><org.springframework.web.filter.GenericFilterBean: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.DateFormatSymbols: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$7$1: void accept(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRestTemplateBuilder(org.springframework.boot.web.client.RestTemplateBuilder)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties getOAuth2ClientPropertiesInstance()>
<io.undertow.util.QueryParameterUtils: java.util.Map parseQueryString(java.lang.String,java.lang.String)>-><io.undertow.util.QueryParameterUtils: void handleQueryParameter(java.lang.String,java.util.Map,int,int,int,java.lang.String,boolean)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.TreeMap$EntrySet: void clear()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.AbstractSet: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<io.micrometer.core.instrument.binder.system.ProcessorMetrics: void <init>(java.lang.Iterable)>-><java.lang.management.ManagementFactory: java.lang.management.OperatingSystemMXBean getOperatingSystemMXBean()>
<java.util.SubList: void removeRange(int,int)>-><java.util.SubList: void removeRange(int,int)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.RegularEnumSet: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>-><org.springframework.boot.context.properties.PropertyMapper$CachingSupplier: java.lang.Object get()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: int executeUpdate(java.lang.String)>
<java.util.ArrayDeque: void <init>(java.util.Collection)>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.undertow.servlet.spec.ServletCookieAdaptor: java.lang.String getName()>
<java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.javasupport.JavaMethod: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: int hashCode()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.Collection: java.util.stream.Stream stream()>-><java.util.ArrayDeque: java.util.Spliterator spliterator()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointFiltered(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.locale.provider.RuleBasedBreakIterator: int hashCode()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues: boolean contains(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration: org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean freeMarkerConfiguration()>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.annotation.Annotation,java.lang.Class)>-><org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation synthesizeAnnotation(java.lang.annotation.Annotation,java.lang.reflect.AnnotatedElement)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>-><io.undertow.servlet.spec.ContentTypeInfo: java.lang.String getHeader()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$SynchronizedSet: int hashCode()>
<org.jruby.specialized.RubyArrayOneObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<javax.security.auth.Subject$SecureSet: void clear()>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setBeanClassLoader(java.lang.ClassLoader)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.DecimalFormatSymbols: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void closeAsync()>-><java.nio.Buffer: int position()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String migrateLegacyId(org.springframework.core.env.Environment,java.lang.String)>-><org.springframework.core.env.AbstractEnvironment: java.lang.Object getProperty(java.lang.String,java.lang.Class,java.lang.Object)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void close()>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void setFlags(int)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.io.PrintWriter getWriter()>-><io.undertow.servlet.spec.HttpServletResponseImpl: void setCharacterEncoding(java.lang.String)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.servlet.api.DeploymentInfo: boolean isCheckOtherSessionManagers()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextFactory servletWebChildContextFactory()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextFactory: void <init>()>
<org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: void <init>()>-><java.util.LinkedHashSet: void <init>()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.validation.AbstractPropertyBindingResult: java.lang.Object getActualFieldValue(java.lang.String)>-><org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><io.undertow.servlet.spec.ServletPrintWriterDelegate$2: java.lang.Object run()>
<java.util.AbstractMap: java.lang.String toString()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.EnumMap: void <init>(java.util.Map)>-><javax.management.openmbean.TabularDataSupport: java.util.Set keySet()>
<javax.security.auth.Subject$SecureSet$6: java.lang.Object run()>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList$Itr: void remove()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void close()>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void writeBufferBlocking(boolean)>
<java.util.Collections$UnmodifiableMap: int size()>-><com.google.common.collect.Maps$TransformedEntriesMap: int size()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.LessonTemplateResolver lessonTemplateResolver(org.springframework.core.io.ResourceLoader)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.invoke.LambdaForm: int hashCode()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
<org.jruby.ir.util.IGVInstrListener: void instrChanged(org.jruby.ir.representations.BasicBlock,org.jruby.ir.instructions.Instr,org.jruby.ir.instructions.Instr,int,org.jruby.ir.listeners.InstructionsListener$OperationType)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.AbstractList: int hashCode()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration: org.springframework.data.mongodb.core.MongoDbFactorySupport mongoDbFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.boot.autoconfigure.mongo.MongoProperties)>-><org.springframework.data.mongodb.core.SimpleMongoDbFactory: void <init>(com.mongodb.MongoClient,java.lang.String)>
<org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int)>-><org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int,int)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determinePassword()>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.SubList$1: java.lang.Object next()>
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: void registerBeanDefinition(java.lang.String,java.util.Map,java.lang.String,java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><java.beans.IndexedPropertyDescriptor: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.util.QueryParameterUtils: java.util.Map parseQueryString(java.lang.String,java.lang.String)>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><java.util.regex.Pattern$1MatcherIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: int hashCode()>
<org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter: org.springframework.security.web.server.header.ServerHttpHeadersWriter createDelegate(org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy)>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter build()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.calendar.CalendarDate: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>-><java.security.Provider$Service: java.security.Provider getProvider()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: org.springframework.boot.actuate.endpoint.web.ExposableServletEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.PathMapper: java.lang.String getRootPath(java.util.List,org.springframework.boot.actuate.endpoint.EndpointId)>
<org.springframework.web.servlet.view.AbstractTemplateViewResolver: void <init>()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void <init>()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><java.util.Vector: java.lang.Object[] toArray()>
<org.springframework.core.annotation.AbstractMergedAnnotation: boolean getBoolean(java.lang.String)>-><java.lang.Boolean: boolean booleanValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection createEndpointBeans()>-><org.springframework.util.Assert: void state(boolean,java.util.function.Supplier)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void sendError(int,java.lang.String)>-><io.undertow.servlet.api.DeploymentInfo: boolean isSendCustomReasonPhraseOnError()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determinePassword()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.thoughtworks.xstream.core.util.FastField: int hashCode()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.net.InetSocketAddress: int hashCode()>
<org.springframework.aop.framework.AopProxyUtils: boolean equalsInProxy(org.springframework.aop.framework.AdvisedSupport,org.springframework.aop.framework.AdvisedSupport)>-><java.lang.Object: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: boolean equals(java.lang.Object)>
<org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object,org.springframework.core.style.ToStringStyler)>-><org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<com.google.common.collect.TransformedIterator: boolean hasNext()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.util.AbstractMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: int hashCode()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>-><java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<java.lang.Object: java.lang.String toString()>-><java.lang.invoke.LambdaForm$Name: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.EnumMap$Values: java.util.Iterator iterator()>
<java.util.Vector: void clear()>-><java.util.Vector: void removeAllElements()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.DecimalNode: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.servlet.handlers.ServletPathMatch: java.lang.String getRemaining()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint getFilterEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.Object getBean()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>-><org.springframework.boot.autoconfigure.cache.CacheProperties: java.util.List getCacheNames()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.ContentNegotiatingViewResolver viewResolver(org.springframework.beans.factory.BeanFactory)>-><org.springframework.web.servlet.view.ContentNegotiatingViewResolver: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<org.springframework.validation.BindException: boolean equals(java.lang.Object)>-><org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.health.HealthContributorRegistryHealthIndicatorRegistryAdapter: void <init>(org.springframework.boot.actuate.health.HealthContributorRegistry)>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration: org.springframework.boot.actuate.metrics.web.reactive.server.DefaultWebFluxTagsProvider webfluxTagConfigurer()>-><org.springframework.boot.actuate.metrics.web.reactive.server.DefaultWebFluxTagsProvider: void <init>()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addArgumentResolvers(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.Label: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointCompatibilityConfiguration: org.springframework.boot.actuate.health.HealthStatusHttpMapper healthStatusHttpMapper(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>-><org.springframework.boot.actuate.health.HealthStatusHttpMapper: void <init>()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.lang.Object: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.ArrayList: boolean isEmpty()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: boolean flushBufferAsync(boolean)>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void setFlags(int)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation synthesizeAnnotation(java.lang.annotation.Annotation,java.lang.reflect.AnnotatedElement)>-><org.springframework.core.annotation.AnnotationFilter: boolean matches(java.lang.annotation.Annotation)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean add(java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setJodaDateTimeFormat(java.lang.String)>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration: org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean freeMarkerConfiguration()>-><org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setPort(java.lang.Integer)>
<java.util.HashMap$EntrySet: void clear()>-><java.util.HashMap: void clear()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: boolean startsWithArgumentClassName(java.lang.String)>-><java.util.stream.Stream: java.util.stream.Stream of(java.lang.Object[])>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder queueCapacity(int)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.factory.support.NullBean: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><com.google.common.collect.Maps$EntrySet: int size()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter(org.springframework.boot.autoconfigure.http.HttpProperties)>-><org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: java.nio.charset.Charset getCharset()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: int hashCode()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><java.util.Iterator: void remove()>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void <init>(org.springframework.context.ApplicationEventPublisher)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping welcomePageHandlerMapping(org.springframework.context.ApplicationContext,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.SubList$1: boolean hasNext()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setManagementServletContext(org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.AttributedString$AttributedStringIterator: int hashCode()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><org.springframework.core.ResolvableType: java.lang.Class resolveGeneric(int[])>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.Boolean: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.awt.image.ColorModel: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.MBeanAttributeInfo: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyString: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<javax.net.ssl.SNIHostName: int hashCode()>-><java.lang.String: int hashCode()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setPathMatcher(org.springframework.util.PathMatcher)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.server.HttpHandler wrapHandlers(io.undertow.server.HttpHandler,java.util.List)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setLocale(java.util.Locale)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.AbstractList$Itr: boolean hasNext()>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isHealthEndpointExtension(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.jmx.support.MBeanRegistrationSupport: void setServer(javax.management.MBeanServer)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder maxPoolSize(int)>
<java.util.AbstractMap: java.lang.String toString()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration: org.springframework.boot.actuate.beans.BeansEndpoint beansEndpoint(org.springframework.context.ConfigurableApplicationContext)>-><org.springframework.boot.actuate.beans.BeansEndpoint: void <init>(org.springframework.context.ConfigurableApplicationContext)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$1: java.lang.Object next()>
<org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration: org.springframework.security.config.annotation.rsocket.RSocketSecurity rsocketSecurity(org.springframework.context.ApplicationContext)>-><org.springframework.security.config.annotation.rsocket.RSocketSecurity: org.springframework.security.config.annotation.rsocket.RSocketSecurity authenticationManager(org.springframework.security.authentication.ReactiveAuthenticationManager)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean createExtensionBean(java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.Arrays$ArrayList: int size()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractMap$1: boolean isEmpty()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>-><java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.servlet.spec.RequestDispatcherImpl: void <init>(java.lang.String,io.undertow.servlet.spec.ServletContextImpl)>
<org.springframework.boot.actuate.security.AuthenticationAuditListener: org.springframework.boot.actuate.security.AuthenticationAuditListener$WebAuditListener maybeCreateWebListener()>-><org.springframework.boot.actuate.security.AuthenticationAuditListener$WebAuditListener: void <init>(org.springframework.boot.actuate.security.AuthenticationAuditListener$1)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController basicErrorController(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties,java.util.List)>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setPassword(char[])>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.jruby.RubyHash: java.lang.Object get(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void extendMessageConverters(java.util.List)>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider findProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.env.PropertySource: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration: org.springframework.boot.actuate.info.EnvironmentInfoContributor envInfoContributor(org.springframework.core.env.ConfigurableEnvironment)>-><org.springframework.boot.actuate.info.EnvironmentInfoContributor: void <init>(org.springframework.core.env.ConfigurableEnvironment)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.MBeanOperationInfo: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Spliterator spliterator()>-><java.util.ArrayDeque: java.util.Spliterator spliterator()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: boolean isLazy(org.springframework.beans.factory.config.DependencyDescriptor)>-><org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.javasupport.JavaMethod: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.FloatNode: int hashCode()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>(java.lang.Iterable)>-><io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: boolean isManagementExtensionsPresent()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.Provider$UString: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.config.web.server.ServerHttpSecurity httpSecurity()>
<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher pathMatchers(java.lang.String[])>-><org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher pathMatchers(org.springframework.http.HttpMethod,java.lang.String[])>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setIgnoreDefaultModelOnRedirect(boolean)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: java.util.Optional getWelcomePage()>-><java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.core.annotation.TypeMappedAnnotation: boolean isPresent()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletManagementContextFactory(org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextFactory)>
<org.springframework.boot.actuate.autoconfigure.health.HealthContributorRegistryHealthIndicatorRegistryAdapter: void <init>(org.springframework.boot.actuate.health.HealthContributorRegistry)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.ServletHandler: io.undertow.servlet.core.ManagedServlet getManagedServlet()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityService getCloudFoundrySecurityService(org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.core.env.Environment)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getPrefix()>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: java.lang.String getPath()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.Label: int hashCode()>
<org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.authentication.logout.SecurityContextServerLogoutHandler: void <init>()>
<java.util.concurrent.ArrayBlockingQueue: void clear()>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>-><java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory undertowServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: void <init>()>
<io.undertow.util.HeaderMap: java.util.Collection remove(io.undertow.util.HttpString)>-><io.undertow.util.HeaderMap: io.undertow.util.HeaderValues removeEntry(io.undertow.util.HttpString)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.security.Provider: java.util.Set entrySet()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><io.undertow.util.HeaderValues$1: void remove()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties)>-><org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.String toString()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(org.springframework.boot.actuate.endpoint.EndpointFilter,org.springframework.boot.actuate.endpoint.ExposableEndpoint)>-><org.springframework.boot.util.LambdaSafe$Callback: org.springframework.boot.util.LambdaSafe$InvocationResult invokeAnd(java.util.function.Function)>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List postProcessConverters(java.util.List)>
<java.util.Collections$SynchronizedCollection: int size()>-><io.undertow.util.HeaderValues: int size()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateNonEmpty(io.undertow.util.HttpString,java.lang.Object[],int,int,java.lang.Object)>-><io.undertow.util.HttpString: boolean equals(io.undertow.util.HttpString)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>-><java.lang.Enum: java.lang.String name()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.lang.String: int length()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.AllPermission: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.util.Assert: void state(boolean,java.util.function.Supplier)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.ProtectionDomain$WeakProtectionDomainKey: int hashCode()>
<org.springframework.core.convert.support.ObjectToOptionalConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.invoke.LambdaFormEditor$Transform: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.net.SocketPermission: int hashCode()>
<io.undertow.util.HeaderValues$1: void remove()>-><io.undertow.util.HeaderValues: java.lang.String remove(int)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$TransformedEntriesMap: boolean containsKey(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: boolean containsKey(java.lang.Object)>
<sun.util.locale.provider.CalendarNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>-><java.util.AbstractCollection: boolean contains(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setSsl(org.springframework.boot.web.server.Ssl)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown: boolean isAwaitTermination()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor: void <init>()>-><org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.MBeanConstructorInfo: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadSource(org.springframework.core.io.Resource,java.nio.charset.Charset)>-><org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.Resource)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>-><java.util.ArrayDeque: boolean add(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.HsqlException: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$1: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory: void <init>(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.HashSet: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.apache.logging.log4j.Level: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration: org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer undertowWebServerFactoryCustomizer(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer: void <init>(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int,int)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.ServerProperties: void setUseForwardHeaders(java.lang.Boolean)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyThread: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration: org.springframework.boot.actuate.audit.listener.AuditListener auditListener(org.springframework.boot.actuate.audit.AuditEventRepository)>-><org.springframework.boot.actuate.audit.listener.AuditListener: void <init>(org.springframework.boot.actuate.audit.AuditEventRepository)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.jruby.ir.IRBuilder: org.jruby.ir.operands.Operand buildFixnumCase(org.jruby.ast.CaseNode)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Vector: java.util.Iterator iterator()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenHasText()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJtaTransactionManager(org.springframework.transaction.jta.JtaTransactionManager)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler methodSecurityExpressionHandler()>-><org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler: void setDefaultRolePrefix(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint getFilterEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: org.springframework.boot.actuate.endpoint.EndpointId getId()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.server.HttpHandler wrapHandlers(io.undertow.server.HttpHandler,java.util.List)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.javasupport.JavaClass: int hashCode()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><java.util.ArrayList: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setInterceptors(java.lang.Object[])>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.cache.support.NoOpCacheManager: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.TokenValidator: void <init>(org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityService)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMessageSource(org.springframework.context.MessageSource)>
<io.micrometer.core.instrument.binder.system.UptimeMetrics: void <init>()>-><io.micrometer.core.instrument.binder.system.UptimeMetrics: void <init>(java.lang.Iterable)>
<org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration: org.springframework.boot.actuate.info.GitInfoContributor gitInfoContributor(org.springframework.boot.info.GitProperties,org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties)>-><org.springframework.boot.actuate.info.GitInfoContributor: void <init>(org.springframework.boot.info.GitProperties,org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.TimestampData: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String getAlphaNumerics(java.lang.String)>-><java.lang.String: int length()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean last()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: int hashCode()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder customizers(java.lang.Iterable)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.web.servlet.handler.HandlerInterceptorAdapter: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration$OAuth2ClasspathGuard: boolean shouldConfigure(org.springframework.context.ApplicationContext)>-><org.springframework.context.support.GenericApplicationContext: java.lang.ClassLoader getClassLoader()>
<org.springframework.boot.web.servlet.support.ErrorPageFilter: void <init>()>-><org.springframework.boot.web.servlet.support.ErrorPageFilter$1: void <init>(org.springframework.boot.web.servlet.support.ErrorPageFilter)>
<org.springframework.boot.actuate.security.AuthorizationAuditListener: void <init>()>-><org.springframework.boot.actuate.security.AbstractAuthorizationAuditListener: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.security.access.SecurityConfig: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><org.springframework.util.MimeType: java.nio.charset.Charset getCharset()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: boolean isLazy(org.springframework.beans.factory.config.DependencyDescriptor)>-><java.lang.reflect.Method: java.lang.Class getReturnType()>
<io.micrometer.core.instrument.binder.logging.Log4j2Metrics: void <init>(java.lang.Iterable,org.apache.logging.log4j.core.LoggerContext)>-><java.lang.Object: void <init>()>
<org.jruby.RubyArray: void alloc(int)>-><org.jruby.RubyBasicObject: org.jruby.Ruby getRuntime()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.WebWolf: void <init>()>
<com.google.common.collect.Multimaps$Keys$1: void <init>(com.google.common.collect.Multimaps$Keys,java.util.Iterator)>-><com.google.common.collect.TransformedIterator: void <init>(java.util.Iterator)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.cert.X509CRLEntry: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.Year: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.interpreter.Profiler$IRCallSite: int hashCode()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Object[])>-><org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<java.lang.Object: java.lang.String toString()>-><java.io.File: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>-><org.springframework.http.converter.FormHttpMessageConverter: void setPartConverters(java.util.List)>
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForAnnotationIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.security.web.util.matcher.RegexRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Hashtable$ValueCollection: int size()>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration: void <init>()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration: org.springframework.boot.autoconfigure.http.HttpMessageConverters messageConverters(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(java.util.Collection)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.SubList$1: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><org.springframework.core.io.buffer.LimitedDataBufferList: boolean remove(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.ZoneOffset: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getCredentials()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void createOutputStream()>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void <init>(io.undertow.servlet.handlers.ServletRequestContext)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: int hashCode()>
<org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.PathMapper: java.lang.String getRootPath(java.util.List,org.springframework.boot.actuate.endpoint.EndpointId)>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: java.lang.String getObjectName()>
<java.util.EnumMap: void <init>(java.util.Map)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Hashtable$ValueCollection: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.web.util.UriUtils: java.lang.String lambda$encodeUriVariables$1(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJsonComponentModule(org.springframework.boot.jackson.JsonComponentModule)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.MBeanInfo: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$ValuesView: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$Values: java.util.Iterator iterator()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><java.net.URI: void <init>(java.lang.String)>
<org.jruby.javasupport.JavaClass: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>
<com.thoughtworks.xstream.converters.collections.TreeMapConverter$NullComparator: int compare(java.lang.Object,java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.Vector: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><sun.security.ssl.SecureKey: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.lang.ProcessEnvironment$StringKeySet: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><synthetic.method.ServletRequestImpl: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.format.support.FormattingConversionService mvcConversionService()>
<org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMapping,java.util.Collection,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.cors.CorsConfiguration,boolean)>-><org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isExtensionExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(java.lang.Class,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJvmMemoryMetrics(io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(java.lang.Class,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService: int getMinEndpoints()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean isEmpty()>
<io.micrometer.core.instrument.binder.system.ProcessorMetrics: void <init>()>-><io.micrometer.core.instrument.binder.system.ProcessorMetrics: void <init>(java.lang.Iterable)>
<org.springframework.boot.actuate.health.HealthStatusHttpMapper: void setupDefaultStatusMapping()>-><org.springframework.boot.actuate.health.HealthStatusHttpMapper: void addStatusMapping(org.springframework.boot.actuate.health.Status,java.lang.Integer)>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource methodMetadataSource(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadSource(org.springframework.core.io.Resource,java.nio.charset.Charset)>-><org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.support.EncodedResource)>
<java.util.ArrayList: boolean addAll(int,java.util.Collection)>-><java.util.ArrayDeque: java.lang.Object[] toArray()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getDefaultMediaTypes()>-><java.util.HashMap: void <init>(int)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$InvocationResult invoke(java.lang.Object,java.util.function.Supplier)>-><org.springframework.boot.util.LambdaSafe$GenericTypeFilter: boolean match(java.lang.Class,java.lang.Object,java.lang.Object,java.lang.Object[])>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: void <init>(org.springframework.http.MediaType[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setDateFormat(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mustache.MustacheProperties getMustachePropertiesInstance()>-><org.springframework.boot.autoconfigure.mustache.MustacheProperties: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><io.undertow.servlet.spec.ServletCookieAdaptor: java.lang.String getName()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><org.jruby.RubyEnumerator: boolean hasNext()>
<io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String)>-><io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String,int,boolean)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: void <init>()>
<java.util.Collections$UnmodifiableCollection: int size()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate: io.undertow.servlet.spec.ServletPrintWriterDelegate newInstance(io.undertow.servlet.spec.ServletPrintWriter)>-><io.undertow.servlet.spec.ServletPrintWriterDelegate$1: void <init>()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<org.springframework.validation.AbstractPropertyBindingResult: java.lang.Class getFieldType(java.lang.String)>-><org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setTemplateMode(java.lang.String)>-><org.thymeleaf.templatemode.TemplateMode: org.thymeleaf.templatemode.TemplateMode parse(java.lang.String)>
<io.undertow.servlet.core.ServletContainerImpl: java.util.Collection listDeployments()>-><java.util.HashSet: void <init>(java.util.Collection)>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.Duration: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.security.web.reactive.result.view.CsrfRequestDataValueProcessor: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedHashMap$LinkedValues: void clear()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: javax.sql.DataSource getDataSource()>
<java.util.Set: java.util.Set of(java.lang.Object)>-><java.lang.Error: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService: int getMinEndpoints()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.ReduceOps$2ReducingSink: void accept(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>-><org.springframework.validation.beanvalidation.MethodValidationPostProcessor: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<com.google.common.collect.Platform: java.util.SortedMap mapsTransformEntriesSortedMap(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps: java.util.SortedMap transformEntriesIgnoreNavigable(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.invoke.MemberName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.security.AbstractAuthenticationAuditListener: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.cglib.core.MethodInfo: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.WeakHashMap: java.util.Set entrySet()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><java.util.LinkedList: java.lang.Object[] toArray()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isExtensionExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: java.lang.Object getBean()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: org.springframework.http.HttpHeaders initHeaders(reactor.netty.http.server.HttpServerRequest)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: void <init>(io.netty.handler.codec.http.HttpHeaders)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive getReactive()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.session.Course course()>
<java.util.AbstractList: void clear()>-><java.util.SubList: void removeRange(int,int)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow: void <init>()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.util.Collection getUrlMappings()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>-><org.springframework.core.annotation.TypeMappedAnnotations: boolean isPresent(java.lang.Class)>
<org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter: org.springframework.security.web.server.header.ServerHttpHeadersWriter createDelegate(org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter$Mode)>-><java.lang.Enum: java.lang.String name()>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void setMaxAge(java.time.Duration)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.POJONode: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.java.proxies.ArrayJavaProxy: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration: org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider filterMappingDescriptionProvider()>-><org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider: void <init>()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: java.util.List getUris()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer flywayInitializer(org.flywaydb.core.Flyway,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer: void <init>(org.flywaydb.core.Flyway,org.springframework.boot.autoconfigure.flyway.FlywayMigrationStrategy)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>-><org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.util.Collection)>
<org.dom4j.tree.BackedList: void clear()>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpCodeStatusMapper(org.springframework.boot.actuate.health.HttpCodeStatusMapper)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDispatcherServlet(org.springframework.web.servlet.DispatcherServlet)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties: java.util.Map getSettings()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.undertow.servlet.spec.ServletCookieAdaptor: java.lang.String getDomain()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.BeanMetadataAttribute: int hashCode()>
<org.springframework.core.DecoratingClassLoader: boolean isExcluded(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setUsername(java.lang.String)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<sun.text.normalizer.IntTrie: int getTrailValue(int,char)>-><sun.net.idn.StringPrep$StringPrepTrieImpl: int getFoldingOffset(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues: boolean isEmpty()>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.base.AbstractPartial: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ListableBeanFactory)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.lang.Object getIfAvailable()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.IntervalSecondData: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ListableBeanFactory,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.lang.Object getIfAvailable()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>-><org.jruby.RubyThread: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.WeakHashMap$Values: void clear()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties,java.util.List)>-><org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.IdentityHashMap$KeySet: int size()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: org.springframework.security.core.userdetails.UserDetails getUserDetails(org.springframework.boot.autoconfigure.security.SecurityProperties$User,java.lang.String)>-><org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.UserDetails build()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration: org.springframework.boot.jackson.JsonComponentModule jsonComponentModule()>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><org.springframework.http.HttpLogging: org.apache.commons.logging.Log forLogName(java.lang.Class)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.Type: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.api.Location: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.format.datetime.DateFormatter: void <init>(java.lang.String)>-><java.lang.Object: void <init>()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.validation.BindException: int hashCode()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.util.Assert: void isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><org.jruby.RubyObject: java.lang.String toString()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder allowCoreThreadTimeOut(boolean)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><com.couchbase.client.core.env.ViewServiceConfig: com.couchbase.client.core.env.ViewServiceConfig create(int,int)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.LocalVariable: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCacheMetricsRegistrar(org.springframework.boot.actuate.metrics.cache.CacheMetricsRegistrar)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.javasupport.JavaConstructor: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: java.sql.ResultSet executeQuery()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.UUID: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.BinaryNode: int hashCode()>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.AbstractMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.InterceptorRegistry: void <init>()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.SortedOps$RefSortingSink: void accept(java.lang.Object)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<io.undertow.util.SubstringMap: void doPut(java.lang.Object[],java.lang.String,java.lang.Object)>-><java.lang.String: int length()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><net.bytebuddy.matcher.FilterableList$Empty: java.lang.Object get(int)>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source asInt(java.util.function.Function)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source as(java.util.function.Function)>
<org.jruby.ir.IRBuilder: org.jruby.ir.operands.Operand buildFixnumCase(org.jruby.ast.CaseNode)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>-><org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<java.util.AbstractList: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.security.config.web.server.ServerHttpSecurity$RequestCacheSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>-><org.springframework.security.config.web.server.ServerHttpSecurity$RequestCacheSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeServlet(java.lang.String,boolean)>-><io.undertow.servlet.handlers.ServletPathMatch: void <init>(io.undertow.servlet.handlers.ServletChain,java.lang.String,java.lang.String,io.undertow.servlet.handlers.ServletPathMatch$Type,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.crypto.CryptoPermission: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.servlet.handlers.ServletPathMatch: void <init>(io.undertow.servlet.handlers.ServletChain,java.lang.String,java.lang.String,io.undertow.servlet.handlers.ServletPathMatch$Type,java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeServlet(java.lang.String,boolean)>-><io.undertow.servlet.handlers.ServletPathMatch: io.undertow.servlet.handlers.ServletChain getServletChain()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer tomcatServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<java.util.TreeMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<io.micrometer.core.instrument.binder.system.ProcessorMetrics: void <init>()>-><java.util.Collections: java.util.List emptyList()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.base.AbstractPeriod: int hashCode()>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><org.springframework.core.NestedExceptionUtils: java.lang.String buildMessage(java.lang.String,java.lang.Throwable)>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>-><java.util.HashMap: boolean isEmpty()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.springframework.security.web.server.authentication.logout.LogoutWebFilter: void <init>()>-><org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher pathMatchers(org.springframework.http.HttpMethod,java.lang.String[])>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Messages messageSource(org.owasp.webgoat.i18n.Language)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultErrorAttributes(org.springframework.boot.web.servlet.error.DefaultErrorAttributes)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.headius.invokebinder.Signature: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: boolean shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding$Type)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.text.AttributeEntry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.UTCDateTimeZone: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.ArrayNode: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git: org.springframework.core.io.Resource getLocation()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.UnresolvedPermission: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.util.ByteList: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.locale.provider.RuleBasedBreakIterator: int hashCode()>
<org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory: javax.servlet.http.HttpSession getObject()>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Vector$Itr: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.LocalDate: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCompositeMeterRegistry(io.micrometer.core.instrument.composite.CompositeMeterRegistry)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: void <init>(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.context.properties.source.AliasedConfigurationPropertySource: org.springframework.boot.context.properties.source.ConfigurationPropertyState containsDescendantOf(org.springframework.boot.context.properties.source.ConfigurationPropertyName)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void <init>()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.api.ServletInfo: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.UnboxedBoolean: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver reactiveCurrentSecurityContextArgumentResolver()>-><org.springframework.context.expression.BeanFactoryResolver: void <init>(org.springframework.beans.factory.BeanFactory)>
<java.security.Provider: void implPutAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$EmptyList: boolean isEmpty()>
<org.owasp.webgoat.xxe.Comments: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService: int getMaxEndpoints()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.thoughtworks.xstream.core.util.WeakCache: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.runtime.Block: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.jar.Attributes$Name: int hashCode()>
<org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,java.util.List,java.util.Collection,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.annotation.RequestPredicateFactory: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.JavaObjectData: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.util.stream.AbstractShortCircuitTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.thymeleaf.spring5.SpringWebFluxTemplateEngine: void <init>()>-><org.thymeleaf.spring5.linkbuilder.webflux.SpringWebFluxLinkBuilder: void <init>()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.core.annotation.MergedAnnotation findMergedAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.core.annotation.TypeMappedAnnotation: boolean isPresent()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Vector$Itr: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMustacheViewResolver(org.springframework.boot.web.reactive.result.view.MustacheViewResolver)>
<org.springframework.boot.info.InfoProperties: java.util.Properties copy(java.util.Properties)>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void info(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.BigIntegerNode: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.jruby.util.collections.WeakHashSet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: void <init>(java.net.URI,java.lang.String)>-><org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer extractPathWithinApplication(org.springframework.http.server.PathContainer,org.springframework.http.server.PathContainer)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.String getKeyStore()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.ResourceHttpMessageConverter: void <init>()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.UnboxedBoolean: int hashCode()>
<io.undertow.servlet.spec.ServletContextImpl: void updateSessionAccessTime(io.undertow.server.HttpServerExchange)>-><io.undertow.servlet.spec.HttpSessionImpl$UnwrapSessionAction: void <init>(javax.servlet.http.HttpSession)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setGitProperties(org.springframework.boot.info.GitProperties)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection,java.util.Collection)>-><java.lang.Object: void <init>()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: int hashCode()>
<io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: void <init>(java.lang.management.OperatingSystemMXBean,java.lang.Iterable)>-><io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: java.lang.Class getFirstClassFound(java.util.List)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService: int getMaxEndpoints()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: int hashCode()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><javax.security.auth.Subject$SecureSet$6: java.lang.Object run()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties getOAuth2ResourceServerPropertiesInstance()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><io.jsonwebtoken.impl.JwtMap: int hashCode()>
<com.google.common.collect.Multimaps: java.util.Collection unmodifiableValueCollection(java.util.Collection)>-><java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String getRemoteAddress()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void setRootViewName(java.lang.String)>-><org.springframework.web.servlet.mvc.ParameterizableViewController: void <init>()>
<org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration: org.springframework.boot.actuate.logging.LogFileWebEndpoint logFileWebEndpoint(org.springframework.beans.factory.ObjectProvider,org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties)>-><org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties: java.io.File getExternalFile()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.util.RawValue: int hashCode()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void <init>()>-><java.time.Duration: java.time.Duration ofDays(long)>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFileDescriptorMetrics(io.micrometer.core.instrument.binder.system.FileDescriptorMetrics)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeFile(java.lang.String,boolean)>-><io.undertow.servlet.handlers.ServletPathMatch: io.undertow.servlet.handlers.ServletChain getServletChain()>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration: org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer metricsRestTemplateCustomizer(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider,org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties)>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client$ClientRequest: java.lang.String getMetricName()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration: org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean securityFilterChainRegistration(org.springframework.boot.autoconfigure.security.SecurityProperties)>-><org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean: void <init>(java.lang.String,org.springframework.boot.web.servlet.ServletRegistrationBean[])>
<org.springframework.security.config.web.server.ServerHttpSecurity: void <init>()>-><org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.String toString()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void closeStreamAndWriter()>-><io.undertow.servlet.spec.HttpServletResponseImpl: void createOutputStream()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Hashtable$ValueCollection: int size()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityInterceptor getSecurityInterceptor(org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.core.env.Environment)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.TokenValidator: void <init>(org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityService)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration: void <init>()>
<org.springframework.context.support.AbstractApplicationContext: boolean isTypeMatch(java.lang.String,org.springframework.core.ResolvableType)>-><org.springframework.context.support.AbstractApplicationContext: void assertBeanFactoryActive()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryInfoEndpointWebExtension: void <init>(org.springframework.boot.actuate.info.InfoEndpoint)>-><java.lang.Object: void <init>()>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: java.util.List getSecurityWebFilterChains()>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<java.util.Collections$UnmodifiableList: int hashCode()>-><java.lang.Object: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.InterceptorRegistry: org.springframework.web.servlet.config.annotation.InterceptorRegistration addInterceptor(org.springframework.web.servlet.HandlerInterceptor)>
<io.undertow.servlet.spec.SecurityActions$1: java.lang.Object run()>-><io.undertow.servlet.spec.SecurityActions$1: io.undertow.servlet.handlers.ServletRequestContext run()>
<org.springframework.core.annotation.TypeMappedAnnotation: org.springframework.core.annotation.MergedAnnotation from(java.lang.Object,java.lang.annotation.Annotation)>-><org.springframework.core.annotation.TypeMappedAnnotation: void <init>(org.springframework.core.annotation.AnnotationTypeMapping,java.lang.ClassLoader,java.lang.Object,java.lang.Object,java.util.function.BiFunction,int)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Map map()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.CodeSource: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.ZonedDateTime: int hashCode()>
<io.micrometer.core.instrument.binder.system.ProcessorMetrics: void <init>(java.lang.Iterable)>-><io.micrometer.core.instrument.binder.system.ProcessorMetrics: java.lang.Class getFirstClassFound(java.util.List)>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$EmptyMap: int hashCode()>
<org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration: com.fasterxml.jackson.databind.ObjectMapper jacksonObjectMapper(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: com.fasterxml.jackson.databind.ObjectMapper build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.http.HttpProperties)>
<com.google.common.collect.Maps$EntrySet: boolean isEmpty()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Map map()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: java.lang.Object getSuggestedValue(org.springframework.beans.factory.config.DependencyDescriptor)>-><org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: java.lang.Object findValue(java.lang.annotation.Annotation[])>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.boot.autoconfigure.mustache.MustacheProperties: java.lang.String getPrefix()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration: org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer standardJacksonObjectMapperBuilderCustomizer(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.jackson.JacksonProperties)>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.jackson.JacksonProperties)>
<org.springframework.boot.actuate.endpoint.AbstractExposableEndpoint: void <init>(org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<java.util.List: void sort(java.util.Comparator)>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.awt.Font: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.util.Set entrySet()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$Values: int size()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<java.util.concurrent.locks.ReentrantLock: boolean hasWaiters(java.util.concurrent.locks.Condition)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasWaiters(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTaskSchedulerBuilder(org.springframework.boot.task.TaskSchedulerBuilder)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletCookieAdaptor: java.lang.String getPath()>-><javax.servlet.http.Cookie: java.lang.String getPath()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.web.util.UriUtils: void lambda$encodeUriVariables$0(java.util.Map,java.lang.String,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor applicationTaskExecutor(org.springframework.boot.task.TaskExecutorBuilder)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$JettyAccessLogCustomizer jettyManagementAccessLogCustomizer()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$JettyAccessLogCustomizer: void <init>()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityService: void <init>(org.springframework.boot.web.client.RestTemplateBuilder,java.lang.String,boolean)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.boot.web.reactive.result.view.MustacheViewResolver: void <init>(com.samskivert.mustache.Mustache$Compiler)>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler: void <init>(org.springframework.jmx.export.metadata.JmxAttributeSource)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMessages(org.owasp.webgoat.i18n.Messages)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeMap$EntrySet: int size()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.header.ContentTypeOptionsServerHttpHeadersWriter: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.springframework.boot.convert.CollectionToDelimitedStringConverter: java.lang.Object convert(java.util.Collection,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.Class getFilter(java.lang.Class)>-><org.springframework.core.annotation.AbstractMergedAnnotation: java.util.Optional getValue(java.lang.String,java.lang.Class)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>-><java.util.ArrayDeque$DeqSpliterator: java.util.ArrayDeque$DeqSpliterator trySplit()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Vector$Itr: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping welcomePageHandlerMapping(org.springframework.context.ApplicationContext,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void setMaxAge(java.time.Duration)>-><java.lang.StringBuilder: void <init>()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyFloat: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.security.BasicPermission: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$Values: java.util.Iterator iterator()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setOrder(java.lang.Integer)>
<org.springframework.boot.util.LambdaSafe$GenericTypeFilter: boolean match(java.lang.Class,java.lang.Object,java.lang.Object,java.lang.Object[])>-><java.lang.Class: boolean isInstance(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>-><java.lang.String: java.lang.String toLowerCase(java.util.Locale)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys: void clear()>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: void clear()>
<org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<org.springframework.security.web.util.matcher.RegexRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean remove(java.lang.Object)>
<java.util.List: void sort(java.util.Comparator)>-><io.undertow.util.HeaderValues$1: void set(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isHealthEndpointExtension(java.lang.Object)>-><org.springframework.core.annotation.MergedAnnotations: org.springframework.core.annotation.MergedAnnotations from(java.lang.reflect.AnnotatedElement)>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback(java.lang.String)>-><org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><java.util.IdentityHashMap: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isCloudFoundryHealthEndpointExtension(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.EnumMap$1: int hashCode()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><javax.management.openmbean.TabularDataSupport: java.util.Set entrySet()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.SimpleType: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.Period: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerAdapter: void <init>(org.springframework.beans.factory.ListableBeanFactory)>-><java.lang.Object: void <init>()>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration$ReactiveTraceFilterConfiguration: org.springframework.boot.actuate.web.trace.reactive.HttpTraceWebFilter httpTraceWebFilter(org.springframework.boot.actuate.trace.http.HttpTraceRepository,org.springframework.boot.actuate.trace.http.HttpExchangeTracer,org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties)>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties: java.util.Set getInclude()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.StringLiteral: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredWebEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.core.JsonLocation: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Float: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><io.undertow.util.HeaderValues: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.internal.info.MigrationInfoImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void writeBufferBlocking(boolean)>-><java.nio.Buffer: java.nio.Buffer flip()>
<org.springframework.core.annotation.AbstractMergedAnnotation: boolean getBoolean(java.lang.String)>-><org.springframework.core.annotation.AbstractMergedAnnotation: java.lang.Object getRequiredAttributeValue(java.lang.String,java.lang.Class)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><java.lang.StringBuilder: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.annotation.Annotation,java.lang.Class)>-><java.lang.Class: boolean isInstance(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Character: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.view.InternalResourceViewResolver: void <init>()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void <init>()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.core.annotation.TypeMappedAnnotations: org.springframework.core.annotation.MergedAnnotations from(java.lang.Object,java.lang.annotation.Annotation[],org.springframework.core.annotation.RepeatableContainers,org.springframework.core.annotation.AnnotationFilter)>-><org.springframework.core.annotation.TypeMappedAnnotations: void <init>(java.lang.Object,java.lang.annotation.Annotation[],org.springframework.core.annotation.RepeatableContainers,org.springframework.core.annotation.AnnotationFilter)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.util.DefaultPropertiesPersister: void load(java.util.Properties,java.io.InputStream)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList: boolean isEmpty()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.JumboEnumSet: int size()>
<java.security.Provider: void implPutAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setPropertyNamingStrategy(java.lang.String)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><org.jruby.RubyHash: boolean isEmpty()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory: java.util.Collection createOperations(org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration: org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter stringOrNumberMigrationVersionConverter()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Object: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.Self: boolean equals(java.lang.Object)>
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void <init>(org.springframework.jdbc.core.JdbcOperations)>-><org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$1: void <init>(org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate,int,float,boolean)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setInitializeUserDetailsBeanManagerConfigurer(org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer)>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>-><java.util.ArrayList: void <init>()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setConcurrentMapCacheManager(org.springframework.cache.concurrent.ConcurrentMapCacheManager)>
<java.util.Hashtable$KeySet: void clear()>-><java.security.Provider: void clear()>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler methodSecurityExpressionHandler()>-><org.springframework.security.config.core.GrantedAuthorityDefaults: java.lang.String getRolePrefix()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setOpenEntityManagerInViewInterceptor(org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void warn(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.server.handlers.cache.LRUCache: void add(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String[] getViewNames()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><org.jruby.RubyHash: java.lang.Object put(java.lang.Object,java.lang.Object)>
<io.undertow.util.HeaderValues: java.util.List subList(int,int)>-><java.lang.IndexOutOfBoundsException: void <init>()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: java.lang.Object getSuggestedValue(org.springframework.beans.factory.config.DependencyDescriptor)>-><org.springframework.core.MethodParameter: java.lang.annotation.Annotation[] getMethodAnnotations()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.locale.BaseLocale$Key: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.javasupport.JavaArray: int hashCode()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.web.filter.CharacterEncodingFilter: void setForceRequestEncoding(boolean)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.WeakHashMap$Values: void clear()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: int hashCode()>
<org.springframework.security.core.context.SecurityContextImpl: int hashCode()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><io.undertow.util.HeaderValues: void clear()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration: io.micrometer.core.instrument.simple.SimpleMeterRegistry simpleMeterRegistry(io.micrometer.core.instrument.simple.SimpleConfig,io.micrometer.core.instrument.Clock)>
<java.util.EnumMap: void <init>(java.util.Map)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: boolean isEmpty()>
<org.springframework.boot.actuate.endpoint.Sanitizer: java.util.regex.Pattern getPattern(java.lang.String)>-><java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.lang.String: boolean isEmpty()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: int hashCode()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration: void <init>()>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void addMapping(java.lang.String,java.lang.Class)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><io.undertow.servlet.spec.ServletCookieAdaptor: java.lang.String getValue()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<io.undertow.util.HeaderValues: java.lang.String set(int,java.lang.String)>-><java.lang.IllegalArgumentException: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate: io.undertow.servlet.spec.ServletPrintWriterDelegate newInstance(io.undertow.servlet.spec.ServletPrintWriter)>-><java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: org.springframework.transaction.jta.JtaTransactionManager transactionManager(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.transaction.config.JtaTransactionManagerFactoryBean: void <init>()>
<java.lang.Object: java.lang.String toString()>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: int hashCode()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.text.AttributeEntry: java.lang.Object getKey()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeMap$Values: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getContentType()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.metamodel.model.domain.NavigableRole: int hashCode()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><java.util.Collections: java.util.Map emptyMap()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.MonthDay: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.jar.Attributes: java.util.Set entrySet()>
<org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration: io.micrometer.core.instrument.composite.CompositeMeterRegistry compositeMeterRegistry(io.micrometer.core.instrument.Clock,java.util.List)>-><io.micrometer.core.instrument.composite.CompositeMeterRegistry: void <init>(io.micrometer.core.instrument.Clock,java.lang.Iterable)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.RegularEnumSet: int size()>
<org.springframework.boot.autoconfigure.mongo.MongoProperties: java.lang.String getMongoClientDatabase()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: java.lang.String determineUri()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.HashMap$Values: int size()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration: void <init>()>
<io.undertow.util.HeaderValues: java.util.ListIterator listIterator()>-><io.undertow.util.HeaderValues: java.util.ListIterator iterator(int,boolean)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder awaitTermination(boolean)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.BitSet: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.context.support.PropertySourcesPlaceholderConfigurer: void <init>()>-><org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void <init>()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setCorsConfigurations(java.util.Map)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashMap$Values: void clear()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>-><java.util.LinkedHashMap: void <init>(java.util.Map)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebFluxConfigurer(org.springframework.web.reactive.config.WebFluxConfigurer)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter createRequestMappingHandlerAdapter()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter createRequestMappingHandlerAdapter()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setUndertowReactiveWebServerFactory(org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory)>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(org.springframework.security.core.userdetails.UserDetails[])>-><org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Collection)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Hashtable: java.util.Set keySet()>
<io.undertow.util.HeaderValues: void offerLastMultiValue(java.lang.String,int,java.lang.String[])>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.HashMap$Values: int size()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>-><org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback(java.lang.String)>
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.Multimap delegate()>-><com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.ListMultimap delegate()>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setCallableInterceptors(java.util.List)>-><java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.Arrays$ArrayList: java.lang.Object get(int)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.javasupport.JavaArray: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setThreadDumpEndpoint(org.springframework.boot.actuate.management.ThreadDumpEndpoint)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.LocalVariable: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<javax.net.ssl.SNIHostName: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.text.AttributeEntry: java.lang.Object getKey()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.String toString()>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver authenticationPrincipalArgumentResolver()>-><org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver: void setBeanResolver(org.springframework.expression.BeanResolver)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object get(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject$SecureSet$6: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.Log4J2MetricsAutoConfiguration: void <init>()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String escapeHtml(java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.annotation.Annotation,java.lang.Class)>-><org.springframework.core.annotation.MissingMergedAnnotation: org.springframework.core.annotation.MergedAnnotation withNonMergedAttributes()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.net.Inet6Address: int hashCode()>
<org.springframework.core.Conventions: java.lang.String pluralize(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.chrono.ISOChronology: int hashCode()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: void <init>()>-><java.util.ArrayList: void <init>()>
<java.text.AttributeEntry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping createRequestMappingHandlerMapping()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping createRequestMappingHandlerMapping()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer freeMarkerConfigurer()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>(java.lang.Iterable)>-><java.util.concurrent.CopyOnWriteArrayList: void <init>()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void addUrlMappings(java.lang.String[])>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void <init>(io.undertow.servlet.handlers.ServletRequestContext,int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: org.springframework.cache.support.SimpleCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers,java.util.Collection)>-><org.springframework.cache.support.SimpleCacheManager: void setCaches(java.util.Collection)>
<org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,java.util.List,java.util.Collection)>-><java.util.Collections: java.util.List emptyList()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.net.URL: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.EndpointId: void logWarning(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor endpointCachingOperationInvokerAdvisor(org.springframework.core.env.Environment)>-><org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor: void <init>(java.util.function.Function)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter: java.util.Set asSet(java.util.Collection)>-><java.util.stream.Collectors: java.util.stream.Collector toSet()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.locale.BaseLocale: int hashCode()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateNonEmpty(io.undertow.util.HttpString,java.lang.Object[],int,int,java.lang.Object)>-><io.undertow.util.HeaderValues: void <init>(io.undertow.util.HttpString)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><org.springframework.boot.info.GitProperties: java.lang.Long parseEpochSecond(java.lang.String)>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$3$1: void accept(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.jruby.util.collections.WeakHashSet: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: int hashCode()>
<org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration: void <init>()>-><org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Map)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><org.jruby.RubyArray: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.FloatNode: int hashCode()>
<java.util.Collections$SynchronizedCollection: boolean isEmpty()>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.web.cors.CorsConfiguration: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.HammerHead: void <init>(org.owasp.webgoat.session.Course)>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration: com.fasterxml.jackson.module.paramnames.ParameterNamesModule parameterNamesModule()>-><com.fasterxml.jackson.module.paramnames.ParameterNamesModule: void <init>(com.fasterxml.jackson.annotation.JsonCreator$Mode)>
<org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<com.google.common.collect.Maps: com.google.common.base.Function asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$11: void <init>(com.google.common.collect.Maps$EntryTransformer)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object buildLazyResolutionProxy(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>-><org.springframework.aop.framework.AdvisedSupport: void addInterface(java.lang.Class)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<io.undertow.servlet.core.ManagedServlets: io.undertow.servlet.handlers.ServletHandler addServlet(io.undertow.servlet.api.ServletInfo)>-><io.undertow.servlet.core.DeploymentImpl: void addLifecycleObjects(io.undertow.servlet.core.Lifecycle[])>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain servletChain(io.undertow.server.HttpHandler,io.undertow.servlet.core.ManagedServlet,java.util.Map,java.lang.String,io.undertow.servlet.api.DeploymentInfo,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><io.undertow.servlet.handlers.ServletPathMatches: io.undertow.server.HttpHandler wrapHandlers(io.undertow.server.HttpHandler,java.util.List)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.lang.String: int length()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<io.undertow.util.QueryParameterUtils: void handleQueryParameter(java.lang.String,java.util.Map,int,int,int,java.lang.String,boolean)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.IdentityHashMap$KeySet: int hashCode()>
<org.springframework.security.config.annotation.rsocket.SecuritySocketAcceptorInterceptorConfiguration: org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor securitySocketAcceptorInterceptor(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor: void <init>(io.rsocket.plugins.SocketAcceptorInterceptor)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.jar.Attributes$Name: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer: void <init>()>-><org.springframework.boot.autoconfigure.web.ResourceProperties: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Vector$Itr: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.http.server.reactive.ReactorServerHttpResponse: void <init>(reactor.netty.http.server.HttpServerResponse,org.springframework.core.io.buffer.DataBufferFactory)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.util.Date: long getTime()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.IdentityHashMap$KeySet: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder requestFactory(java.lang.Class)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerMapping compositeHandlerMapping()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMappingsEndpoint(org.springframework.boot.actuate.web.mappings.MappingsEndpoint)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration: void <init>()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.WeakHashMap$KeySet: void clear()>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Short: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyProperties getSaml2RelyingPartyPropertiesInstance()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.web.servlet.error.DefaultErrorAttributes errorAttributes()>-><org.springframework.boot.web.servlet.error.DefaultErrorAttributes: void <init>(boolean)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration: org.springframework.context.support.PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setProducePartialOutputWhileProcessing(boolean)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration: org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar servletEndpointRegistrar(org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>-><org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar: void <init>(java.lang.String,java.util.Collection)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.http.server.reactive.NettyHeadersAdapter: void add(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: void add(java.lang.String,java.lang.String)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.http.client.ClientHttpRequestFactory buildRequestFactory()>-><org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: void <init>()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.util.ObjectIdentifier: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(java.lang.Class,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.core.ResolvableType: org.springframework.core.ResolvableType forClass(java.lang.Class,java.lang.Class)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$SynchronizedList: int hashCode()>
<org.springframework.boot.actuate.endpoint.EndpointId: void logWarning(java.lang.String)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: boolean isWarnEnabled()>
<org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String migrateLegacyId(org.springframework.core.env.Environment,java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.HashMap$Values: void clear()>
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>-><org.springframework.web.servlet.FrameworkServlet: void setApplicationContext(org.springframework.context.ApplicationContext)>
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: void <init>()>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.calendar.ZoneInfo: int hashCode()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCompositeHandlerMapping(org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerMapping)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.net.Inet6Address: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: boolean isRoleBasedAccessControlEnabled()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: java.lang.String getPassword()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.health.HealthStatusHttpMapper: void addStatusMapping(java.lang.String,java.lang.Integer)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.Jsp: void setRegistered(boolean)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain servletChain(io.undertow.server.HttpHandler,io.undertow.servlet.core.ManagedServlet,java.util.Map,java.lang.String,io.undertow.servlet.api.DeploymentInfo,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><io.undertow.servlet.core.ManagedServlet: io.undertow.servlet.api.ServletInfo getServletInfo()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.crypto.CryptoPermission: int hashCode()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.AbstractSet: int hashCode()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.internal.util.Pair: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyBoolean: int hashCode()>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.ArrayList: boolean isEmpty()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><io.undertow.servlet.api.DeploymentInfo: boolean isAllowNonStandardWrappers()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$EntrySet: int size()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<io.undertow.server.handlers.cache.LRUCache$CacheEntry: void <init>(java.lang.Object,java.lang.Object,long)>-><java.lang.Object: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.Row: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setPathPrefixes(java.util.Map)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter: void <init>()>-><org.springframework.web.filter.RequestContextFilter: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Double: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.ArrayDeque: int size()>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: org.springframework.security.core.userdetails.UserDetails getUserDetails(org.springframework.boot.autoconfigure.security.SecurityProperties$User,java.lang.String)>-><org.springframework.security.core.userdetails.User: org.springframework.security.core.userdetails.User$UserBuilder withUsername(java.lang.String)>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource methodMetadataSource(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>-><org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource: void <init>(java.util.List)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void setRootViewName(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.base.AbstractDuration: int hashCode()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.text.PatternEntry: int hashCode()>
<java.util.AbstractList: void removeRange(int,int)>-><java.util.AbstractList$Itr: void remove()>
<java.util.AbstractList: void clear()>-><java.util.SubList: int size()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties getConfigurationPropertiesReportEndpointPropertiesInstance()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues: java.util.ListIterator listIterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties getTaskSchedulingPropertiesInstance()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build(java.lang.Class)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<io.undertow.util.QueryParameterUtils: void handleQueryParameter(java.lang.String,java.util.Map,int,int,int,java.lang.String,boolean)>-><java.util.LinkedList: boolean add(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><java.util.Collections: java.util.List emptyList()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher createDefaultRequestMacher()>-><org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher pathMatchers(org.springframework.http.HttpMethod,java.lang.String[])>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.web.method.ControllerAdviceBean: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><io.undertow.util.HeaderValues: int size()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint scheduledTasksEndpoint(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint: void <init>(java.util.Collection)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.xnio.OptionMap: boolean get(org.xnio.Option,boolean)>-><java.lang.Boolean: boolean booleanValue()>
<org.owasp.webgoat.csrf.ForgedReviews: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.format.number.money.Jsr354NumberFormatAnnotationFormatterFactory: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPingHealthIndicator(org.springframework.boot.actuate.health.PingHealthIndicator)>
<org.springframework.boot.actuate.endpoint.web.PathMapper: java.lang.String getRootPath(java.util.List,org.springframework.boot.actuate.endpoint.EndpointId)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setViewNames(java.lang.String[])>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.TemporaryVariable: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.ContentTypeOptionsServerHttpHeadersWriter: void <init>()>-><java.lang.Object: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><java.lang.Object: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.Fixnum: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.io.support.EncodedResource: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setUseForwardHeaders(java.lang.Boolean)>
<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: int size()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.context.ApplicationContext)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.StringCharacterIterator: int hashCode()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.WeakHashMap: boolean isEmpty()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeSet: int size()>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer: void <init>(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding)>-><java.lang.Object: void <init>()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: void <init>()>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$1: void <init>(org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: int executeUpdate(java.lang.String)>
<org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: void <init>()>-><java.time.Duration: java.time.Duration ofSeconds(long)>
<io.undertow.servlet.core.ManagedServlets: io.undertow.servlet.handlers.ServletHandler addServlet(io.undertow.servlet.api.ServletInfo)>-><io.undertow.servlet.core.ManagedServlet: void <init>(io.undertow.servlet.api.ServletInfo,io.undertow.servlet.spec.ServletContextImpl)>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(org.springframework.security.core.userdetails.UserDetails[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void <init>(org.springframework.context.ApplicationEventPublisher)>-><java.util.HashMap: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.UnboxedFixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.lang.String: java.lang.String valueOf(long)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.health.HealthContributor getHealthContributor()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation synthesizeAnnotation(java.lang.annotation.Annotation,java.lang.reflect.AnnotatedElement)>-><org.springframework.core.annotation.MergedAnnotation: org.springframework.core.annotation.MergedAnnotation from(java.lang.Object,java.lang.annotation.Annotation)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.util.Set entrySet()>
<java.util.stream.SortedOps$RefSortingSink: void end()>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.EnumMap: java.util.Set keySet()>
<java.lang.Object: java.lang.String toString()>-><java.awt.geom.Point2D: int hashCode()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<io.micrometer.core.util.internal.logging.Slf4JLogger: void warn(java.lang.String)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void <init>()>-><java.util.LinkedHashMap: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer errorPageCustomizer(org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.IntervalMonthData: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.ObjectNode: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.springframework.boot.context.properties.source.AliasedConfigurationPropertySource: org.springframework.boot.context.properties.source.ConfigurationPropertyState containsDescendantOf(org.springframework.boot.context.properties.source.ConfigurationPropertyName)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getArgumentResolvers()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.lang.Object)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>
<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set keySet()>-><java.util.Collections$UnmodifiableMap: java.util.Set keySet()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<com.google.common.collect.Maps: java.util.Map transformValues(java.util.Map,com.google.common.base.Function)>-><com.google.common.collect.Maps: com.google.common.collect.Maps$EntryTransformer asEntryTransformer(com.google.common.base.Function)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>-><io.undertow.util.HeaderMap: io.undertow.util.HeaderMap put(io.undertow.util.HttpString,java.lang.String)>
<org.springframework.boot.web.client.RootUriTemplateHandler: org.springframework.boot.web.client.RootUriTemplateHandler addTo(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebFluxEndpointHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: void setValue(java.lang.Object)>-><io.undertow.util.HeaderValues: java.lang.Object set(int,java.lang.Object)>
<java.util.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.MBeanParameterInfo: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: boolean equals(java.lang.Object)>
<java.util.stream.SortedOps$SizedRefSortingSink: void end()>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<org.jruby.RubyArray: void clear()>-><org.jruby.util.collections.StringArraySet: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.AbstractSet: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.base.AbstractPeriod: int hashCode()>
<org.springframework.security.config.web.server.ServerHttpSecurity: void <init>()>-><java.util.ArrayList: void <init>()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<io.micrometer.core.util.internal.logging.JdkLogger: void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><io.micrometer.core.util.internal.logging.AbstractInternalLogger: java.lang.String name()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.List: void sort(java.util.Comparator)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.http.HttpProperties getHttpPropertiesInstance()>-><org.springframework.boot.autoconfigure.http.HttpProperties: void setLogRequestDetails(boolean)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.asm.MemberSubstitution: int hashCode()>
<java.security.Provider: void implPutAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.EnumMap: java.util.Set entrySet()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration: org.springframework.boot.actuate.security.AuthenticationAuditListener authenticationAuditListener()>-><org.springframework.boot.actuate.security.AuthenticationAuditListener: void <init>()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.elasticsearch.client.RestClient: org.elasticsearch.client.RestClientBuilder builder(org.apache.http.HttpHost[])>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void closeAsync()>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void clearFlags(int)>
<org.springframework.context.support.AbstractApplicationContext: boolean isSingleton(java.lang.String)>-><org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.PreparedStatement prepareStatement(java.lang.String)>
<org.springframework.boot.actuate.endpoint.EndpointId: org.springframework.boot.actuate.endpoint.EndpointId of(org.springframework.core.env.Environment,java.lang.String)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String migrateLegacyId(org.springframework.core.env.Environment,java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedValues: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.ArrayNode: int hashCode()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: boolean containsKey(java.lang.Object)>
<com.google.common.collect.Multimaps$UnmodifiableMultimap: void clear()>-><java.lang.UnsupportedOperationException: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source when(java.util.function.Predicate)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<io.undertow.util.HeaderValues: java.lang.String pollFirst()>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTransactionTemplate(org.springframework.transaction.support.TransactionTemplate)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>
<org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration: org.springframework.boot.actuate.system.DiskSpaceHealthIndicator diskSpaceHealthIndicator(org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties)>-><org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: java.io.File getPath()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.x509.GeneralName: int hashCode()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.runtime.Arity: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$TomcatAccessLogCustomizer tomcatManagementAccessLogCustomizer()>
<sun.security.ssl.SSLSessionContextImpl$1: java.lang.String run()>-><java.lang.System: java.lang.String getProperty(java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyFixnum: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.AbstractMap$1: boolean isEmpty()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String determineHighestPriorityCandidate(java.util.Map,java.lang.Class)>-><java.lang.Integer: int intValue()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.Instant: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform get()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.jruby.util.collections.StringArraySet: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.AttributeAccessorSupport: int hashCode()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$SingletonList: int size()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBuildProperties(org.springframework.boot.info.BuildProperties)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration: io.micrometer.core.instrument.binder.logging.LogbackMetrics logbackMetrics()>-><io.micrometer.core.instrument.binder.logging.LogbackMetrics: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webwolf.user.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.springframework.validation.BindException: void rejectValue(java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Hashtable$EntrySet: int size()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.jruby.RubyHash: java.util.Set entrySet()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration: org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider servletMappingDescriptionProvider()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getCharacterEncoding()>-><io.undertow.servlet.api.DeploymentInfo: java.lang.String getDefaultEncoding()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.security.SecurityProperties getSecurityPropertiesInstance()>
<sun.text.normalizer.CharTrie: int getSurrogateOffset(char,char)>-><sun.net.idn.StringPrep$StringPrepTrieImpl: int getFoldingOffset(int)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration: org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider dispatcherServletMappingDescriptionProvider()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties getDiskSpaceHealthIndicatorPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: void <init>()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration$ReactiveTraceFilterConfiguration: org.springframework.boot.actuate.web.trace.reactive.HttpTraceWebFilter httpTraceWebFilter(org.springframework.boot.actuate.trace.http.HttpTraceRepository,org.springframework.boot.actuate.trace.http.HttpExchangeTracer,org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties)>-><org.springframework.boot.actuate.web.trace.reactive.HttpTraceWebFilter: void <init>(org.springframework.boot.actuate.trace.http.HttpTraceRepository,org.springframework.boot.actuate.trace.http.HttpExchangeTracer,java.util.Set)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration: org.springframework.security.config.annotation.rsocket.RSocketSecurity rsocketSecurity(org.springframework.context.ApplicationContext)>-><org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration: org.springframework.security.authentication.ReactiveAuthenticationManager authenticationManager()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties getLogFileWebEndpointPropertiesInstance()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><java.util.AbstractCollection: boolean contains(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Hashtable$EntrySet: int size()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.Collections$UnmodifiableCollection: void clear()>
<com.google.common.collect.ForwardingMultimap: boolean isEmpty()>-><com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.Multimap delegate()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.JumboEnumSet: boolean isEmpty()>
<java.util.HashMap$Node: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.JumboEnumSet: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.aop.framework.JdkDynamicAopProxy: int hashCode()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.springframework.jdbc.support.JdbcUtils: java.lang.Object extractDatabaseMetaData(javax.sql.DataSource,org.springframework.jdbc.support.DatabaseMetaDataCallback)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.DatabaseMetaData getMetaData()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration: java.lang.Object createDataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,java.lang.Class)>-><org.springframework.boot.jdbc.DataSourceBuilder: javax.sql.DataSource build()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.imageio.ImageTypeSpecifier$Interleaved: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: void clear()>
<com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>-><com.google.common.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory,java.lang.String,java.lang.Class[])>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.api.Deployment getDeployment()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<sun.security.ssl.SecureKey: int hashCode()>-><java.lang.String: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.util.collections.WeakHashSet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.base.AbstractPeriod: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.type.ClassKey: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.ISOChronology: int hashCode()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyMatchData: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection convertToEndpoints(java.util.Collection)>-><java.util.LinkedHashSet: void <init>()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.util.RegexpOptions: int hashCode()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.TimeData: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.Vector: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$EmptyMap: int hashCode()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyNil: int hashCode()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()>-><org.springframework.beans.AbstractPropertyAccessor: void setExtractOldValueForEditor(boolean)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.annotation.Annotation,java.lang.Class)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement()>
<com.google.common.collect.Maps$TransformedEntriesMap: void <init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$ImprovedAbstractMap: void <init>()>
<org.springframework.core.annotation.AbstractMergedAnnotation: java.lang.Class getClass(java.lang.String)>-><org.springframework.core.annotation.AbstractMergedAnnotation: java.lang.Object getRequiredAttributeValue(java.lang.String,java.lang.Class)>
<io.undertow.util.CopyOnWriteMap: int size()>-><java.util.Collections$EmptyMap: int size()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletRegistrationBean(org.springframework.boot.web.servlet.ServletRegistrationBean)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.io.ByteArrayResource: boolean equals(java.lang.Object)>
<java.lang.management.ManagementFactory: java.util.List getMemoryPoolMXBeans()>-><sun.management.ManagementFactoryHelper: java.util.List getMemoryPoolMXBeans()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.binder.logging.LogbackMetrics: void <init>(java.lang.Iterable,ch.qos.logback.classic.LoggerContext)>-><java.util.concurrent.ConcurrentHashMap: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.jruby.util.collections.WeakHashSet: boolean isEmpty()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration: org.springframework.boot.actuate.audit.AuditEventsEndpoint auditEventsEndpoint(org.springframework.boot.actuate.audit.AuditEventRepository)>-><org.springframework.boot.actuate.audit.AuditEventsEndpoint: void <init>(org.springframework.boot.actuate.audit.AuditEventRepository)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void addMapping(java.lang.String,java.lang.Class)>-><java.lang.StringBuilder: void <init>()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>()>-><java.util.Collections: java.util.List emptyList()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.EnumMap$1: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setName(java.lang.String)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.io.File: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.boot.web.servlet.error.DefaultErrorAttributes: void <init>(boolean)>-><java.lang.Object: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setConnectTimeout(org.springframework.http.client.ClientHttpRequestFactory)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.User: java.util.SortedSet sortAuthorities(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties getEnvironmentEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: java.lang.Long getTimeout()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.validation.BindException: java.util.List getAllErrors()>-><org.springframework.validation.BindException: java.util.List getAllErrors()>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.CompositeType: int hashCode()>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void setMaxAge(java.time.Duration)>-><org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void updateDelegate()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setContentType(java.lang.String)>
<java.util.EnumMap: void <init>(java.util.Map)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$Values: int size()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties: void setBasePath(java.lang.String)>-><org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.HashSet: int size()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><com.thoughtworks.xstream.core.util.WeakCache: java.util.Set entrySet()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getDefaultMediaTypes()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void info(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setClassLoaderMetrics(io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.boot.autoconfigure.web.ResourceProperties: void <init>()>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.authentication.logout.LogoutWebFilter: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: void <init>(io.undertow.util.HttpString)>-><java.util.AbstractCollection: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Enum: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: int hashCode()>
<java.util.AbstractMap: int hashCode()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration: void <init>()>
<java.util.stream.ReferencePipeline$2$1: void accept(java.lang.Object)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<org.springframework.cache.support.NoOpCacheManager: void <init>()>-><java.util.concurrent.ConcurrentHashMap: void <init>(int)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<org.springframework.web.cors.CorsConfiguration: void addAllowedOrigin(java.lang.String)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: boolean isEmpty()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletCookieAdaptor: void <init>(javax.servlet.http.Cookie)>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><java.util.AbstractCollection: java.lang.Object[] toArray()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$EmptySet: boolean isEmpty()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.io.InputStreamResource: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.Sanitizer: void setKeysToSanitize(java.lang.String[])>-><org.springframework.boot.actuate.endpoint.Sanitizer: java.util.regex.Pattern getPattern(java.lang.String)>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder roles(java.lang.String[])>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setReadTimeout(org.springframework.http.client.ClientHttpRequestFactory)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<java.util.AbstractCollection: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$UnmodifiableSet: int hashCode()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String[] getViewNames()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addNameMatch(java.lang.String,io.undertow.servlet.handlers.ServletChain)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.ArrayType: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.io.ByteArrayResource: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyModule: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jcodings.Encoding: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setCharacterEncoding(java.lang.String)>
<sun.security.jca.GetInstance: java.security.Provider$Service getService(java.lang.String,java.lang.String,java.lang.String)>-><java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint getFilterEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: int hashCode()>
<org.springframework.boot.actuate.endpoint.Sanitizer: java.util.regex.Pattern getPattern(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer: void <init>(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setProfileFromId(java.lang.String)>
<java.lang.ProcessEnvironment$StringValues: void clear()>-><java.util.HashMap$Values: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.BuddhistCalendar: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration: org.springframework.boot.autoconfigure.http.HttpMessageConverters messageConverters(org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.concurrent.ArrayBlockingQueue: void clear()>
<io.undertow.server.handlers.cache.LRUCache: void bumpAccess(io.undertow.server.handlers.cache.LRUCache$CacheEntry)>-><io.undertow.server.handlers.cache.LRUCache$CacheEntry: java.lang.Object claimToken()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object put(java.lang.Object,java.lang.Object)>
<sun.security.util.DisabledAlgorithmConstraints: boolean permits(java.util.Set,java.lang.String,java.security.AlgorithmParameters)>-><java.util.RegularEnumSet: boolean isEmpty()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.util.Set getExtensions()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.Collections$SetFromMap: boolean remove(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.lang.Object remove(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpTraceEndpoint(org.springframework.boot.actuate.trace.http.HttpTraceEndpoint)>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object buildLazyResolutionProxy(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>-><org.springframework.beans.factory.support.GenericTypeAwareAutowireCandidateResolver: org.springframework.beans.factory.BeanFactory getBeanFactory()>
<org.springframework.security.config.web.server.ServerHttpSecurity: org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec logout()>-><org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.ForEachOps$ForEachOp$OfRef: void accept(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.springframework.web.servlet.i18n.SessionLocaleResolver: java.util.Locale resolveLocale(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.util.WebUtils: java.lang.Object getSessionAttribute(javax.servlet.http.HttpServletRequest,java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBean(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>
<org.springframework.beans.CachedIntrospectionResults: boolean isClassLoaderAccepted(java.lang.ClassLoader)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void closeAsync()>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void createChannel()>
<java.util.stream.Nodes$SizedCollectorTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>
<org.springframework.security.authentication.AnonymousAuthenticationToken: void <init>(java.lang.Integer,java.lang.Object,java.util.Collection)>-><org.springframework.util.Assert: void notEmpty(java.util.Collection,java.lang.String)>
<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher pathMatchers(org.springframework.http.HttpMethod,java.lang.String[])>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: void <init>(java.util.List)>
<org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint scheduledTasksEndpoint(org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.jsoup.helper.ChangeNotifyingArrayList: boolean add(java.lang.Object)>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$SynchronizedCollection: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<org.springframework.http.MediaType: org.springframework.http.MediaType valueOf(java.lang.String)>-><org.springframework.http.MediaType: org.springframework.http.MediaType parseMediaType(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.awt.Color: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashSet: void clear()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isExposeSessionAttributes()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void <init>()>-><org.springframework.web.filter.CharacterEncodingFilter: void <init>()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: void clear()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: java.io.File getFile()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$EmptyList: boolean isEmpty()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<io.undertow.server.handlers.cache.LRUCache$CacheEntry: java.lang.Object claimToken()>-><java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultAuthenticationEventPublisher(org.springframework.security.authentication.DefaultAuthenticationEventPublisher)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.UUID: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.representations.BasicBlock: int hashCode()>
<org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter: org.springframework.security.web.server.header.ServerHttpHeadersWriter createDelegate(org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy)>-><org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy: java.lang.String getPolicy()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateNonEmpty(io.undertow.util.HttpString,java.lang.Object[],int,int,java.lang.Object)>-><io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateEntry(io.undertow.util.HttpString)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration: void <init>()>
<org.springframework.web.context.support.ServletContextAwareProcessor: javax.servlet.ServletContext getServletContext()>-><org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor: javax.servlet.ServletConfig getServletConfig()>
<org.springframework.boot.task.TaskExecutorBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration: void <init>()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<sun.security.ssl.SSLSessionImpl: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.jruby.ir.IRBuilder: org.jruby.ir.operands.Operand buildFixnumCase(org.jruby.ast.CaseNode)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.util.AbstractAttachable: java.lang.Object getAttachment(io.undertow.util.AttachmentKey)>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder password(java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.lang.StringBuilder: void <init>()>
<io.micrometer.core.util.internal.logging.LocationAwareSlf4JLogger: boolean isWarnEnabled()>-><ch.qos.logback.classic.Logger: boolean isWarnEnabled()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.core.annotation.MergedAnnotations: org.springframework.core.annotation.MergedAnnotations from(java.lang.reflect.AnnotatedElement,org.springframework.core.annotation.MergedAnnotations$SearchStrategy)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.sql.Timestamp: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.javasupport.JavaConstructor: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMapping,java.util.Collection,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.cors.CorsConfiguration,boolean)>-><org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
<io.undertow.servlet.spec.ServletPrintWriter: void <init>(io.undertow.servlet.spec.ServletOutputStreamImpl,java.lang.String)>-><io.undertow.servlet.spec.ServletPrintWriter: void createEncoder()>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.IntNode: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.Instant: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.IdentityHashMap$KeySet: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.stream.StreamOpFlag: int fromCharacteristics(java.util.Spliterator)>-><java.util.ArrayDeque$DeqSpliterator: int characteristics()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.InfoProperties: java.util.Properties copy(java.util.Properties)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.io.ByteArrayResource: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.lang.Byte: int hashCode()>
<org.springframework.cache.support.NoOpCacheManager: void <init>()>-><java.util.LinkedHashSet: void <init>(int)>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$EntrySet: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.EnumMap$Values: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.field.MillisDurationField: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.csrf.CsrfWebFilter: void <init>()>-><org.springframework.security.web.server.csrf.WebSessionServerCsrfTokenRepository: void <init>()>
<java.lang.Object: java.lang.String toString()>-><java.util.JapaneseImperialCalendar: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><ch.qos.logback.core.subst.Token: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View: java.lang.String getSuffix()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer parsePath(java.lang.String)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.BeanNameViewResolver beanNameViewResolver()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setPrefix(java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configurePathMatch(org.springframework.web.servlet.config.annotation.PathMatchConfigurer)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.asm.ConstantDynamic: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.web.method.ControllerAdviceBean: int hashCode()>
<org.springframework.boot.web.servlet.filter.OrderedFormContentFilter: void <init>()>-><org.springframework.web.filter.FormContentFilter: void <init>()>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties getInfoContributorPropertiesInstance()>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpTraceFilter(org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter)>
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>-><java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>
<io.undertow.servlet.handlers.ServletHandler: void <init>(io.undertow.servlet.core.ManagedServlet)>-><java.lang.Object: void <init>()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: boolean addAll(int,java.util.Collection)>
<io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: java.lang.Class getFirstClassFound(java.util.List)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.thymeleaf.spring5.SpringWebFluxTemplateEngine: void <init>()>-><org.thymeleaf.TemplateEngine: void setEngineContextFactory(org.thymeleaf.context.IEngineContextFactory)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$InvocationResult invoke(java.lang.Object,java.util.function.Supplier)>-><org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: boolean isLambdaGenericProblem(java.lang.ClassCastException)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.BuddhistChronology: int hashCode()>
<org.owasp.webgoat.lessons.Hint: int hashCode()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getAssignmentPath()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration: void <init>()>
<org.springframework.web.servlet.i18n.SessionLocaleResolver: java.util.Locale determineDefaultLocale(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.i18n.AbstractLocaleResolver: java.util.Locale getDefaultLocale()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><javax.servlet.http.Cookie: int getVersion()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String readPublicKey()>-><org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException: void <init>(java.lang.String,java.lang.Object,java.lang.String)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setDeferredResultInterceptors(java.util.List)>-><java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.http.client.ClientHttpRequestFactory buildRequestFactory()>-><org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter(org.springframework.boot.autoconfigure.http.HttpProperties)>-><org.springframework.http.converter.StringHttpMessageConverter: void <init>(java.nio.charset.Charset)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer initializeUserDetailsBeanManagerConfigurer(org.springframework.context.ApplicationContext)>-><org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer: void <init>(org.springframework.context.ApplicationContext)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Locale: int hashCode()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.idor.IDOREditOtherProfiile: void <init>()>
<org.jruby.RubyModule: boolean defineAnnotatedMethod(java.lang.String,java.util.List,org.jruby.runtime.MethodFactory)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: void <init>(org.springframework.http.MediaType[])>-><java.lang.Object: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRestClient(org.elasticsearch.client.RestClient)>
<java.util.Hashtable: java.lang.String toString()>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: boolean flushBufferAsync(boolean)>-><java.nio.Buffer: java.nio.Buffer flip()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.io.PrintWriter getWriter()>-><io.undertow.servlet.spec.ServletPrintWriterDelegate: io.undertow.servlet.spec.ServletPrintWriterDelegate newInstance(io.undertow.servlet.spec.ServletPrintWriter)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.core.io.ByteArrayResource: java.io.InputStream getInputStream()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$KeySet: boolean isEmpty()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.info.ProjectInfoProperties)>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Vector: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>-><io.undertow.servlet.spec.ContentTypeInfo: java.lang.String getContentType()>
<io.micrometer.core.instrument.binder.logging.Log4j2Metrics: void <init>()>-><io.micrometer.core.instrument.binder.logging.Log4j2Metrics: void <init>(java.lang.Iterable)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: java.lang.Object extractValue(org.springframework.core.annotation.AnnotationAttributes)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerMapping: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer(org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>
<org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension: void <init>(org.springframework.boot.actuate.env.EnvironmentEndpoint)>-><java.lang.Object: void <init>()>
<org.hibernate.tool.schema.internal.Helper: org.hibernate.tool.schema.spi.ScriptSourceInput interpretScriptSourceSetting(java.lang.Object,org.hibernate.boot.registry.classloading.spi.ClassLoaderService,java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><org.jruby.RubyHash: java.lang.Object get(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.Boolean: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointFiltered(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<com.google.common.collect.Maps$TransformedEntriesNavigableMap: void <init>(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$TransformedEntriesSortedMap: void <init>(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setDatabase(java.lang.String)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.zip.ZipEntry: int hashCode()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCachesEndpoint(org.springframework.boot.actuate.cache.CachesEndpoint)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.io.ObjectStreamClass$FieldReflectorKey: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches$MatchData: void <init>(io.undertow.servlet.handlers.ServletHandler,java.lang.String,java.lang.String,javax.servlet.http.MappingMatch,boolean)>-><java.lang.Object: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.QueryParameterUtils: java.util.Map mergeQueryParametersWithNewQueryString(java.util.Map,java.lang.String,java.lang.String)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.cache.concurrent.ConcurrentMapCache: void <init>(java.lang.String,java.util.concurrent.ConcurrentMap,boolean,org.springframework.core.serializer.support.SerializationDelegate)>-><org.springframework.cache.support.AbstractValueAdaptingCache: void <init>(boolean)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.SortedOps$SizedRefSortingSink: void accept(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebFluxEndpointHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,java.util.List,java.util.Collection,java.util.Collection)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setReactiveManagementChildContextConfiguration$ReactiveManagementWebServerFactoryCustomizer(org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementChildContextConfiguration$ReactiveManagementWebServerFactoryCustomizer)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.validation.Validator getValidator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.YearMonth: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.CSRFGetFlag: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.provider.PolicyParser$PermissionEntry: int hashCode()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter: void <init>()>-><org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter: org.springframework.security.web.server.header.ServerHttpHeadersWriter createDelegate(org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration: org.springframework.boot.actuate.security.AuthorizationAuditListener authorizationAuditListener()>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer localeCharsetMappingsCustomizer()>-><org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer: void <init>(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController basicErrorController(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.beans.factory.ObjectProvider)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<org.springframework.security.config.web.server.ServerHttpSecurity$CsrfSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>-><org.springframework.security.config.web.server.ServerHttpSecurity$CsrfSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object buildLazyResolutionProxy(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>-><org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.ClassLoader)>
<org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory: void <init>()>-><org.springframework.boot.web.server.AbstractConfigurableWebServerFactory: void <init>()>
<io.undertow.util.HeaderMap: void resize()>-><java.lang.Integer: int bitCount(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration: void <init>()>
<io.undertow.util.HeaderValues: void clearInternal()>-><java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>
<io.undertow.servlet.spec.ServletContextImpl: void updateSessionAccessTime(io.undertow.server.HttpServerExchange)>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver conventionErrorViewResolver()>-><org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>
<java.text.AttributeEntry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.web.servlet.support.ErrorPageFilterConfiguration: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeServlet(java.lang.String,boolean)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.actuate.endpoint.Sanitizer: java.util.regex.Pattern getPattern(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<com.google.common.collect.ForwardingMultimap: boolean isEmpty()>-><com.google.common.collect.ForwardingMultimap: boolean isEmpty()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Vector: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.flywaydb.core.internal.database.base.Schema: int hashCode()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>
<org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.header.CacheControlServerHttpHeadersWriter: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.lang.StringBuilder: void <init>()>
<org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents: void <init>(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: java.lang.String getOrDeducePassword(org.springframework.boot.autoconfigure.security.SecurityProperties$User,org.springframework.security.crypto.password.PasswordEncoder)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void info(java.lang.Object)>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><org.springframework.boot.web.servlet.DynamicRegistrationBean: java.lang.String getOrDeduceName(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: javax.servlet.MultipartConfigElement getMultipartConfigElement()>
<org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar: java.lang.String cleanBasePath(java.lang.String)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration: org.springframework.boot.web.servlet.filter.OrderedFormContentFilter formContentFilter()>-><org.springframework.boot.web.servlet.filter.OrderedFormContentFilter: void <init>()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>
<org.jruby.RubyArray: void clear()>-><org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyThread: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ListableBeanFactory,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.ResourceProperties: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.google.common.collect.Maps$Values: boolean isEmpty()>-><java.util.AbstractMap: boolean isEmpty()>
<org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: void <init>(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.security.access.expression.method.ExpressionBasedPostInvocationAdvice: void <init>(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.springframework.web.servlet.FrameworkServlet: void <init>()>-><java.util.ArrayList: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setContentType(java.lang.String)>
<org.springframework.web.cors.CorsConfiguration: void addAllowedOrigin(java.lang.String)>-><org.springframework.web.cors.CorsConfiguration: void setAllowedOrigins(java.util.List)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()>-><org.springframework.beans.AbstractPropertyAccessor: void setAutoGrowNestedPaths(boolean)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.springframework.security.access.expression.method.ExpressionBasedAnnotationAttributeFactory: void <init>(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>-><java.lang.Object: void <init>()>
<io.undertow.server.handlers.cache.LRUCache$CacheEntry: java.lang.Object clearToken()>-><java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl: java.lang.Object getAndSet(java.lang.Object,java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey createOperationKey(org.springframework.boot.actuate.endpoint.Operation)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: boolean isAllowNullValues()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers platformTransactionManagerCustomizers(org.springframework.beans.factory.ObjectProvider)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.base.AbstractPartial: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder awaitTermination(boolean)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.google.common.collect.Maps: com.google.common.collect.Maps$EntryTransformer asEntryTransformer(com.google.common.base.Function)>-><com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.AbstractCollection: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHealthStatusHttpMapper(org.springframework.boot.actuate.health.HealthStatusHttpMapper)>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.security.authentication.AbstractUserDetailsReactiveAuthenticationManager: void <init>()>-><org.springframework.security.core.SpringSecurityMessageSource: org.springframework.context.support.MessageSourceAccessor getAccessor()>
<io.undertow.server.handlers.cache.LRUCache: void add(java.lang.Object,java.lang.Object)>-><io.undertow.server.handlers.cache.LRUCache$CacheEntry: void <init>(java.lang.Object,java.lang.Object,long,io.undertow.server.handlers.cache.LRUCache$1)>
<java.net.IDN$1: java.lang.Object run()>-><java.net.IDN$1: java.io.InputStream run()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: java.lang.Object getSuggestedValue(org.springframework.beans.factory.config.DependencyDescriptor)>-><org.springframework.beans.factory.InjectionPoint: java.lang.annotation.Annotation[] getAnnotations()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void setCharacterEncoding(java.lang.String)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.ContentSecurityPolicyServerHttpHeadersWriter: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSecurityExpressionHandler(org.springframework.security.access.expression.SecurityExpressionHandler)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setMaxHttpHeaderSize(org.springframework.util.unit.DataSize)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.PreparedStatement prepareStatement(java.lang.String)>
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.owasp.webgoat.users.WebGoatUser: java.lang.String getUsername()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Env getEnv()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getContentType()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer(org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.jar.Manifest: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><javax.management.openmbean.TabularDataSupport: boolean isEmpty()>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void extendMessageConverters(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.jruby.specialized.RubyArrayOneObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: void modifyCheck()>
<org.owasp.webwolf.requests.Requests: org.owasp.webwolf.requests.Requests$Tracert lambda$get$1(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.springframework.boot.actuate.trace.http.HttpTrace: java.time.Instant getTimestamp()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.HashMap$Node: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.hsqldb.types.CharacterType: java.lang.String convertJavaTimeObject(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCharacterEncoding(java.lang.String)>
<org.springframework.http.server.reactive.ServerHttpResponseDecorator: void <init>(org.springframework.http.server.reactive.ServerHttpResponse)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.util.unit.DataSize: int hashCode()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<io.micrometer.core.instrument.binder.logging.LogbackMetrics: void <init>()>-><io.micrometer.core.instrument.binder.logging.LogbackMetrics: void <init>(java.lang.Iterable)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet: boolean isEmpty()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.Boolean: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.MappingJackson2HttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setBufferRequestBody(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void invoke(org.springframework.http.client.ClientHttpRequestFactory,java.lang.reflect.Method,java.lang.Object[])>
<org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor(org.springframework.core.env.Environment)>-><org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor: void <init>()>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet()>-><org.springframework.web.servlet.DispatcherServlet: void setDetectAllHandlerAdapters(boolean)>
<java.lang.Object: java.lang.String toString()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><org.springframework.boot.web.client.RestTemplateBuilder: void addClientHttpRequestInitializer(org.springframework.web.client.RestTemplate)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: org.springframework.boot.actuate.endpoint.EndpointId getEndpointId()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Integer: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()>
<java.util.EnumMap: int entryHashCode(int)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.String toString()>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.IdentityHashMap: java.util.Set keySet()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration: void <init>()>
<java.util.AbstractMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.security.config.web.server.ServerHttpSecurity$LoginPageSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.zone.ZoneOffsetTransition: int hashCode()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.math.BigInteger: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.io.ObjectInputStream$PeekInputStream: int peek()>-><org.jruby.RubyFile$2: int read()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.io.support.EncodedResource: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.context.ShutdownEndpointAutoConfiguration: org.springframework.boot.actuate.context.ShutdownEndpoint shutdownEndpoint()>
<org.owasp.webgoat.xxe.Comment: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addFormatters(org.springframework.format.FormatterRegistry)>-><java.util.ArrayList: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: java.lang.Object get(int)>
<java.lang.Object: java.lang.String toString()>-><java.lang.Enum: int hashCode()>
<javax.net.ssl.SNIHostName: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerAdapter compositeHandlerAdapter(org.springframework.beans.factory.ListableBeanFactory)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBeanNameViewResolver(org.springframework.web.servlet.view.BeanNameViewResolver)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.TextNode: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMethodSecurityMetadataSourceAdvisor(org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor)>
<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set keySet()>-><com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set keySet()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate build(java.lang.Class)>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.WeakHashMap: boolean isEmpty()>
<java.util.Hashtable: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.representations.BasicBlock: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.Proxy$KeyX: int hashCode()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: void <init>(java.util.Collection)>-><java.lang.Object: void <init>()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$UnmodifiableList: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>-><java.lang.String: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: java.lang.String getRequestContextAttribute()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.LocalTime: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void invalidate()>-><io.undertow.server.handlers.cache.LRUCache: void clear()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.HsqlException: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.AbstractSet: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><java.lang.Object: java.lang.Class getClass()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.core.ErrorPages getErrorPages()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration: org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriberRegistrar securityReactorContextSubscriberRegistrar()>-><org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriberRegistrar: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: boolean isEmpty()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDelegatingApplicationListener(org.springframework.security.context.DelegatingApplicationListener)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.jruby.util.collections.StringArraySet: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><java.util.HashSet: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: int hashCode()>
<org.springframework.core.annotation.AnnotationAwareOrderComparator: void sortIfNecessary(java.lang.Object)>-><org.springframework.core.annotation.AnnotationAwareOrderComparator: void sort(java.util.List)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.prepost.PrePostAdviceReactiveMethodInterceptor securityMethodInterceptor(org.springframework.security.access.method.AbstractMethodSecurityMetadataSource,org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>-><org.springframework.security.access.expression.method.ExpressionBasedPostInvocationAdvice: void <init>(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>
<java.util.Hashtable: java.lang.String toString()>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.TreeSet: boolean isEmpty()>
<org.springframework.validation.AbstractBindingResult: int hashCode()>-><org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.EnumMap$EntrySet: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<sun.security.ssl.SSLSessionImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFilterRegistrationBean(org.springframework.boot.web.servlet.FilterRegistrationBean)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setContinueOnError(boolean)>
<java.lang.Object: java.lang.String toString()>-><java.time.temporal.WeekFields: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.health.StatusAggregator getStatusAggregator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.thymeleaf.templateresolver.ITemplateResolver getITemplateResolver()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.javasupport.JavaObject: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.imageio.ImageTypeSpecifier$Interleaved: int hashCode()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: void <init>(org.springframework.http.MediaType[])>-><java.lang.Object: java.lang.Class getClass()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.api.Location: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.IntervalSecondData: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void <init>()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.micrometer.core.instrument.binder.logging.Log4j2Metrics: void <init>()>-><java.util.Collections: java.util.List emptyList()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.runtime.Arity: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: org.springframework.security.core.userdetails.MapReactiveUserDetailsService reactiveUserDetailsService(org.springframework.boot.autoconfigure.security.SecurityProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(org.springframework.security.core.userdetails.UserDetails[])>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebSession(org.owasp.webgoat.session.WebSession)>
<org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration: org.springframework.security.authentication.ReactiveAuthenticationManager authenticationManager()>-><org.springframework.security.authentication.AbstractUserDetailsReactiveAuthenticationManager: void setPasswordEncoder(org.springframework.security.crypto.password.PasswordEncoder)>
<java.lang.reflect.WeakCache: java.lang.Object get(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: java.lang.Object apply(java.lang.Object,java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.lang.ProcessEnvironment$ExternalData: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.HashSet: java.util.Iterator iterator()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build: java.nio.charset.Charset getEncoding()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder requestFactory(java.lang.Class)>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder requestFactory(java.util.function.Supplier)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getRelativePath(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.web.client.RootUriTemplateHandler: org.springframework.boot.web.client.RootUriTemplateHandler addTo(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.springframework.boot.web.client.RootUriTemplateHandler: void <init>(java.lang.String,org.springframework.web.util.UriTemplateHandler)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: org.springframework.cache.support.SimpleCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers,java.util.Collection)>
<java.util.Spliterator: long getExactSizeIfKnown()>-><java.util.ArrayDeque$DeqSpliterator: int characteristics()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.NullNode: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.javasupport.JavaMethod: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.IdentityHashMap$EntrySet: void clear()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: int getMaxSize()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.TreeMap$EntrySet: int size()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.WeakHashMap$Values: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setReactiveJwtDecoder(org.springframework.security.oauth2.jwt.ReactiveJwtDecoder)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.BasicChronology: int hashCode()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPluginMessages(org.owasp.webgoat.i18n.PluginMessages)>
<java.util.EnumMap$EntrySet: void clear()>-><java.util.EnumMap: void clear()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.boot.web.servlet.server.DocumentRoot: void <init>(org.apache.commons.logging.Log)>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.IRScope: int hashCode()>
<io.undertow.server.handlers.cache.LRUCache$CacheEntry: int hit()>-><java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl: boolean weakCompareAndSet(java.lang.Object,int,int)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(java.lang.Class,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.lang.Class: boolean isInstance(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap: boolean isEmpty()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.xml.SourceHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown: java.time.Duration getAwaitTerminationPeriod()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory undertowServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket: java.lang.String getName()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<java.util.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyBasicObject: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.boot.actuate.logging.LoggersEndpoint: void <init>(org.springframework.boot.logging.LoggingSystem,org.springframework.boot.logging.LoggerGroups)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.HashMap$KeySet: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.BlobDataID: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: org.springframework.security.core.userdetails.MapReactiveUserDetailsService reactiveUserDetailsService(org.springframework.boot.autoconfigure.security.SecurityProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: java.lang.String getOrDeducePassword(org.springframework.boot.autoconfigure.security.SecurityProperties$User,org.springframework.security.crypto.password.PasswordEncoder)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: void <init>(org.springframework.web.servlet.DispatcherServlet,java.lang.String)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: void addUrlMappings(java.lang.String[])>
<java.io.ObjectInputStream$PeekInputStream: int read()>-><org.jruby.RubyFile$2: int read()>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><java.util.Spliterators$2Adapter: boolean hasNext()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isCloudFoundryHealthEndpointExtension(java.lang.Object)>-><org.springframework.core.annotation.MergedAnnotations: org.springframework.core.annotation.MergedAnnotations from(java.lang.reflect.AnnotatedElement)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.apache.logging.log4j.Level: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer servletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.binder.system.ProcessorMetrics: java.lang.Class getFirstClassFound(java.util.List)>-><java.lang.Class: java.lang.Class forName(java.lang.String)>
<com.google.common.collect.ForwardingConcurrentMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedList: void clear()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.server.handlers.resource.ResourceManager$1: io.undertow.server.handlers.resource.Resource getResource(java.lang.String)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.util.AbstractAttachable: java.lang.Object removeAttachment(io.undertow.util.AttachmentKey)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.format.number.money.MonetaryAmountFormatter: void <init>()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.Maps$Values: void clear()>-><com.google.common.collect.Maps$Values: java.util.Map map()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void info(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source asInt(java.util.function.Function)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.springframework.web.servlet.HttpServletBean: void <init>()>-><java.util.HashSet: void <init>(int)>
<java.lang.Object: java.lang.String toString()>-><java.text.FieldPosition: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.logging.log4j.spi.Provider: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.org.objectweb.asm.Type: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCachingOperationInvokerAdvisor(org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.base.AbstractPeriod: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubySymbol: int hashCode()>
<javax.management.openmbean.TabularDataSupport: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray(java.lang.Object[])>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.util.RawValue: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.Object getDetails()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object)>-><java.util.ArrayDeque: boolean isEmpty()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyString: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$EmptySet: int size()>
<org.springframework.boot.context.properties.source.AliasedConfigurationPropertySource: org.springframework.boot.context.properties.source.ConfigurationPropertyState containsDescendantOf(org.springframework.boot.context.properties.source.ConfigurationPropertyName)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jndi.JndiLocatorDelegate: java.lang.Object lookup(java.lang.String,java.lang.Class)>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics: void <init>()>-><io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics: void <init>(java.lang.Iterable)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.ArrayList: int size()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><java.text.AttributeEntry: int hashCode()>
<io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory undertowReactiveWebServerFactory(org.springframework.beans.factory.ObjectProvider)>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void updateDelegate()>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder header(java.lang.String,java.lang.String[])>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHeapDumpWebEndpoint(org.springframework.boot.actuate.management.HeapDumpWebEndpoint)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.util.ByteList: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration: java.lang.String[] getResourceLocations(java.lang.String[])>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.base.AbstractInstant: int hashCode()>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.Self: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration: org.springframework.boot.actuate.env.EnvironmentEndpoint environmentEndpoint(org.springframework.core.env.Environment,org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint getFilterEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties getLogFileWebEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties: void <init>()>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: boolean isLazy(org.springframework.beans.factory.config.DependencyDescriptor)>-><org.springframework.beans.factory.InjectionPoint: java.lang.annotation.Annotation[] getAnnotations()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource: void <init>(java.util.List)>-><java.util.HashMap: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration: com.fasterxml.jackson.module.paramnames.ParameterNamesModule parameterNamesModule()>
<io.undertow.servlet.core.ManagedFilters: io.undertow.servlet.core.ManagedFilter getManagedFilter(java.lang.String)>-><io.undertow.util.CopyOnWriteMap: java.lang.Object get(java.lang.Object)>
<org.springframework.web.client.MessageBodyClientHttpResponseWrapper: org.springframework.http.HttpHeaders getHeaders()>-><org.springframework.http.client.HttpComponentsClientHttpResponse: org.springframework.http.HttpHeaders getHeaders()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.PropertyName: int hashCode()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.config.web.server.ServerHttpSecurity httpSecurity()>-><org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration$ContextAwareServerHttpSecurity: void <init>(org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration$1)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer webEndpointDiscoverer(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection convertToEndpoints(java.util.Collection)>-><java.util.LinkedHashMap$LinkedValues: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><synthetic.method.HttpSessionImpl: void <init>()>
<org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.health.HealthStatusHttpMapper: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><java.lang.String: boolean endsWith(java.lang.String)>
<org.springframework.boot.actuate.endpoint.EndpointId: org.springframework.boot.actuate.endpoint.EndpointId of(org.springframework.core.env.Environment,java.lang.String)>-><org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.String getBeanName()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<java.util.AbstractSet: int hashCode()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.TreeMap$Entry: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.net.URL: int hashCode()>
<org.hibernate.tool.schema.SourceType: org.hibernate.tool.schema.SourceType interpret(java.lang.Object,org.hibernate.tool.schema.SourceType)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.ObjectName: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration$IgnoredPathsSecurityConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration$WebFilterChainPostProcessor webFilterChainPostProcessor()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.TreeSet: boolean isEmpty()>
<java.util.Vector: void removeRange(int,int)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.web.multipart.MultipartResolver getMultipartResolver()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean contains(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLocalValidatorFactoryBean(org.springframework.validation.beanvalidation.LocalValidatorFactoryBean)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.TreeSet: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.flyway.FlywayEndpointAutoConfiguration: org.springframework.boot.actuate.flyway.FlywayEndpoint flywayEndpoint(org.springframework.context.ApplicationContext)>
<java.util.Set: java.util.Set of(java.lang.Object,java.lang.Object,java.lang.Object)>-><java.lang.Error: void <init>(java.lang.String)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder corePoolSize(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory undertowServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.Hashtable: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><java.util.EnumMap$1: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<java.util.TreeMap$EntrySet: void clear()>-><java.util.TreeMap: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<java.util.EnumMap$KeySet: void clear()>-><java.util.EnumMap: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void addMapping(java.lang.String,java.lang.Class)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2: javax.management.MBeanServer getMBeanServer()>
<org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration: org.springframework.data.mongodb.core.MongoDbFactorySupport mongoDbFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.boot.autoconfigure.mongo.MongoProperties)>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: java.lang.String getMongoClientDatabase()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Vector: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.util.RegexpOptions: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration: org.springframework.security.authentication.DefaultAuthenticationEventPublisher authenticationEventPublisher(org.springframework.context.ApplicationEventPublisher)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform[] values()>-><java.lang.Object: java.lang.Object clone()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData getData()>-><io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.core.io.InputStreamResource: java.io.InputStream getInputStream()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.slf4j.helpers.SubstituteLogger: int hashCode()>
<org.springframework.security.access.prepost.PrePostAdviceReactiveMethodInterceptor: void <init>(org.springframework.security.access.method.MethodSecurityMetadataSource,org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice,org.springframework.security.access.prepost.PostInvocationAuthorizationAdvice)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.security.authentication.DelegatingReactiveAuthenticationManager: void <init>(org.springframework.security.authentication.ReactiveAuthenticationManager[])>-><org.springframework.security.authentication.DelegatingReactiveAuthenticationManager: void <init>(java.util.List)>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.util.List removeIncludeEvents(java.util.List)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: int getRow()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.SymbolProc: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.util.Collection)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.asm.Type: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setTimeZone(java.util.TimeZone)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.EnumMap$KeySet: int size()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque: boolean add(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.IdentityHashMap$Values: int size()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: int hashCode()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: javax.jms.ConnectionFactory getConnectionFactory()>
<com.google.common.collect.Maps$TransformedEntriesSortedMap: void <init>(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$TransformedEntriesMap: void <init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setContentNegotiatingViewResolver(org.springframework.web.servlet.view.ContentNegotiatingViewResolver)>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter(org.springframework.boot.autoconfigure.http.HttpProperties)>-><org.springframework.boot.autoconfigure.http.HttpProperties: org.springframework.boot.autoconfigure.http.HttpProperties$Encoding getEncoding()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.info.ProjectInfoProperties)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.Hashtable: boolean isEmpty()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.security.web.server.util.matcher.AndServerWebExchangeMatcher: void <init>(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher[])>-><org.springframework.security.web.server.util.matcher.AndServerWebExchangeMatcher: void <init>(java.util.List)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.util.LinkedMultiValueMap: int hashCode()>
<java.util.AbstractList: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.IntervalMonthData: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.web.reactive.config.WebFluxConfigurer getWebFluxConfigurer()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.String: int length()>
<javax.security.auth.Subject$SecureSet: void clear()>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration$ContextAwareServerHttpSecurity: void <init>(org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration$1)>-><org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration$ContextAwareServerHttpSecurity: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.PropertyPermission: int hashCode()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.thoughtworks.xstream.core.util.WeakCache: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$SynchronizedCollection: int size()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.UnboxedFixnum: int hashCode()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration: void <init>()>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.context.annotation.MBeanExportConfiguration: void setupDomain(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.Class getFilter(java.lang.Class)>-><org.springframework.core.annotation.TypeMappedAnnotations: org.springframework.core.annotation.MergedAnnotation get(java.lang.Class)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.net.Inet4Address: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.thoughtworks.xstream.io.path.Path: int hashCode()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: boolean isManagementExtensionsPresent()>-><io.micrometer.core.util.internal.logging.JdkLogger: void warn(java.lang.String)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration: org.springframework.boot.actuate.info.EnvironmentInfoContributor envInfoContributor(org.springframework.core.env.ConfigurableEnvironment)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void setDispatcherTypes(javax.servlet.DispatcherType,javax.servlet.DispatcherType[])>-><java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler taskScheduler(org.springframework.boot.task.TaskSchedulerBuilder)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler build()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAuthenticationPrincipalArgumentResolver(org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver)>
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void <init>(org.springframework.jdbc.core.JdbcOperations)>-><java.lang.Object: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.JsonbHttpMessageConverter: void <init>()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.DateTimeZone: int hashCode()>
<io.undertow.util.HeaderValues$1: void set(java.lang.String)>-><java.lang.IllegalStateException: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$SingletonSet: int size()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration$IgnoredPathsSecurityConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration$WebFilterChainPostProcessor webFilterChainPostProcessor()>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration$WebFilterChainPostProcessor: void <init>(org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration$1)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<org.springframework.validation.BindException: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.jersey.JerseyManagementContextConfiguration: org.glassfish.jersey.server.ResourceConfig resourceConfig()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewNames(java.lang.String[])>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.lang.String: java.lang.String valueOf(long)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Byte: int hashCode()>
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setCorsConfigurations(java.util.Map)>-><java.util.LinkedHashMap: void clear()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setUris(java.util.List)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.servlet.MultipartProperties)>
<java.util.AbstractCollection: void clear()>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.beans.PropertyDescriptor: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Locale$LocaleKey: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List postProcessPartConverters(java.util.List)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setInternalResourceViewResolver(org.springframework.web.servlet.view.InternalResourceViewResolver)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService: void <init>(org.springframework.web.reactive.function.client.WebClient$Builder,java.lang.String,boolean)>-><java.lang.Object: void <init>()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.sql.DriverInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setFieldNamingStrategy(java.lang.Class)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap$LinkedEntrySet: void clear()>-><java.util.LinkedHashMap: void clear()>
<org.springframework.http.client.reactive.ReactorClientHttpConnector: void <init>(reactor.netty.http.client.HttpClient)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFlywaySchemaManagementProvider(org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider)>
<java.util.concurrent.ArrayBlockingQueue: void clear()>-><java.util.concurrent.ArrayBlockingQueue$Itrs: void queueIsEmpty()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.config.annotation.PathMatchConfigurer getPathMatchConfigurer()>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: void <init>()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><org.jruby.RubyArray: int size()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.api.ServletDispatcher getServletDispatcher()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setCache(boolean)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.MemberKey: int hashCode()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setOrder(int)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: int hashCode()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><jnr.constants.ConstantSet: int size()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration: org.springframework.boot.actuate.metrics.web.reactive.server.DefaultWebFluxTagsProvider webfluxTagConfigurer()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setStatusCode(int)>-><java.lang.RuntimeException: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBean(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>-><org.springframework.util.Assert: void state(boolean,java.util.function.Supplier)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.core.Conventions: java.lang.Class getClassForValue(java.lang.Object)>-><java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>-><java.util.ArrayDeque: boolean remove(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.zone.ZoneOffsetTransitionRule: int hashCode()>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: java.util.List getSecurityWebFilterChains()>-><org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: org.springframework.security.web.server.SecurityWebFilterChain springSecurityFilterChain()>
<org.springframework.http.server.reactive.ReactorServerHttpResponse: void <init>(reactor.netty.http.server.HttpServerResponse,org.springframework.core.io.buffer.DataBufferFactory)>-><org.springframework.http.server.reactive.AbstractServerHttpResponse: void <init>(org.springframework.core.io.buffer.DataBufferFactory,org.springframework.http.HttpHeaders)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(java.lang.Class,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><com.google.common.collect.Maps$EntrySet: int size()>
<java.lang.Object: java.lang.String toString()>-><com.thoughtworks.xstream.core.util.FastField: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.internal.database.base.Schema: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer(org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.io.UrlResource: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Hashtable$KeySet: void clear()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><java.util.HashSet: java.util.Iterator iterator()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.servlet.spec.SecurityActions$2: io.undertow.servlet.spec.HttpSessionImpl run()>-><io.undertow.servlet.spec.HttpSessionImpl: io.undertow.servlet.spec.HttpSessionImpl forSession(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: java.util.List getAllErrors()>
<org.springframework.validation.BindException: void rejectValue(java.lang.String,java.lang.String)>-><org.springframework.validation.AbstractErrors: void rejectValue(java.lang.String,java.lang.String)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.crypto.CryptoAllPermission: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: boolean isCache()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.springframework.core.io.buffer.LimitedDataBufferList: void clear()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.CharacterType: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.OffsetDateTime: int hashCode()>
<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: java.time.format.DateTimeFormatterBuilder$PrefixTree getTree(java.time.format.DateTimeParseContext)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: boolean equals(java.lang.Object)>
<org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.header.XXssProtectionServerHttpHeadersWriter: void <init>()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><org.jruby.RubyHash$BaseCollection: int size()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jsoup.helper.ChangeNotifyingArrayList: void clear()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.boot.web.servlet.support.ErrorPageFilter$1: void <init>(org.springframework.boot.web.servlet.support.ErrorPageFilter)>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>-><java.util.ArrayDeque: boolean add(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch handleMatch(java.lang.String,io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,int)>-><io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch: io.undertow.servlet.handlers.ServletChain access$100(io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.FilterInvocation: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.jruby.util.io.SelectorPool: void returnToPool(java.nio.channels.Selector)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: org.springframework.boot.actuate.endpoint.web.ExposableServletEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService: void <init>(org.springframework.web.reactive.function.client.WebClient$Builder,java.lang.String,boolean)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService: org.springframework.http.client.reactive.ReactorClientHttpConnector buildTrustAllSslConnector()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean createExtensionBean(java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$EmptyList: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setErrorPageFilter(org.springframework.boot.web.servlet.support.ErrorPageFilter)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void warn(java.lang.Object)>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration: org.springframework.boot.actuate.metrics.cache.CacheMetricsRegistrar cacheMetricsRegistrar()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver authenticationPrincipalArgumentResolver()>-><org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver: void <init>(org.springframework.core.ReactiveAdapterRegistry)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.config.annotation.PathMatchConfigurer getPathMatchConfigurer()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configurePathMatch(org.springframework.web.servlet.config.annotation.PathMatchConfigurer)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder addCustomizers(org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.beans.factory.ObjectProvider,java.util.function.BiFunction)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.security.authentication.DelegatingReactiveAuthenticationManager: void <init>(org.springframework.security.authentication.ReactiveAuthenticationManager[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.lang.String: boolean endsWith(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setValidator(org.springframework.validation.Validator)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.format.support.FormattingConversionService: void addFormatter(org.springframework.format.Formatter)>
<java.util.Hashtable: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$UndertowAccessLogCustomizer: void <init>()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$AccessLogCustomizer: void <init>()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addReturnValueHandlers(java.util.List)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addReturnValueHandlers(java.util.List)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebSecurityConfigurerAdapter(org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: int getRow()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void createOutputStream()>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void <init>(io.undertow.servlet.handlers.ServletRequestContext,int)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration: org.springframework.data.mongodb.core.MongoDbFactorySupport mongoDbFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.boot.autoconfigure.mongo.MongoProperties)>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray(java.lang.Object[])>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.cglib.core.ClassInfo: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setUserId(java.lang.String)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.LinkedHashMap: java.util.Set keySet()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.Expression: int hashCode()>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange addResponseWrapper(io.undertow.server.ConduitWrapper)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointCompatibilityConfiguration: org.springframework.boot.actuate.health.HealthStatusHttpMapper healthStatusHttpMapper(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Map)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration: void <init>()>
<java.util.Hashtable$ValueCollection: void clear()>-><java.util.Hashtable: void clear()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$UndertowAccessLogCustomizer undertowManagementAccessLogCustomizer()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$UndertowAccessLogCustomizer: void <init>()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setCheckTemplate(boolean)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.AbstractMap: void clear()>-><io.micrometer.shaded.org.pcollections.IntTreePMap: java.util.Set entrySet()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.springframework.boot.actuate.trace.http.HttpTrace: org.springframework.boot.actuate.trace.http.HttpTrace$Request getRequest()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: boolean hasWaiters()>-><java.lang.IllegalMonitorStateException: void <init>()>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><java.lang.String: int length()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties healthEndpointProperties(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>-><org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyModule: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder header(java.lang.String,java.lang.String[])>-><org.springframework.http.HttpHeaders: java.util.List put(java.lang.String,java.util.List)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityInterceptor getSecurityInterceptor(org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.core.env.Environment)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityInterceptor: void <init>(org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.TokenValidator,org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityService,java.lang.String)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$EmptyList: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: boolean isCache()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>-><io.undertow.util.HeaderValues: int size()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determinePassword()>-><org.springframework.boot.jdbc.EmbeddedDatabaseConnection: boolean isEmbedded(java.lang.String)>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenNonNull()>-><org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build: org.springframework.core.io.Resource getLocation()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.jruby.RubyArray: void clear()>-><org.jruby.specialized.RubyArrayTwoObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.dom4j.tree.BackedList: void clear()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.util.QueryParameterUtils: java.util.Map mergeQueryParametersWithNewQueryString(java.util.Map,java.lang.String,java.lang.String)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.org.objectweb.asm.Type: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.health.HealthProperties: void <init>()>-><org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status: void <init>()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder(org.springframework.context.ApplicationContext,java.util.List)>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: void customize(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder,java.util.List)>
<java.util.List: void sort(java.util.Comparator)>-><io.undertow.util.HeaderValues: java.util.ListIterator listIterator()>
<io.micrometer.core.instrument.binder.system.UptimeMetrics: void <init>()>-><java.util.Collections: java.util.List emptyList()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.UTCDateTimeZone: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.boot.actuate.endpoint.web.annotation.RequestPredicateFactory: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes)>-><java.lang.Object: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.asm.ConstantDynamic: int hashCode()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryReactiveHealthEndpointWebExtension cloudFoundryReactiveHealthEndpointWebExtension(org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryReactiveHealthEndpointWebExtension: void <init>(org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.springframework.security.config.web.server.ServerHttpSecurity: void <init>()>-><org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.Collections$UnmodifiableCollection: boolean isEmpty()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setEmbeddedDatabase(org.springframework.jdbc.datasource.embedded.EmbeddedDatabase)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.AbstractList: void clear()>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: int size()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<javax.net.ssl.SNIHostName: int hashCode()>-><java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.io.UrlResource: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.GJChronology: int hashCode()>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><org.springframework.core.Conventions: java.lang.String pluralize(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><org.hsqldb.HsqlNameManager$HsqlName: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.jruby.RubyArray: boolean add(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder customizers(java.lang.Iterable)>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.lang.reflect.Constructor: int hashCode()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.security.web.server.authorization.HttpStatusServerAccessDeniedHandler: void <init>(org.springframework.http.HttpStatus)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyFixnum: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration: org.springframework.boot.actuate.trace.http.HttpTraceEndpoint httpTraceEndpoint(org.springframework.boot.actuate.trace.http.HttpTraceRepository)>-><org.springframework.boot.actuate.trace.http.HttpTraceEndpoint: void <init>(org.springframework.boot.actuate.trace.http.HttpTraceRepository)>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>-><java.util.LinkedHashMap: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.rsocket.SecuritySocketAcceptorInterceptorConfiguration: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.Proxy$KeyX: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties)>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties: void <init>()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryInfoEndpointWebExtension cloudFoundryInfoEndpointWebExtension(org.springframework.boot.info.GitProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryInfoEndpointWebExtension: void <init>(org.springframework.boot.actuate.info.InfoEndpoint)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.TransformedIterator: java.lang.Object next()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: void <init>(org.springframework.context.ApplicationContext)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.GJCacheKey: int hashCode()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.LinkedList: boolean add(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.javasupport.JavaClass: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.server.handlers.cache.LRUCache: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder create(java.lang.ClassLoader)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.chrono.AbstractChronology: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><org.springframework.util.MimeType: java.util.Map getParameters()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<io.undertow.util.HeaderValues: java.lang.String[] toArray()>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTaskExecutorBuilder(org.springframework.boot.task.TaskExecutorBuilder)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: void modifyCheck()>
<org.springframework.core.style.DefaultToStringStyler: void styleFieldStart(java.lang.StringBuilder,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.lang.Object: java.lang.Object clone()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPageableHandlerMethodArgumentResolverCustomizer(org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.chrono.GJChronology: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.EnumMap$KeySet: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.EnumMap$EntryIterator$Entry: int hashCode()>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.web.context.support.ServletContextResource: java.io.InputStream getInputStream()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplyingWhenNonNull()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints: java.util.Map getEndpoints(java.util.Collection)>-><java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.Proxy$Key2: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><net.bytebuddy.matcher.FilterableList$Empty: int size()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String getServletName()>-><org.springframework.boot.web.servlet.DynamicRegistrationBean: java.lang.String getOrDeduceName(java.lang.Object)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><jnr.constants.ConstantSet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setHost(java.lang.String)>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer servletEndpointDiscoverer(org.springframework.context.ApplicationContext,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,java.util.List,java.util.Collection)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String getAlphaNumerics(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.lang.String: int lastIndexOf(int)>
<org.jruby.specialized.RubyArrayOneObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.specialized.RubyArraySpecialized: boolean packed()>
<org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics jvmGcMetrics()>-><io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>()>
<org.springframework.validation.BindException: java.util.List getAllErrors()>-><org.springframework.validation.AbstractBindingResult: java.util.List getAllErrors()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: java.lang.String removeLast()>-><java.util.NoSuchElementException: void <init>()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.ScopeModule: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.PropertyPermission: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues$1: java.lang.Object next()>-><io.undertow.util.HeaderValues$1: java.lang.String next()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate,org.springframework.boot.context.properties.PropertyMapper$1)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping welcomePageHandlerMapping(org.springframework.context.ApplicationContext,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: java.util.Optional getWelcomePage()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSpringApplicationAdminMXBeanRegistrar(org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.lang.Class: boolean isInstance(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><org.springframework.util.MimeType: java.nio.charset.Charset getCharset()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.PatternEntry: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletContextImpl: void updateSessionAccessTime(io.undertow.server.HttpServerExchange)>-><java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Hashtable$ValueCollection: int size()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>-><java.security.spec.X509EncodedKeySpec: void <init>(byte[])>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.undertow.util.CopyOnWriteMap: int size()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isExtensionExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isExtensionExposed(java.lang.Object)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.Maps: java.util.SortedMap transformEntries(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Platform: java.util.SortedMap mapsTransformEntriesSortedMap(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder customizers(java.lang.Iterable)>-><org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.boot.jackson.JsonComponentModule: void <init>()>-><com.fasterxml.jackson.databind.module.SimpleModule: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean isEmpty()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><java.lang.StringBuilder: void <init>()>
<org.jruby.ir.IRBuilder$2: int compare(java.util.Map$Entry,java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Maps: java.lang.Object safeGet(java.util.Map,java.lang.Object)>-><com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<org.springframework.context.expression.BeanFactoryResolver: java.lang.Object resolve(org.springframework.expression.EvaluationContext,java.lang.String)>-><org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRestClientBuilder(org.elasticsearch.client.RestClientBuilder)>
<io.undertow.util.SubstringMap: void doPut(java.lang.Object[],java.lang.String,java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties healthEndpointProperties(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>-><org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status: java.util.List getOrder()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet()>-><org.springframework.web.servlet.DispatcherServlet: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.WeakHashMap$EntrySet: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setThymeleafReactiveViewResolver(org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.server.HttpServerExchange: void addResponseCommitListener(io.undertow.server.ResponseCommitListener)>-><io.undertow.server.HttpServerExchange$6: void <init>(io.undertow.server.HttpServerExchange,io.undertow.server.ResponseCommitListener)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.base.AbstractDuration: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.web.server.ManagementWebServerFactoryCustomizer: void <init>(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class[])>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: java.lang.Object get(int)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><io.undertow.util.HeaderValues: int size()>
<synthetic.method.HttpSessionImpl: void <init>()>-><java.util.HashMap: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.support.NullBean: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextFactory servletWebChildContextFactory()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.core.ManagedServlets: io.undertow.servlet.handlers.ServletHandler addServlet(io.undertow.servlet.api.ServletInfo)>-><io.undertow.servlet.handlers.ServletPathMatches: void invalidate()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: int size()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.Class getFilter(java.lang.Class)>-><org.springframework.core.annotation.MissingMergedAnnotation: java.util.Optional getValue(java.lang.String,java.lang.Class)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpTraceWebFilter(org.springframework.boot.actuate.web.trace.reactive.HttpTraceWebFilter)>
<java.util.EnumMap: void <init>(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$SynchronizedList: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointCompatibilityConfiguration: org.springframework.boot.actuate.health.HealthStatusHttpMapper healthStatusHttpMapper(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>-><org.springframework.boot.actuate.health.HealthStatusHttpMapper: void setStatusMapping(java.util.Map)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties getTaskSchedulingPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void <init>()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHealthEndpointProperties(org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties)>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)>
<org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter: java.util.Set asSet(java.util.Collection)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<io.undertow.server.handlers.cache.LRUCache: java.lang.Object remove(java.lang.Object)>-><io.undertow.server.handlers.cache.LRUCache$CacheEntry: java.lang.Object clearToken()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey createOperationKey(org.springframework.boot.actuate.endpoint.Operation)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setReadTimeout(org.springframework.http.client.ClientHttpRequestFactory)>-><java.lang.Math: int toIntExact(long)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setViewNames(java.lang.String[])>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><io.undertow.server.handlers.cache.LRUCache: void add(java.lang.Object,java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.SubList$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory,java.lang.String,java.lang.Class[])>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.aop.framework.CglibAopProxy: java.lang.Object getProxy(java.lang.ClassLoader)>-><java.lang.Class: java.lang.String getName()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<java.util.AbstractList: void clear()>-><java.util.Collections$SingletonList: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.awt.Font: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.jruby.javasupport.binding.InterfaceInitializer: void setupInterfaceMethods(java.lang.Class,org.jruby.javasupport.binding.Initializer$State)>-><io.undertow.util.HeaderValues: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>-><java.util.HashSet: void <init>()>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.hibernate.tool.schema.Action: org.hibernate.tool.schema.Action interpretJpaSetting(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><java.util.ArrayList: void <init>()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.Vector: void clear()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: void <init>(java.util.List)>-><org.springframework.util.Assert: void notEmpty(java.util.Collection,java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.AttributeEntry: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.Label: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><io.undertow.util.HeaderValues: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.servlet.spec.HttpSessionImpl: boolean isInvalid()>-><io.undertow.server.session.InMemorySessionManager$SessionImpl: int getMaxInactiveInterval()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration: org.springframework.transaction.support.TransactionTemplate transactionTemplate(org.springframework.transaction.PlatformTransactionManager)>-><org.springframework.transaction.support.TransactionTemplate: void <init>(org.springframework.transaction.PlatformTransactionManager)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Thread$WeakClassKey: int hashCode()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><org.springframework.context.support.AbstractApplicationContext: void assertBeanFactoryActive()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletRequestContext: io.undertow.servlet.handlers.ServletRequestContext current()>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setEnabled(boolean)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.RowType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.ReduceOps$4ReducingSink: void accept(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerConfigurationFactoryBean(org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><reactor.netty.http.server.HttpServerRequest: io.netty.handler.codec.http.HttpHeaders requestHeaders()>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRequestMappingHandlerAdapter(org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean add(java.lang.Object)>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyHash$BaseCollection: java.util.Iterator iterator()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.jar.Attributes: java.util.Set keySet()>
<com.google.common.collect.Maps: java.util.NavigableMap transformEntries(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.collect.Maps$TransformedEntriesNavigableMap: void <init>(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<io.undertow.server.handlers.cache.LRUCache: java.lang.Object get(java.lang.Object)>-><io.undertow.server.handlers.cache.LRUCache: java.lang.Object remove(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.security.Provider: java.lang.Object get(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<com.google.common.collect.Multisets$AbstractEntry: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.http.HttpEntity: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>-><org.springframework.http.server.reactive.NettyHeadersAdapter: io.netty.handler.codec.http.HttpHeaders access$100(org.springframework.http.server.reactive.NettyHeadersAdapter)>
<org.springframework.web.util.WebUtils: java.lang.Object getSessionAttribute(javax.servlet.http.HttpServletRequest,java.lang.String)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession(boolean)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.LinkedHashMap$LinkedKeySet: void clear()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Long: int hashCode()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>-><org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.validation.AbstractBindingResult: java.util.List getAllErrors()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.runtime.Block: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.base.AbstractDuration: boolean equals(java.lang.Object)>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Class getType(java.lang.String)>-><org.springframework.context.support.AbstractApplicationContext: void assertBeanFactoryActive()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.Date: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean resourceUrlEncodingFilter()>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void setDispatcherTypes(javax.servlet.DispatcherType,javax.servlet.DispatcherType[])>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.util.Set entrySet()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.asm.Type: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.DateTimeType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>-><java.util.ArrayList: boolean isEmpty()>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<java.util.EnumMap: boolean equals(java.util.EnumMap)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>-><org.springframework.jdbc.core.JdbcTemplate: void setMaxRows(int)>
<io.undertow.servlet.spec.ServletCookieAdaptor: io.undertow.server.handlers.Cookie setVersion(int)>-><javax.servlet.http.Cookie: void setVersion(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<java.util.WeakHashMap$KeySet: void clear()>-><java.util.WeakHashMap: void clear()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.Class: java.lang.String getName()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String getCollectionTypeString(java.util.Collection)>
<org.springframework.boot.info.GitProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.GitProperties: java.util.Properties processEntries(java.util.Properties)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.util.RecursiveComparator$Pair: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,boolean,java.lang.String[])>-><java.util.LinkedHashSet: void <init>()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque: boolean isEmpty()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<com.google.common.collect.Maps$11: void <init>(com.google.common.collect.Maps$EntryTransformer)>-><java.lang.Object: void <init>()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>-><org.springframework.context.support.AbstractApplicationContext: void assertBeanFactoryActive()>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: java.lang.Object findValue(java.lang.annotation.Annotation[])>-><org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.core.annotation.AnnotationAttributes getMergedAnnotationAttributes(java.lang.reflect.AnnotatedElement,java.lang.Class)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.http.client.ClientHttpRequestFactory buildRequestFactory()>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void accept(org.springframework.http.client.ClientHttpRequestFactory)>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><io.undertow.util.HeaderValues: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.javasupport.JavaMethod: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: boolean isCommitted()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLogFileWebEndpoint(org.springframework.boot.actuate.logging.LogFileWebEndpoint)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class)>-><java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>-><java.security.Provider$Service: java.lang.Object newInstance(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.SymbolProc: boolean equals(java.lang.Object)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration: org.springframework.boot.actuate.management.HeapDumpWebEndpoint heapDumpWebEndpoint()>-><org.springframework.boot.actuate.management.HeapDumpWebEndpoint: void <init>()>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<java.util.ComparableTimSort: void mergeHi(int,int,int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.UTCDateTimeZone: int hashCode()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: boolean isRoleBasedAccessControlEnabled()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: java.lang.String getUsername()>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><com.google.common.collect.Multimaps$Keys$1$1: int getCount()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>-><org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.ArrayList: void clear()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.DoubleNode: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: int size()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint getFilterEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.Collections: java.util.Set emptySet()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: java.lang.String removeFirst()>-><io.undertow.util.HeaderValues: java.lang.String pollFirst()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDelegatingMethodSecurityMetadataSource(org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.RuleBasedCollator: int hashCode()>
<io.undertow.util.HeaderValues: java.util.List subList(int,int)>-><io.undertow.util.HeaderValues: java.lang.String get(int)>
<org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.UTCDateTimeZone: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateNonEmpty(io.undertow.util.HttpString,java.lang.Object[],int,int,java.lang.Object)>-><java.lang.SecurityException: void <init>(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.config.DependencyDescriptor: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRequestContextFilter(org.springframework.web.filter.RequestContextFilter)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$ValuesView: java.util.Iterator iterator()>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><java.util.HashMap: void putAll(java.util.Map)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.format.support.FormattingConversionService: void addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<org.springframework.validation.AbstractBindingResult: int hashCode()>-><java.lang.String: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.core.style.ToStringCreator: void printFieldSeparatorIfNecessary()>-><org.springframework.core.style.DefaultToStringStyler: void styleFieldSeparator(java.lang.StringBuilder)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.jsonwebtoken.impl.JwtMap: boolean isEmpty()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>-><io.undertow.servlet.api.DeploymentInfo: boolean isAllowNonStandardWrappers()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.support.ErrorPageFilter: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.logging.Level: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void <init>()>
<com.google.common.collect.Maps$EntrySet: boolean isEmpty()>-><java.util.AbstractMap: boolean isEmpty()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.Class getFilter(java.lang.Class)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.jruby.runtime.ObjectSpace$ObjectGroup: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.Fixnum: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><javax.security.auth.Subject$SecureSet: void clear()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.TimestampData: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics fileDescriptorMetrics()>-><io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: void <init>()>
<org.springframework.core.style.DefaultToStringStyler: void styleValue(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>
<io.micrometer.core.instrument.binder.logging.Log4j2Metrics: void <init>(java.lang.Iterable)>-><org.apache.logging.log4j.LogManager: org.apache.logging.log4j.spi.LoggerContext getContext(boolean)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><java.math.BigDecimal: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementErrorEndpoint: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.DurationFieldType$StandardDurationFieldType: int hashCode()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSimpleMeterRegistry(io.micrometer.core.instrument.simple.SimpleMeterRegistry)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jmx.support.WebSphereMBeanServerFactoryBean: void afterPropertiesSet()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><java.util.ArrayList: java.util.ListIterator listIterator()>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties: void <init>()>-><org.springframework.boot.actuate.autoconfigure.health.HealthProperties: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><io.undertow.servlet.handlers.ServletHandler: io.undertow.servlet.core.ManagedServlet getManagedServlet()>
<java.util.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Class getType(java.lang.String)>-><org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.ContentNegotiatingViewResolver viewResolver(org.springframework.beans.factory.BeanFactory)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.CompositeDataSupport: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$EmptyList: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>-><com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.javasupport.JavaArray: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: void <init>(org.springframework.http.MediaType[])>-><org.springframework.util.Assert: void notEmpty(java.lang.Object[],java.lang.String)>
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.audit.AuditEventsEndpoint: void <init>(org.springframework.boot.actuate.audit.AuditEventRepository)>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.FloatNode: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<io.undertow.util.SubstringMap: void put(java.lang.String,java.lang.Object)>-><io.undertow.util.SubstringMap$SubstringMatch: void <init>(java.lang.String,java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration: org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar servletEndpointRegistrar(org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties: java.lang.String getBasePath()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: java.time.Duration getKeepAlive()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><io.jsonwebtoken.impl.JwtMap: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.jar.Attributes: int hashCode()>
<org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: org.springframework.security.core.userdetails.UserDetails getUserDetails(org.springframework.boot.autoconfigure.security.SecurityProperties$User,java.lang.String)>-><org.springframework.util.StringUtils: java.lang.String[] toStringArray(java.util.Collection)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<org.springframework.boot.actuate.info.InfoPropertiesInfoContributor: void <init>(org.springframework.boot.info.InfoProperties,org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode)>-><java.lang.Object: void <init>()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.dom4j.tree.BackedList: void clear()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointFiltered(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.Collections$SynchronizedMap: boolean isEmpty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Vector: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeMap$KeySet: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletsMappingDescriptionProvider(org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider)>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementErrorEndpoint: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes)>-><org.springframework.boot.web.servlet.error.DefaultErrorAttributes: void <init>()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<javax.net.ssl.SNIHostName: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View getView()>
<org.springframework.security.authentication.AnonymousAuthenticationToken: void <init>(java.lang.Integer,java.lang.Object,java.util.Collection)>-><org.springframework.security.authentication.AbstractAuthenticationToken: void <init>(java.util.Collection)>
<org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>-><org.thymeleaf.TemplateEngine: java.util.Set getDialects()>
<sun.security.jca.ProviderList: java.security.Provider$Service getService(java.lang.String,java.lang.String)>-><java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.EnumMap$KeySet: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.expression.TypedValue: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<io.undertow.util.Rfc6265CookieSupport: void validateCookieValue(java.lang.String)>-><java.lang.Integer: java.lang.String toString(int)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: boolean isCache()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.web.context.support.ServletContextResource: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.undertow.servlet.spec.ServletCookieAdaptor: java.lang.String getPath()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: org.springframework.transaction.jta.JtaTransactionManager transactionManager(org.springframework.beans.factory.ObjectProvider)>
<org.jruby.NativeException: java.lang.String searchStackMessage(java.lang.Throwable)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><org.springframework.http.server.DefaultPathContainer: java.util.List elements()>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<sun.text.normalizer.TrieIterator: void calculateNextSupplementaryElement(sun.text.normalizer.RangeValueIterator$Element)>-><sun.net.idn.StringPrep$StringPrepTrieImpl: int getFoldingOffset(int)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$EntrySet: void clear()>-><java.util.WeakHashMap: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<org.springframework.boot.util.LambdaSafe: org.springframework.boot.util.LambdaSafe$Callback callback(java.lang.Class,java.lang.Object,java.lang.Object,java.lang.Object[])>-><org.springframework.boot.util.LambdaSafe$Callback: void <init>(java.lang.Class,java.lang.Object,java.lang.Object,java.lang.Object[],org.springframework.boot.util.LambdaSafe$1)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setDataPassword(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setConnectionFactory(javax.jms.ConnectionFactory)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><java.util.AbstractCollection: boolean remove(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.format.number.money.CurrencyUnitFormatter: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.invoke.LambdaFormEditor$Transform: int hashCode()>
<org.springframework.http.server.DefaultRequestPath: void <init>(java.net.URI,java.lang.String)>-><java.lang.Object: void <init>()>
<java.util.stream.ReferencePipeline: boolean anyMatch(java.util.function.Predicate)>-><java.lang.Boolean: boolean booleanValue()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.DecimalFormatSymbols: int hashCode()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.internal.util.Pair: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<io.undertow.util.HeaderValues: java.lang.String get(int)>-><java.lang.IndexOutOfBoundsException: void <init>()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.SubList$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String getCharsetName()>-><java.nio.charset.Charset: java.lang.String name()>
<io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: void <init>()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build(java.lang.Class)>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void debug(java.lang.Object,java.lang.Throwable)>
<org.springframework.boot.info.GitProperties: java.lang.Long parseEpochSecond(java.lang.String)>-><java.lang.Long: long parseLong(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.server.StaticResourceJars: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.JapaneseImperialCalendar: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: boolean execute()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.javasupport.JavaMethod: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: int hashCode()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<io.undertow.util.QueryParameterUtils: void handleQueryParameter(java.lang.String,java.util.Map,int,int,int,java.lang.String,boolean)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.Course: int getTotalOfLessons()>-><java.util.ArrayList: int size()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean isInvalid()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.jsontype.NamedType: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSeparator(java.lang.String)>
<org.springframework.boot.actuate.web.trace.reactive.HttpTraceWebFilter: void <init>(org.springframework.boot.actuate.trace.http.HttpTraceRepository,org.springframework.boot.actuate.trace.http.HttpExchangeTracer,java.util.Set)>-><java.lang.Object: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.collect.ForwardingMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<io.undertow.util.AbstractAttachable: java.lang.Object removeAttachment(io.undertow.util.AttachmentKey)>-><java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeAwareMethods(java.lang.String,java.lang.Object)>-><org.springframework.web.filter.GenericFilterBean: void setBeanName(java.lang.String)>
<java.util.stream.ForEachOps$ForEachTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: boolean containsKey(java.lang.Object)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: boolean shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding$Type)>-><java.lang.Boolean: boolean booleanValue()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory: java.util.Collection createOperations(org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object)>-><java.util.LinkedHashMap: java.util.Collection values()>
<com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.info.GitProperties: java.lang.Long parseEpochSecond(java.lang.String)>-><java.lang.Long: java.lang.Long valueOf(long)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.accept.ContentNegotiationManager: java.util.List getStrategies()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: void <init>(org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyMatchData: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.flyway.FlywayEndpoint: void <init>(org.springframework.context.ApplicationContext)>-><java.lang.Object: void <init>()>
<org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.springframework.util.LinkedMultiValueMap: void addAll(java.lang.Object,java.util.List)>-><io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jndi.JndiLocatorDelegate: void <init>()>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setStatusCode(int)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.EnumMap: void <init>(java.lang.Class)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.DistinctOps$1$2: void accept(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.management.HeapDumpWebEndpoint: void <init>()>-><java.util.concurrent.TimeUnit$4: long toMillis(long)>
<org.springframework.boot.info.GitProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>
<org.springframework.boot.actuate.endpoint.web.EndpointMapping: java.lang.String normalizePath(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.cache.CacheProperties getCachePropertiesInstance()>-><org.springframework.boot.autoconfigure.cache.CacheProperties: void <init>()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics jvmGcMetrics()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer initializeAuthenticationProviderBeanManagerConfigurer(org.springframework.context.ApplicationContext)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Hashtable: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Arrays$ArrayList: int size()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setConnectTimeout(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void invoke(org.springframework.http.client.ClientHttpRequestFactory,java.lang.reflect.Method,java.lang.Object[])>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: boolean flushBufferAsync(boolean)>-><java.nio.Buffer: java.nio.Buffer clear()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLog4j2Metrics(io.micrometer.core.instrument.binder.logging.Log4j2Metrics)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean isEmpty()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.cert.X509CRLEntry: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.apache.commons.logging.LogAdapter$Log4jLog: void info(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeSet: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String,int,boolean)>-><java.lang.String: int length()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHealthContributor(org.springframework.boot.actuate.health.HealthContributor)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.security.Provider: void implPutAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.MemberKey: int hashCode()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.boot.actuate.audit.listener.AuditListener: void <init>(org.springframework.boot.actuate.audit.AuditEventRepository)>-><org.springframework.boot.actuate.audit.listener.AbstractAuditListener: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.Provider$ServiceKey: int hashCode()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.util.List getValue()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration: io.micrometer.core.instrument.simple.SimpleMeterRegistry simpleMeterRegistry(io.micrometer.core.instrument.simple.SimpleConfig,io.micrometer.core.instrument.Clock)>-><io.micrometer.core.instrument.simple.SimpleMeterRegistry: void <init>(io.micrometer.core.instrument.simple.SimpleConfig,io.micrometer.core.instrument.Clock)>
<org.springframework.web.servlet.mvc.method.annotation.JsonViewRequestBodyAdvice: void <init>()>-><org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdviceAdapter: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setITemplateResolver(org.thymeleaf.templateresolver.ITemplateResolver)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setPassword(java.lang.String)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setDriverClassName(java.lang.String)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.binder.logging.Log4j2Metrics: void <init>(java.lang.Iterable)>-><io.micrometer.core.instrument.binder.logging.Log4j2Metrics: void <init>(java.lang.Iterable,org.apache.logging.log4j.core.LoggerContext)>
<org.springframework.http.client.reactive.ReactorClientHttpConnector: void <init>(reactor.netty.http.client.HttpClient)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean containsKey(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.nio.charset.Charset: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: void <init>(java.util.Collection)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedHashMap$LinkedEntrySet: int size()>
<org.springframework.security.web.server.csrf.WebSessionServerCsrfTokenRepository: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setUseRegisteredSuffixPatternMatch(boolean)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.DurationFieldType$StandardDurationFieldType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.AbstractExposableEndpoint: void <init>(org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.io.File: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>
<org.springframework.boot.autoconfigure.jackson.JacksonProperties: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAuthorizationAuditListener(org.springframework.boot.actuate.security.AuthorizationAuditListener)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.FrozenString: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace$Name: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties: void setBasePath(java.lang.String)>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties: java.lang.String cleanBasePath(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerExceptionResolver compositeHandlerExceptionResolver()>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.util.List removeIncludeEvents(java.util.List)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<io.micrometer.core.util.internal.logging.LocationAwareSlf4JLogger: void warn(java.lang.String)>-><io.micrometer.core.util.internal.logging.LocationAwareSlf4JLogger: boolean isWarnEnabled()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List extractPartConverters(org.springframework.http.converter.FormHttpMessageConverter)>-><org.springframework.util.ReflectionUtils: java.lang.reflect.Field findField(java.lang.Class,java.lang.String)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><com.headius.invokebinder.Signature: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration: void <init>(org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties)>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.ArrayNode: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.Boolean getEnabled()>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object get(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.Maps$Values: boolean isEmpty()>
<java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.core.annotation.MergedAnnotation findMergedAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.core.annotation.MissingMergedAnnotation: boolean isPresent()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.io.ObjectStreamClass$WeakClassKey: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration: void <init>()>
<io.undertow.servlet.api.DeploymentInfo: java.util.List getFilterMappings()>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.context.annotation.MBeanExportConfiguration: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerViewResolver(org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: void <init>()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.io.InputStreamResource: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration: void <init>(org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getRelativePath(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.springframework.web.servlet.view.AbstractCachingViewResolver: void setCache(boolean)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Vector$Itr: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>
<io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.security.authentication.DelegatingReactiveAuthenticationManager: void <init>(java.util.List)>-><java.lang.Object: void <init>()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void updateDelegate()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.web.context.support.ServletContextResource: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementChildContextConfiguration: void <init>()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque: boolean contains(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.asm.ConstantDynamic: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.MBeanConstructorInfo: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.x509.Extension: int hashCode()>
<io.undertow.servlet.spec.ServletContextImpl: void updateSessionAccessTime(io.undertow.server.HttpServerExchange)>-><io.undertow.server.session.InMemorySessionManager$SessionImpl: void requestDone(io.undertow.server.HttpServerExchange)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource)>-><org.springframework.util.DefaultPropertiesPersister: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><java.util.Spliterators$1Adapter: java.lang.Object next()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.cert.Certificate: int hashCode()>
<org.springframework.context.i18n.LocaleContextHolder: java.util.Locale getLocale(org.springframework.context.i18n.LocaleContext)>-><org.springframework.context.i18n.SimpleLocaleContext: java.util.Locale getLocale()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.util.DefaultPropertiesPersister: void load(java.util.Properties,java.io.Reader)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><java.lang.String: int length()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><sun.security.util.DerValue: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.hsqldb.types.IntervalSecondData: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFlywayEndpoint(org.springframework.boot.actuate.flyway.FlywayEndpoint)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMethodInterceptor(org.aopalliance.intercept.MethodInterceptor)>
<org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean: void <init>(java.lang.String,org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void <init>(org.springframework.boot.web.servlet.ServletRegistrationBean[])>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>-><org.springframework.core.style.ToStringCreator: org.springframework.core.style.ToStringCreator append(java.lang.String,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder(org.springframework.context.ApplicationContext,java.util.List)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git: java.nio.charset.Charset getEncoding()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.field.UnsupportedDurationField: int hashCode()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><io.undertow.server.handlers.cache.LRUCache: java.lang.Object get(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><io.undertow.server.AbstractServerConnection: org.xnio.OptionMap getUndertowOptions()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setUri(java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.SubList: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAuthenticationAuditListener(org.springframework.boot.actuate.security.AuthenticationAuditListener)>
<com.google.common.collect.Multimaps$Keys$1: com.google.common.collect.Multiset$Entry transform(java.util.Map$Entry)>-><com.google.common.collect.Multimaps$Keys$1$1: void <init>(com.google.common.collect.Multimaps$Keys$1,java.util.Map$Entry)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.format.DecimalStyle: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.Type: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><java.util.Collections$EmptyMap: boolean isEmpty()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder requestFactory(java.util.function.Supplier)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Package: int hashCode()>
<org.springframework.boot.util.LambdaSafe$GenericTypeFilter: void <init>(org.springframework.boot.util.LambdaSafe$1)>-><org.springframework.boot.util.LambdaSafe$GenericTypeFilter: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.Collections$UnmodifiableList: java.lang.Object get(int)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.beans.Introspector: void processPropertyDescriptors()>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyModule: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void writeBufferBlocking(boolean)>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void setFlags(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.web.servlet.error.DefaultErrorAttributes errorAttributes()>-><org.springframework.boot.autoconfigure.web.ErrorProperties: boolean isIncludeException()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void resetBuffer()>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void resetBuffer()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.zone.ZoneRules: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.ArrayDeque: boolean isEmpty()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.security.access.expression.method.ExpressionBasedPostInvocationAdvice: void <init>(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.String lambda$getVotes$0(java.util.Map$Entry)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getKey()>
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>-><java.lang.Class: java.lang.Class getSuperclass()>
<org.springframework.security.web.server.header.XXssProtectionServerHttpHeadersWriter: void updateDelegate()>-><org.springframework.security.web.server.header.XXssProtectionServerHttpHeadersWriter: java.lang.String createHeaderValue()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer servletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>
<synthetic.method.SecurityWebFilterChainImpl: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletManagementChildContextConfiguration$UndertowAccessLogCustomizer(org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$UndertowAccessLogCustomizer)>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$1: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void <init>(java.lang.String,io.undertow.servlet.spec.ServletContextImpl)>-><io.undertow.servlet.handlers.ServletPathMatch: io.undertow.servlet.handlers.ServletChain getServletChain()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.WeakCache$CacheValue: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPreInvocationAuthorizationAdvice(org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice)>
<org.springframework.security.config.core.GrantedAuthorityDefaults: void <init>(java.lang.String)>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.base.AbstractPeriod: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object buildLazyResolutionProxy(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>-><java.lang.Class: boolean isInterface()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers platformTransactionManagerCustomizers(org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.stream.ForEachOps$ForEachOrderedTask: void doCompute(java.util.stream.ForEachOps$ForEachOrderedTask)>-><java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.security.ssl.SSLSessionImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.beans.Introspector: void processPropertyDescriptors()>-><io.undertow.util.HeaderValues: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setEnvironmentEndpointWebExtension(org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: boolean welcomeTemplateExists(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext)>
<java.util.Hashtable: java.lang.String toString()>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.javasupport.JavaObject: int hashCode()>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: java.lang.String getOrDeducePassword(org.springframework.boot.autoconfigure.security.SecurityProperties$User,org.springframework.security.crypto.password.PasswordEncoder)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeSet: boolean isEmpty()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>(java.lang.Iterable)>-><io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: boolean isYoungGenPool(java.lang.String)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.util.AbstractAttachable: java.lang.Object putAttachment(io.undertow.util.AttachmentKey,java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<io.micrometer.core.util.internal.logging.JdkLogger: void fillCallerData(java.lang.String,java.util.logging.LogRecord)>-><java.lang.StackTraceElement: java.lang.String getClassName()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.BigIntegerNode: int hashCode()>
<java.util.EnumMap: int entryHashCode(int)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<javax.management.modelmbean.DescriptorSupport: java.lang.String[] getFields()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<sun.util.locale.provider.LocaleProviderAdapter: boolean isSupportedLocale(java.util.Locale,sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()>-><org.springframework.beans.AbstractNestablePropertyAccessor: void setAutoGrowCollectionLimit(int)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.StringLiteral: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.security.web.server.authentication.logout.RedirectServerLogoutSuccessHandler: void <init>()>-><org.springframework.security.web.server.DefaultServerRedirectStrategy: void <init>()>
<java.util.AbstractSet: int hashCode()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.Hashtable: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: int hashCode()>
<org.springframework.core.io.DefaultResourceLoader: org.springframework.core.io.Resource getResource(java.lang.String)>-><org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void <init>()>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void <init>(java.time.Duration,java.time.Duration,java.lang.Boolean)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.DoubleNode: int hashCode()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean add(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.springframework.security.web.server.header.XXssProtectionServerHttpHeadersWriter: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.jar.Attributes: java.util.Set entrySet()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.AbstractMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider findProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders$NoTemplateAvailabilityProvider: boolean isTemplateAvailable(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.rsocket.SecuritySocketAcceptorInterceptorConfiguration: org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor securitySocketAcceptorInterceptor(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.core.Conventions: java.lang.String pluralize(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.lang.Object: java.lang.String toString()>-><java.util.Hashtable: int hashCode()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><java.lang.String: boolean endsWith(java.lang.String)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: boolean flushBufferAsync(boolean)>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void clearFlags(int)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.jruby.RubyHash: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.sun.beans.WildcardTypeImpl: int hashCode()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>
<org.springframework.beans.CachedIntrospectionResults: boolean isClassLoaderAccepted(java.lang.ClassLoader)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Long: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.time.OffsetTime: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.metamodel.model.domain.NavigableRole: boolean equals(java.lang.Object)>
<org.springframework.boot.util.LambdaSafe$GenericTypeFilter: boolean match(java.lang.Class,java.lang.Object,java.lang.Object,java.lang.Object[])>-><org.springframework.core.ResolvableType: java.lang.Class resolveGeneric(int[])>
<java.lang.Object: java.lang.String toString()>-><org.springframework.web.method.ControllerAdviceBean: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.HashMap$Values: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>-><java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$UnmodifiableList: int hashCode()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean add(java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream sorted(java.util.Comparator)>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><java.net.URI: java.lang.String getPath()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation getAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class)>-><java.lang.reflect.Constructor: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.thymeleaf.spring5.SpringWebFluxTemplateEngine: void <init>()>-><org.thymeleaf.TemplateEngine: void setLinkBuilder(org.thymeleaf.linkbuilder.ILinkBuilder)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Long: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Vector$Itr: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.password_reset.QuestionsAssignment: void <init>()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: java.lang.String getThreadNamePrefix()>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder roles(java.lang.String[])>-><org.springframework.security.core.authority.SimpleGrantedAuthority: void <init>(java.lang.String)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJsr310()>-><java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source when(java.util.function.Predicate)>-><java.util.function.Predicate: java.util.function.Predicate and(java.util.function.Predicate)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCompositeHandlerAdapter(org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerAdapter)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.ZoneOffset: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.servlet.spec.ServletPrintWriter: void createEncoder()>-><java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.io.ByteArrayResource: int hashCode()>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.Object getDetails()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String migrateLegacyId(org.springframework.core.env.Environment,java.lang.String)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.context.support.ApplicationListenerDetector: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.jruby.RubyHash$BaseCollection: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultWebMvcTagsProvider(org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.ArrayList$SubList: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><java.time.zone.ZoneOffsetTransitionRule: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void <init>()>-><org.springframework.web.util.UrlPathHelper: void <init>()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration: void <init>()>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>-><org.springframework.util.AntPathMatcher: void <init>()>
<java.security.Provider: void implPutAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource methodMetadataSource(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>-><org.springframework.security.access.expression.method.ExpressionBasedAnnotationAttributeFactory: void <init>(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.springframework.boot.actuate.health.HealthStatusHttpMapper: void setupDefaultStatusMapping()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.util.unit.DataSize: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration: io.micrometer.core.instrument.binder.logging.LogbackMetrics logbackMetrics()>
<org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyRegistrationConfiguration: org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository relyingPartyRegistrationRepository(org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyProperties)>-><org.springframework.security.saml2.provider.service.registration.InMemoryRelyingPartyRegistrationRepository: void <init>(java.util.Collection)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><jnr.constants.ConstantSet: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.ObjectNode: int hashCode()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMapping,java.util.Collection,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.cors.CorsConfiguration,boolean)>-><org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping: void setOrder(int)>
<java.util.Arrays$NaturalOrder: int compare(java.lang.Object,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setInterceptors(java.lang.Object[])>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void <init>()>-><org.springframework.scheduling.concurrent.ExecutorConfigurationSupport: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><io.undertow.util.HeaderValues: int size()>
<java.util.AbstractMap: int hashCode()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCompositeHandlerExceptionResolver(org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerExceptionResolver)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><ch.qos.logback.core.subst.Node: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: void <init>(java.lang.String,org.springframework.http.HttpMethod)>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.BlobDataID: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.lessons.Hint: void <init>(java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><org.apache.commons.logging.LogAdapter$Log4jLog: boolean isDebugEnabled()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.GJCacheKey: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addPrefixMatch(java.lang.String,io.undertow.servlet.handlers.ServletChain,boolean)>-><io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch: io.undertow.servlet.handlers.ServletChain access$102(io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,io.undertow.servlet.handlers.ServletChain)>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>-><java.util.HashMap: void putAll(java.util.Map)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.rsocket.RSocketSecurity: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Hashtable: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$TomcatAccessLogCustomizer tomcatManagementAccessLogCustomizer()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$TomcatAccessLogCustomizer: void <init>()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>
<java.util.HashMap$Node: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.Log4J2MetricsAutoConfiguration: io.micrometer.core.instrument.binder.logging.Log4j2Metrics log4j2Metrics()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getArgumentResolvers()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addArgumentResolvers(java.util.List)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setSuffix(java.lang.String)>
<org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration: org.springframework.boot.actuate.system.DiskSpaceHealthIndicator diskSpaceHealthIndicator(org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties)>-><org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: org.springframework.util.unit.DataSize getThreshold()>
<java.lang.Object: java.lang.String toString()>-><sun.security.util.ObjectIdentifier: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.smile.MappingJackson2SmileHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void setDateFormatter(java.time.format.DateTimeFormatter)>-><java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><org.jruby.RubyHash$BaseSet: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.LinkedList: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.SymbolProc: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.web.jersey.JerseyManagementContextConfiguration: org.glassfish.jersey.server.ResourceConfig resourceConfig()>-><org.glassfish.jersey.server.ResourceConfig: void <init>()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari: com.zaxxer.hikari.HikariDataSource dataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties)>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String getName()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection,java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap: void <init>()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Optional: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void updateDelegate()>-><java.lang.StringBuilder: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeFile(java.lang.String,boolean)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: java.lang.String resolveRequestUri(reactor.netty.http.server.HttpServerRequest)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void setDefaultDomain(java.lang.String)>-><org.springframework.jmx.export.naming.MetadataNamingStrategy: void setDefaultDomain(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.HashMap$KeySet: int size()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointCompatibilityConfiguration: void <init>()>
<org.springframework.boot.actuate.cache.CachesEndpointWebExtension: void <init>(org.springframework.boot.actuate.cache.CachesEndpoint)>-><java.lang.Object: void <init>()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: boolean flushBufferAsync(boolean)>-><org.xnio.Buffers: long remaining(java.nio.Buffer[])>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.IdentityHashMap$Values: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.DigitList: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementChildContextConfiguration$ReactiveManagementWebServerFactoryCustomizer: void <init>(org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementChildContextConfiguration,org.springframework.beans.factory.ListableBeanFactory)>-><org.springframework.boot.actuate.autoconfigure.web.server.ManagementWebServerFactoryCustomizer: void <init>(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class[])>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.EndpointMapping: java.lang.String normalizePath(java.lang.String)>-><java.lang.String: boolean endsWith(java.lang.String)>
<org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration: org.springframework.boot.actuate.management.ThreadDumpEndpoint dumpEndpoint()>-><org.springframework.boot.actuate.management.ThreadDumpEndpoint: void <init>()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: int size()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void <init>()>-><java.lang.Object: void <init>()>
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<io.undertow.util.SubstringMap$SubstringMatch: void <init>(java.lang.String,java.lang.Object)>-><java.lang.Object: void <init>()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Character: int hashCode()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setXa(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain servletChain(io.undertow.server.HttpHandler,io.undertow.servlet.core.ManagedServlet,java.util.Map,java.lang.String,io.undertow.servlet.api.DeploymentInfo,boolean,javax.servlet.http.MappingMatch,java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder customizers(java.lang.Iterable)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set)>
<io.undertow.util.HeaderValues: java.lang.String remove(int)>-><io.undertow.util.HeaderValues: java.lang.String removeLast()>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addPrefixMatch(java.lang.String,io.undertow.servlet.handlers.ServletChain,boolean)>-><io.undertow.util.SubstringMap$SubstringMatch: java.lang.Object getValue()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.undertow.util.CopyOnWriteMap: java.util.Set entrySet()>-><java.util.Collections$EmptyMap: java.util.Set entrySet()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadSource(org.springframework.core.io.Resource,java.nio.charset.Charset)>-><org.springframework.core.io.support.EncodedResource: void <init>(org.springframework.core.io.Resource,java.nio.charset.Charset)>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.web.reactive.result.view.UrlBasedViewResolver: void setSuffix(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration: org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer metricsRestTemplateCustomizer(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider,org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties)>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web: org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client getClient()>
<javax.management.modelmbean.DescriptorSupport: boolean isValid()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.jruby.util.io.SelectorPool: java.nio.channels.Selector retrieveFromPool(java.nio.channels.spi.SelectorProvider)>-><io.undertow.util.HeaderValues: java.lang.Object remove(int)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdviceAdapter: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.authentication.ReactiveAuthenticationManager authenticationManager()>-><org.springframework.security.authentication.AbstractUserDetailsReactiveAuthenticationManager: void setUserDetailsPasswordService(org.springframework.security.core.userdetails.ReactiveUserDetailsPasswordService)>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(int)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.Collections$SingletonMap: boolean isEmpty()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$ServletManagementWebServerFactoryCustomizer servletManagementWebServerFactoryCustomizer(org.springframework.beans.factory.ListableBeanFactory)>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$ServletManagementWebServerFactoryCustomizer: void <init>(org.springframework.beans.factory.ListableBeanFactory)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJsr250MethodSecurityMetadataSource(org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Date: boolean equals(java.lang.Object)>
<io.undertow.server.handlers.cache.LRUCache: java.lang.Object get(java.lang.Object)>-><io.undertow.server.handlers.cache.LRUCache: void bumpAccess(io.undertow.server.handlers.cache.LRUCache$CacheEntry)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$EmptySet: boolean isEmpty()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor methodSecurityInterceptor(org.springframework.security.access.method.AbstractMethodSecurityMetadataSource)>-><org.springframework.aop.support.AbstractPointcutAdvisor: void setOrder(int)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder requestFactory(java.util.function.Supplier)>-><org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer,boolean,java.lang.String,java.util.Set,java.util.Set,java.util.function.Supplier,org.springframework.web.util.UriTemplateHandler,org.springframework.web.client.ResponseErrorHandler,org.springframework.boot.web.client.BasicAuthentication,java.util.Map,java.util.Set,java.util.Set)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>-><java.lang.Object: void <init>()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: boolean isEnableSpringElCompiler()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.security.web.server.header.StaticServerHttpHeadersWriter: void <init>(org.springframework.http.HttpHeaders)>-><java.lang.Object: void <init>()>
<java.util.concurrent.ArrayBlockingQueue: void clear()>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown: boolean isAwaitTermination()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.ContentNegotiatingViewResolver viewResolver(org.springframework.beans.factory.BeanFactory)>-><org.springframework.web.servlet.view.ContentNegotiatingViewResolver: void setOrder(int)>
<io.undertow.servlet.api.DeploymentInfo: java.util.List getFilterMappings()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: void setThreshold(org.springframework.util.unit.DataSize)>-><org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch handleMatch(java.lang.String,io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,int)>-><java.lang.String: int length()>
<org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.servlet.MultipartProperties)>-><org.springframework.boot.autoconfigure.web.servlet.MultipartProperties: void <init>()>
<org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration: org.springframework.boot.actuate.trace.http.HttpExchangeTracer httpExchangeTracer(org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties)>-><org.springframework.boot.actuate.trace.http.HttpExchangeTracer: void <init>(java.util.Set)>
<com.google.common.collect.Maps$TransformedEntriesMap: int size()>-><com.google.common.collect.Maps$TransformedEntriesMap: int size()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object buildLazyResolutionProxy(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>-><org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.ClassLoader getBeanClassLoader()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<org.springframework.boot.util.LambdaSafe$Callback: org.springframework.boot.util.LambdaSafe$InvocationResult invokeAnd(java.util.function.Function)>-><org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$InvocationResult invoke(java.lang.Object,java.util.function.Supplier)>
<org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: org.springframework.cache.support.SimpleCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers,java.util.Collection)>-><org.springframework.cache.support.SimpleCacheManager: void <init>()>
<java.util.Collections$UnmodifiableCollection: int size()>-><com.google.common.collect.Maps$EntrySet: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration: void <init>()>
<org.springframework.core.Conventions: java.lang.String pluralize(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.DoubleNode: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setParameterNamesModule(com.fasterxml.jackson.module.paramnames.ParameterNamesModule)>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>-><org.springframework.web.util.UrlPathHelper: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>-><com.google.common.collect.ForwardingMultimap: boolean isEmpty()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.AbstractMap: int hashCode()>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder authenticationManagerBuilder(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.context.ApplicationContext)>-><org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder: org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder authenticationEventPublisher(org.springframework.security.authentication.AuthenticationEventPublisher)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.AbstractCollection: void clear()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.UUID: boolean equals(java.lang.Object)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.springframework.util.ClassUtils: java.lang.String getShortNameAsProperty(java.lang.Class)>-><java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>
<io.undertow.util.HeaderMap: void resize()>-><java.lang.Object: java.lang.Object clone()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><io.undertow.servlet.spec.ServletCookieAdaptor: java.lang.String getPath()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.aop.support.StaticMethodMatcher: void <init>()>-><java.lang.Object: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.HashMap$Node: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: void <init>(java.lang.Iterable)>-><java.lang.management.ManagementFactory: java.lang.management.OperatingSystemMXBean getOperatingSystemMXBean()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.server.handlers.cache.LRUCache: java.lang.Object get(java.lang.Object)>-><io.undertow.server.handlers.cache.LRUCache$CacheEntry: java.lang.Object getValue()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: int hashCode()>
<org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>-><org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<java.util.Hashtable: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.servlet.spec.HttpSessionImpl$UnwrapSessionAction: java.lang.Object run()>-><io.undertow.servlet.spec.HttpSessionImpl$UnwrapSessionAction: io.undertow.server.session.Session run()>
<org.springframework.boot.actuate.metrics.MetricsEndpoint: void <init>(io.micrometer.core.instrument.MeterRegistry)>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<com.google.common.collect.Maps$ImprovedAbstractMap: void <init>()>-><java.util.AbstractMap: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.security.Provider: void implPutAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Collections$1: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.MBeanAttributeInfo: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer servletEndpointDiscoverer(org.springframework.context.ApplicationContext,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setTemplateResolverOrder(java.lang.Integer)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.introspect.MemberKey: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Float: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.convert.TypeDescriptor: int hashCode()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.RowType: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>
<java.util.ArrayDeque$DeqSpliterator: long estimateSize()>-><java.util.ArrayDeque$DeqSpliterator: int getFence()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean createEndpointBean(java.lang.String)>-><org.springframework.context.support.AbstractApplicationContext: org.springframework.core.env.Environment getEnvironment()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.undertow.servlet.core.ManagedServlets: io.undertow.servlet.handlers.ServletHandler addServlet(io.undertow.servlet.api.ServletInfo)>-><io.undertow.servlet.handlers.ServletHandler: void <init>(io.undertow.servlet.core.ManagedServlet)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(org.springframework.boot.actuate.endpoint.EndpointFilter,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint getFilterEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.LocalDate: int hashCode()>
<org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.support.EncodedResource)>-><java.util.Properties: void <init>()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: int hashCode()>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><org.springframework.core.Conventions: java.lang.Class getClassForValue(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.jruby.RubyHash$BaseSet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.node.IntNode: int hashCode()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: void <init>(org.springframework.boot.autoconfigure.orm.jpa.JpaProperties)>-><org.springframework.boot.autoconfigure.orm.jpa.JpaProperties: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues: boolean isEmpty()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void setIncludeSubDomains(boolean)>-><org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void updateDelegate()>
<org.springframework.security.web.server.WebFilterChainProxy: void <init>(java.util.List)>-><java.lang.Object: void <init>()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.net.Inet4Address: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque: boolean isEmpty()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.servlet.core.ManagedServlets: java.util.Map getServletHandlers()>-><java.util.HashMap: void <init>(java.util.Map)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$ServletManagementWebServerFactoryCustomizer: void <init>(org.springframework.beans.factory.ListableBeanFactory)>-><org.springframework.boot.actuate.autoconfigure.web.server.ManagementWebServerFactoryCustomizer: void <init>(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class[])>
<java.util.AbstractMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<org.springframework.validation.BindException: int hashCode()>-><org.springframework.validation.AbstractBindingResult: int hashCode()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder poolSize(int)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer getServletEndpointsSupplier()>
<java.util.AbstractCollection: java.lang.String toString()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPersistenceExceptionTranslationPostProcessor(org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor)>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.aop.support.DefaultIntroductionAdvisor: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment couchbaseEnvironment()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.FunctionSQL: int hashCode()>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><com.couchbase.client.java.env.DefaultCouchbaseEnvironment: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder builder()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void resetBuffer()>-><io.undertow.servlet.spec.ServletPrintWriter: void <init>(io.undertow.servlet.spec.ServletOutputStreamImpl,java.lang.String)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: java.lang.String getPrefix()>
<java.lang.Object: java.lang.String toString()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.security.jca.ProviderConfig: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean createExtensionBean(java.lang.String)>-><org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String)>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyNil: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><java.util.Collection: java.util.stream.Stream stream()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.UnboxedBoolean: boolean equals(java.lang.Object)>
<io.micrometer.core.util.internal.logging.JdkLogger: void fillCallerData(java.lang.String,java.util.logging.LogRecord)>-><java.lang.Throwable: void <init>()>
<com.google.common.collect.Maps$7: java.lang.Object transformEntry(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multimaps$UnmodifiableMultimap$1: java.lang.Object apply(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties)>-><org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void setTemplateEngine(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.PatternEntry: int hashCode()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.NullNode: int hashCode()>
<org.springframework.boot.web.reactive.result.view.MustacheViewResolver: void <init>(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.web.reactive.result.view.UrlBasedViewResolver: void <init>()>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer freeMarkerConfigurer()>-><org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.cglib.core.ClassInfo: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.health.HealthContributorRegistry getHealthContributorRegistry()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.hibernate.boot.model.relational.Namespace$Name: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setCustomArgumentResolvers(java.util.List)>
<org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter: void <init>(java.lang.Class,java.util.Collection,java.util.Collection,java.lang.String[])>-><java.lang.Object: void <init>()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor methodSecurityInterceptor(org.springframework.security.access.method.AbstractMethodSecurityMetadataSource)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.net.SocketPermission: int hashCode()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addPrefixMatch(java.lang.String,io.undertow.servlet.handlers.ServletChain,boolean)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.BeanWrapper createBeanWrapper()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.http.server.reactive.AbstractServerHttpRequest: void <init>(java.net.URI,java.lang.String,org.springframework.http.HttpHeaders)>-><java.lang.Object: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.ProcessEnvironment$StringEntry: int hashCode()>
<io.undertow.servlet.spec.HttpSessionImpl: io.undertow.server.session.Session getSession()>-><java.lang.SecurityManager: void checkPermission(java.security.Permission)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties getHealthIndicatorPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties: void setOrder(java.util.List)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap: boolean isEmpty()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.ArrayDeque: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: int hashCode()>
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter: void <init>()>-><org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter: org.springframework.security.web.server.header.ServerHttpHeadersWriter createDelegate(org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter$Mode)>
<org.springframework.http.server.reactive.NettyHeadersAdapter: void <init>(io.netty.handler.codec.http.HttpHeaders)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.security.access.method.MethodSecurityMetadataSource getMethodSecurityMetadataSource()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBean(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void addExtension(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.util.HashSet: boolean isEmpty()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setSize(java.lang.String)>
<org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.security.core.userdetails.User: org.springframework.security.core.userdetails.User$UserBuilder withUsername(java.lang.String)>-><org.springframework.security.core.userdetails.User: org.springframework.security.core.userdetails.User$UserBuilder builder()>
<java.lang.Object: java.lang.String toString()>-><sun.util.calendar.CalendarDate: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.time.Clock$SystemClock: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory: java.util.Collection createOperations(org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.ObjectInstance: int hashCode()>
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>-><java.util.HashMap: void forEach(java.util.function.BiConsumer)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.joda.time.format.DateTimeFormat: void appendPatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)>-><org.joda.time.format.DateTimeFormat: void parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.context.support.AbstractApplicationContext: org.springframework.beans.factory.ObjectProvider getBeanProvider(org.springframework.core.ResolvableType)>-><org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Hashtable$KeySet: int size()>
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration: org.springframework.security.context.DelegatingApplicationListener delegatingApplicationListener()>-><org.springframework.security.context.DelegatingApplicationListener: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.jruby.RubyArray: boolean isEmpty()>
<org.springframework.security.web.server.header.XXssProtectionServerHttpHeadersWriter: void updateDelegate()>-><org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter build()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.validation.FieldError: int hashCode()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.jruby.util.JRubyClassLoader: void terminateJarIndexCacheEntries()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><java.lang.String: int length()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari: com.zaxxer.hikari.HikariDataSource dataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties)>-><org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration: java.lang.Object createDataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,java.lang.Class)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.servlet.spec.ServletContextImpl$6: void <init>(io.undertow.servlet.spec.ServletContextImpl,io.undertow.servlet.spec.HttpSessionImpl)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource: void <init>(java.util.List)>-><org.springframework.security.access.method.AbstractMethodSecurityMetadataSource: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.CommentsEndpoint: void <init>()>
<io.undertow.util.AbstractAttachable: java.lang.Object putAttachment(io.undertow.util.AttachmentKey,java.lang.Object)>-><java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><io.undertow.servlet.spec.HttpServletResponseImpl: javax.servlet.ServletOutputStream getOutputStream()>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.core.io.UrlResource: java.io.InputStream getInputStream()>
<java.util.ArrayDeque: void <init>(java.util.Collection)>-><java.util.ArrayDeque: void allocateElements(int)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeFile(java.lang.String,boolean)>-><io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><org.jruby.RubyHash: boolean isEmpty()>
<org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>-><org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$1: boolean isStatic()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.io.FilePermission: int hashCode()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletManagementChildContextConfiguration$ServletManagementWebServerFactoryCustomizer(org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$ServletManagementWebServerFactoryCustomizer)>
<org.springframework.boot.actuate.endpoint.Sanitizer: java.util.regex.Pattern getPattern(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: void <init>()>-><org.springframework.http.HttpHeaders: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRSocketSecurity(org.springframework.security.config.annotation.rsocket.RSocketSecurity)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain servletChain(io.undertow.server.HttpHandler,io.undertow.servlet.core.ManagedServlet,java.util.Map,java.lang.String,io.undertow.servlet.api.DeploymentInfo,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><io.undertow.servlet.api.DeploymentInfo: io.undertow.servlet.api.AuthorizationManager getAuthorizationManager()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.function.Function: java.util.function.Function identity()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder json()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.jruby.RubyHash$BaseCollection: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Character: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><java.util.ArrayList: boolean remove(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.chrono.BuddhistChronology: int hashCode()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: boolean hasWaiters()>-><java.util.concurrent.locks.ReentrantLock$Sync: boolean isHeldExclusively()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setNimbusReactiveJwtDecoder(org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder)>
<io.undertow.servlet.spec.ServletPrintWriter: void createEncoder()>-><java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureMessageConverters(java.util.List)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>-><java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters$1: java.util.List defaultMessageConverters()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.i18n.SessionLocaleResolver: java.util.Locale determineDefaultLocale(javax.servlet.http.HttpServletRequest)>-><javax.servlet.ServletRequestWrapper: java.util.Locale getLocale()>
<org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration: org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean securityFilterChainRegistration(org.springframework.boot.autoconfigure.security.SecurityProperties)>-><org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration: java.util.EnumSet getDispatcherTypes(org.springframework.boot.autoconfigure.security.SecurityProperties)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder threadNamePrefix(java.lang.String)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeFile(java.lang.String,boolean)>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: void close()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$OptionalPathExtensionContentNegotiationStrategy: void <init>(org.springframework.web.accept.ContentNegotiationStrategy)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: org.springframework.security.web.server.WebFilterChainProxy springSecurityWebFilterChainFilter()>
<com.google.common.collect.Maps: com.google.common.base.Function asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.TreeSet: void clear()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$UnmodifiableMap: int hashCode()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.AbstractSet: int hashCode()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCloudFoundryInfoEndpointWebExtension(org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryInfoEndpointWebExtension)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.WebGoat: org.springframework.web.client.RestTemplate restTemplate()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setPort(java.lang.Integer)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<org.jruby.javasupport.binding.ClassInitializer: void setupClassMethods(java.lang.Class,org.jruby.javasupport.binding.Initializer$State)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryReactiveHealthEndpointWebExtension: void <init>(org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.util.collections.WeakHashSet: void clear()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setRequestBodyAdvice(java.util.List)>
<org.jruby.ir.representations.CFG: org.jruby.dirgra.DirectedGraph build(org.jruby.ir.instructions.Instr[])>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: void <init>()>
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder: void <init>(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.security.crypto.password.PasswordEncoder)>-><org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder: void <init>(org.springframework.security.config.annotation.ObjectPostProcessor)>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.util.List removeIncludeEvents(java.util.List)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.core.ServletContainerImpl: java.util.Collection listDeployments()>-><java.util.Collections$SynchronizedMap: java.util.Set keySet()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>-><org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flywayLessons()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedList: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void <init>()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.boot.web.servlet.DynamicRegistrationBean: void <init>()>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder queueCapacity(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.BuddhistChronology: boolean equals(java.lang.Object)>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><io.jsonwebtoken.impl.JwtMap: java.util.Set entrySet()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String[] getExcludedViewNames()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.Collections$EmptySet: boolean containsAll(java.util.Collection)>-><java.util.ArrayDeque: boolean isEmpty()>
<org.springframework.security.config.web.server.ServerHttpSecurity$CorsSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>-><org.springframework.security.config.web.server.ServerHttpSecurity$CorsSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>
<org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.springframework.security.config.web.server.ServerHttpSecurity$CsrfSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><java.lang.Object: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.jca.ProviderConfig: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.HashMap: java.util.Set keySet()>
<org.springframework.validation.BindException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.core.Conventions: java.lang.Class getClassForValue(java.lang.Object)>-><org.springframework.util.ClassUtils: boolean isJavaLanguageInterface(java.lang.Class)>
<org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode: org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode interpret(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>(java.lang.Iterable)>-><java.lang.management.ManagementFactory: java.util.List getMemoryPoolMXBeans()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.Duration: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebFluxEndpointHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection getEndpoints()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.Clock$SystemClock: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webwolf.requests.Requests: boolean lambda$get$0(org.springframework.security.core.userdetails.UserDetails,org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.String: java.lang.String valueOf(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.TreeSet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void <init>()>-><org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void updateDelegate()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.net.URI: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.x509.AVA: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.AbstractExposableEndpoint: void <init>(org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection convertToEndpoints(java.util.Collection)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties,java.util.List)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.BitSet: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.lang.Object: java.lang.Class getClass()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setReasonPhrase(java.lang.String)>-><io.undertow.util.AbstractAttachable: java.lang.Object putAttachment(io.undertow.util.AttachmentKey,java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.core.ManagedFilters: io.undertow.servlet.core.ManagedFilter getManagedFilter(java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><java.util.Collections$SynchronizedMap: boolean isEmpty()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><java.util.logging.Level: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.CompositeType: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.feed.RssChannelHttpMessageConverter: void <init>()>
<java.util.AbstractCollection: void clear()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.util.collections.WeakHashSet: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Short: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.lang.ProcessEnvironment$StringValues: void clear()>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><java.util.Collections: java.util.Set emptySet()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<java.util.AbstractCollection: java.lang.String toString()>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setConnectionTimeout(java.time.Duration)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$1: io.undertow.servlet.spec.ServletPrintWriterDelegate run()>-><java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><org.springframework.core.env.ReadOnlySystemAttributesMap: boolean isEmpty()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.servlet.spec.SecurityActions: io.undertow.servlet.spec.HttpSessionImpl forSession(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<java.util.Spliterator: long getExactSizeIfKnown()>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.ClobDataID: boolean equals(java.lang.Object)>
<java.util.stream.ReferencePipeline$Head: void forEach(java.util.function.Consumer)>-><java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source asInt(java.util.function.Function)>
<org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.runtime.Helpers: void fillNil(org.jruby.runtime.builtin.IRubyObject[],int,int,org.jruby.Ruby)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.WeakCache$CacheValue: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.Method: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: java.lang.String getOrDeducePassword(org.springframework.boot.autoconfigure.security.SecurityProperties$User,org.springframework.security.crypto.password.PasswordEncoder)>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void info(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>
<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatchers: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher pathMatchers(org.springframework.http.HttpMethod,java.lang.String[])>-><java.util.ArrayList: void <init>(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.WeakCache$CacheKey: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.Vector: boolean isEmpty()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultToStringStyler: void styleField(java.lang.StringBuilder,java.lang.String,java.lang.Object)>-><org.springframework.core.style.DefaultToStringStyler: void styleFieldEnd(java.lang.StringBuilder,java.lang.String)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<ch.qos.logback.core.joran.spi.SimpleRuleStore: void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.ArrayList$SubList: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<java.util.TreeMap: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.authentication.logout.RedirectServerLogoutSuccessHandler: void <init>()>-><java.lang.Object: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.java.proxies.ArrayJavaProxy: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap$Values: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.SimpleType: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints: int getKeyValue()>
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setThreadPoolTaskScheduler(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setUseSuffixPatternMatch(boolean)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.internal.info.MigrationInfoImpl: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: boolean responseStarted()>-><io.undertow.server.HttpServerExchange: boolean isResponseStarted()>
<org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.lang.Object[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.util.List put(java.lang.String,java.util.List)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.ArrayList: java.lang.Object get(int)>
<org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status: void <init>()>-><java.util.HashMap: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setUsername(java.lang.String)>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.MBeanNotificationInfo: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Character$Subset: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet getServlet()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.lang.StackTraceElement: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.api.DeploymentInfo: boolean isAllowNonStandardWrappers()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWelcomePageHandlerMapping(org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties getConfigurationPropertiesReportEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties: void <init>()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.Expression: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.EndpointMapping: void <init>(java.lang.String)>-><java.lang.Object: void <init>()>
<io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String,int,boolean)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><java.nio.charset.Charset: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: int size()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><java.util.LinkedHashMap: void <init>()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.TreeMap$KeySet: boolean isEmpty()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><java.util.AbstractMap: boolean isEmpty()>
<io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics: void <init>()>-><io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics: void <init>(java.lang.Iterable)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void debug(java.lang.Object,java.lang.Throwable)>
<io.micrometer.core.util.internal.logging.JdkLogger: void warn(java.lang.String)>-><io.micrometer.core.util.internal.logging.JdkLogger: void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable)>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementErrorEndpoint: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes)>-><java.lang.Object: void <init>()>
<java.util.ArrayDeque$DeqSpliterator: java.util.ArrayDeque$DeqSpliterator trySplit()>-><java.util.ArrayDeque$DeqSpliterator: int getFence()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashSet: java.util.Iterator iterator()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration: org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer metricsRestTemplateCustomizer(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider,org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties)>-><org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider,java.lang.String,org.springframework.boot.actuate.metrics.AutoTimer)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder awaitTerminationPeriod(java.time.Duration)>
<io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><org.springframework.http.client.SimpleClientHttpRequestFactory: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider,java.lang.String,org.springframework.boot.actuate.metrics.AutoTimer)>-><org.springframework.boot.actuate.metrics.web.client.MetricsClientHttpRequestInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider,java.lang.String,org.springframework.boot.actuate.metrics.AutoTimer)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$SingletonMap: java.util.Set entrySet()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.EnumMap: void <init>(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration$WebFilterChainPostProcessor: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.TreeMap$Values: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCsrfRequestDataValueProcessor(org.springframework.security.web.reactive.result.view.CsrfRequestDataValueProcessor)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><java.lang.Object: void <init>()>
<java.util.EnumMap: void <init>(java.util.Map)>-><io.jsonwebtoken.impl.JwtMap: boolean isEmpty()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><java.util.stream.ReduceOps$5ReducingSink: java.lang.Object get()>
<org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties: void <init>()>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<org.springframework.security.web.server.util.matcher.AndServerWebExchangeMatcher: void <init>(java.util.List)>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><net.bytebuddy.matcher.FilterableList$Empty: int size()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Vector: int size()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.api.ServletInfo: java.lang.String getName()>
<org.jruby.RubyArray: void alloc(int)>-><org.jruby.runtime.Helpers: void fillNil(org.jruby.runtime.builtin.IRubyObject[],org.jruby.Ruby)>
<java.util.AbstractMap$1: void clear()>-><org.springframework.util.ConcurrentReferenceHashMap: void clear()>
<java.lang.Object: java.lang.String toString()>-><javax.crypto.CryptoAllPermission: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.ObjectInstance: int hashCode()>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: void <init>()>-><org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Map)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenNonNull()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><ch.qos.logback.core.status.StatusBase: int hashCode()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>-><org.springframework.aop.framework.ProxyConfig: void setProxyTargetClass(boolean)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: org.springframework.http.HttpHeaders initHeaders(reactor.netty.http.server.HttpServerRequest)>-><org.springframework.http.HttpHeaders: void <init>(org.springframework.util.MultiValueMap)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMetricsEndpoint(org.springframework.boot.actuate.metrics.MetricsEndpoint)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.PatternEntry: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$EmptyMap: boolean isEmpty()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues removeEntry(io.undertow.util.HttpString)>-><io.undertow.util.HttpString: boolean equals(io.undertow.util.HttpString)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: void <init>()>
<org.springframework.security.core.userdetails.User: org.springframework.security.core.userdetails.User$UserBuilder withUsername(java.lang.String)>-><org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder username(java.lang.String)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder customizers(java.lang.Iterable)>-><org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>
<org.springframework.core.style.DefaultToStringStyler: void styleIdentityHashCode(java.lang.StringBuilder,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.User: int hashCode()>-><java.lang.String: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.lang.invoke.MemberName: int hashCode()>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void setMaxAge(java.time.Duration)>-><java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.LocalTime: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.IntNode: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<com.google.common.collect.Maps: java.util.Map transformValues(java.util.Map,com.google.common.base.Function)>-><com.google.common.collect.Maps: java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadSource(org.springframework.core.io.Resource,java.nio.charset.Charset)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFormattingConversionService(org.springframework.format.support.FormattingConversionService)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object getLazyResolutionProxyIfNecessary(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>-><org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: boolean isLazy(org.springframework.beans.factory.config.DependencyDescriptor)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderMap put(io.undertow.util.HttpString,java.lang.String)>-><io.undertow.util.HeaderValues: void clear()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedHashMap$LinkedValues: int size()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCachesEndpointWebExtension(org.springframework.boot.actuate.cache.CachesEndpointWebExtension)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration: org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension reactiveHealthEndpointWebExtension(org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: boolean isEmpty()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: boolean isLazy(org.springframework.beans.factory.config.DependencyDescriptor)>-><org.springframework.core.MethodParameter: java.lang.reflect.AnnotatedElement getAnnotatedElement()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder username(java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><java.lang.String: int indexOf(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.SimpleTimeZone: int hashCode()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendPattern(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setViewResolver(org.springframework.web.servlet.ViewResolver)>
<io.micrometer.core.util.internal.logging.JdkLogger: void fillCallerData(java.lang.String,java.util.logging.LogRecord)>-><java.lang.StackTraceElement: java.lang.String getMethodName()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><java.lang.String: int length()>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: int hashCode()>
<java.util.Collections$UnmodifiableRandomAccessList: java.util.List subList(int,int)>-><io.undertow.util.HeaderValues: java.util.List subList(int,int)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: boolean isFilterApplicable(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping welcomePageHandlerMapping(org.springframework.context.ApplicationContext,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: void <init>(org.springframework.context.ApplicationContext)>
<io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: void <init>(java.lang.management.OperatingSystemMXBean,java.lang.Iterable)>-><io.micrometer.core.instrument.binder.system.FileDescriptorMetrics: java.lang.reflect.Method detectMethod(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<java.util.AbstractMap: java.lang.String toString()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: int size()>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><org.springframework.util.Assert: void isTrue(boolean,java.util.function.Supplier)>
<org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void <init>()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown: void <init>()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository clientRegistrationRepository(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>-><org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository: void <init>(java.util.List)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory getOperationsFactory(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$1: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection)>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Object[])>-><org.springframework.context.support.AbstractApplicationContext: void assertBeanFactoryActive()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.sql_injection.mitigation.Servers: void <init>(javax.sql.DataSource)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.factory.config.DependencyDescriptor: int hashCode()>
<java.util.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.CurrentScope: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: java.lang.String getOrDeducePassword(org.springframework.boot.autoconfigure.security.SecurityProperties$User,org.springframework.security.crypto.password.PasswordEncoder)>-><java.lang.StringBuilder: void <init>()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<sun.security.util.DisabledAlgorithmConstraints: boolean permits(java.util.Set,java.lang.String,java.security.AlgorithmParameters)>-><java.util.JumboEnumSet: boolean isEmpty()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Character: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider webMvcTagsProvider()>-><org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Vector$Itr: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.LongNode: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>-><java.util.ArrayDeque: boolean delete(int)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.DurationFieldType$StandardDurationFieldType: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: boolean responseStarted()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>-><javax.validation.Validation$GenericBootstrapImpl: javax.validation.Configuration configure()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.nio.charset.Charset: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: java.util.List getCallableInterceptors()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<io.undertow.server.handlers.cache.LRUCache$CacheEntry: boolean setToken(java.lang.Object)>-><java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addExtensionMatch(java.lang.String,java.lang.String,io.undertow.servlet.handlers.ServletChain)>-><io.undertow.util.SubstringMap: void put(java.lang.String,java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.DateTimeZone: int hashCode()>
<org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object,org.springframework.core.style.ToStringStyler)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.TreeMap: java.util.Set keySet()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.IRScope: boolean equals(java.lang.Object)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void <init>(java.lang.Class,java.lang.Object,java.lang.Object[])>-><org.springframework.boot.util.LambdaSafe$GenericTypeFilter: void <init>(org.springframework.boot.util.LambdaSafe$1)>
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>-><java.util.LinkedHashMap: void <init>(int)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration: org.springframework.boot.actuate.trace.http.HttpExchangeTracer httpExchangeTracer(org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties)>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><sun.security.ssl.SecureKey: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer tomcatReactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession(boolean)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession(boolean)>
<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<io.undertow.util.QueryParameterUtils: void handleQueryParameter(java.lang.String,java.util.Map,int,int,int,java.lang.String,boolean)>-><io.undertow.util.QueryParameterUtils: java.lang.String decodeParam(java.lang.String,int,int,java.lang.String,boolean)>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.security.core.userdetails.User$UserBuilder: void <init>(org.springframework.security.core.userdetails.User$1)>-><org.springframework.security.core.userdetails.User$UserBuilder: void <init>()>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.ProcessEnvironment$StringValues: int hashCode()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection: boolean isEmpty()>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementChildContextConfiguration: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<io.undertow.servlet.spec.HttpServletResponseImpl$DuplicateCookieCommitListener: void <init>(io.undertow.servlet.spec.HttpServletResponseImpl)>-><java.lang.Object: void <init>()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.LinkedList: java.lang.Object get(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><jnr.constants.ConstantSet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.openmbean.ArrayType: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.ArrayList$SubList: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: int hashCode()>
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>-><org.springframework.web.filter.GenericFilterBean: void setEnvironment(org.springframework.core.env.Environment)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: java.lang.Object getBean()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setView(org.springframework.web.servlet.View)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<io.undertow.server.handlers.cache.LRUCache: void add(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: int size()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isExtensionExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isExtensionExposed(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer getSortHandlerMethodArgumentResolverCustomizer()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.annotation.Annotation findAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.core.annotation.MergedAnnotation findMergedAnnotationOnBean(java.lang.String,java.lang.Class)>
<java.util.EnumMap: void <init>(java.util.Map)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.util.Set keySet()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter controllerExposeExcludePropertyEndpointFilter()>
<org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer: void <init>(org.springframework.context.ApplicationContext)>-><org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter: void <init>()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: byte[] getKeySpec(java.lang.String)>-><java.util.Base64: java.util.Base64$Decoder getMimeDecoder()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><com.thoughtworks.xstream.core.util.WeakCache: java.util.Set entrySet()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters$1: void <init>(org.springframework.boot.autoconfigure.http.HttpMessageConverters)>
<org.springframework.security.web.FilterInvocation: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: java.sql.ResultSet executeQuery()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: org.springframework.boot.actuate.endpoint.web.annotation.ExposableControllerEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.PathMapper: java.lang.String getRootPath(java.util.List,org.springframework.boot.actuate.endpoint.EndpointId)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ast.SymbolNode: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder roles(java.lang.String[])>-><java.lang.StringBuilder: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><net.bytebuddy.matcher.FilterableList$Empty: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>-><org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Class)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.metamodel.model.domain.NavigableRole: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><java.time.Duration: long toMillis()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.HsqlNameManager$HsqlName: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><java.util.ArrayDeque: int size()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList: void <init>()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: io.undertow.servlet.handlers.ServletPathMatchesData build()>-><io.undertow.servlet.handlers.ServletPathMatchesData: void <init>(java.util.Map,io.undertow.util.SubstringMap,java.util.Map)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.AbstractList: void clear()>-><net.bytebuddy.matcher.FilterableList$Empty: int size()>
<org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey createOperationKey(org.springframework.boot.actuate.endpoint.Operation)>-><org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey createOperationKey(org.springframework.boot.actuate.endpoint.web.WebOperation)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void <init>()>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void <init>()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.stream.ReferencePipeline: boolean anyMatch(java.util.function.Predicate)>-><java.util.stream.AbstractPipeline: java.lang.Object evaluate(java.util.stream.TerminalOp)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configurePathMatch(org.springframework.web.servlet.config.annotation.PathMatchConfigurer)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenNonNull()>-><org.springframework.boot.context.properties.PropertyMapper$NullPointerExceptionSafeSupplier: void <init>(java.util.function.Supplier)>
<com.google.common.collect.Multimaps$UnmodifiableMultimap$1: java.lang.Object apply(java.lang.Object)>-><com.google.common.collect.Multimaps$UnmodifiableMultimap$1: java.util.Collection apply(java.util.Collection)>
<org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: int size()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.Fixnum: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Properties: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><java.util.Arrays$ArrayList: java.lang.Object[] toArray()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.sql.DriverInfo: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.AbstractList: void clear()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><io.undertow.servlet.spec.ContentTypeInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Map)>-><org.springframework.util.LinkedMultiValueMap: boolean isEmpty()>
<org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.BeanWrapper createBeanWrapper()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyFixnum: int hashCode()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.requests.LandingPage: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$1: io.undertow.servlet.spec.ServletPrintWriterDelegate run()>-><sun.misc.Unsafe: java.lang.Object allocateInstance(java.lang.Class)>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>-><org.springframework.boot.validation.MessageInterpolatorFactory: void <init>()>
<org.springframework.boot.web.client.RootUriTemplateHandler: void <init>(java.lang.String,org.springframework.web.util.UriTemplateHandler)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: org.springframework.security.web.server.SecurityWebFilterChain springSecurityFilterChain(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration$OAuth2ClasspathGuard: void configure(org.springframework.context.ApplicationContext,org.springframework.security.config.web.server.ServerHttpSecurity)>
<org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder: org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder authenticationEventPublisher(org.springframework.security.authentication.AuthenticationEventPublisher)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.core.ManagedServlet: io.undertow.servlet.api.ServletInfo getServletInfo()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCluster(com.couchbase.client.java.Cluster)>
<java.util.AbstractList: void removeRange(int,int)>-><java.util.LinkedList$ListItr: void remove()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Collections$SynchronizedCollection: int size()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<java.util.ArrayDeque: java.util.Spliterator spliterator()>-><java.util.ArrayDeque$DeqSpliterator: void <init>(java.util.ArrayDeque,int,int)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.asm.Handle: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashMap$KeySet: int size()>
<java.lang.Object: java.lang.String toString()>-><java.time.Instant: int hashCode()>
<org.springframework.security.web.server.DefaultServerRedirectStrategy: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(org.springframework.boot.actuate.endpoint.EndpointFilter,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(org.springframework.boot.actuate.endpoint.EndpointFilter,org.springframework.boot.actuate.endpoint.ExposableEndpoint)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.sql.DriverInfo: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.AbstractMap: int hashCode()>
<org.springframework.boot.context.properties.source.SpringConfigurationPropertySources$SourcesIterator: org.springframework.boot.context.properties.source.ConfigurationPropertySource fetchNext()>-><java.util.PrimitiveIterator$OfInt: java.lang.Object next()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void debug(java.lang.Object,java.lang.Throwable)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.SubList: java.util.Iterator iterator()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void <init>(org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler taskScheduler(org.springframework.boot.task.TaskSchedulerBuilder)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: void <init>()>-><com.fasterxml.jackson.core.util.InternCache: void <init>()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.concurrent.ConcurrentHashMap$CollectionView: void clear()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void createOutputStream()>-><io.undertow.util.AbstractAttachable: java.lang.Object getAttachment(io.undertow.util.AttachmentKey)>
<org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter: java.util.Set asSet(java.util.Collection)>-><java.util.Collection: java.util.stream.Stream stream()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.base.AbstractPeriod: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.core.io.buffer.NettyDataBufferFactory: void <init>(io.netty.buffer.ByteBufAllocator)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.JavaType: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void addMapping(java.lang.String,java.lang.Class)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.SubstringMap: boolean doEquals(java.lang.String,java.lang.String,int)>-><java.lang.String: char charAt(int)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object get(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ListableBeanFactory,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Hashtable: boolean isEmpty()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.ArrayType: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,boolean,java.lang.String[])>-><org.springframework.boot.web.servlet.DynamicRegistrationBean: void <init>()>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.util.LinkedMultiValueMap: java.util.Set entrySet()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.api.DeploymentInfo getDeploymentInfo()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration: org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter webfluxMetrics(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsProvider)>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: java.lang.String getOrDeducePassword(org.springframework.boot.autoconfigure.security.SecurityProperties$User,org.springframework.security.crypto.password.PasswordEncoder)>-><java.util.regex.Matcher: boolean matches()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.jruby.util.JRubyClassLoader: void terminateJarIndexCacheEntries()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.Objects: int hashCode(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.expression.TypedValue: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object buildLazyResolutionProxy(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>-><org.springframework.aop.framework.AdvisedSupport: void setTargetSource(org.springframework.aop.TargetSource)>
<org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void <init>()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.util.MimeType: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.servlet.handlers.ServletPathMatch: boolean isRequiredWelcomeFileMatch()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setExcludedViewNames(java.lang.String[])>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<org.springframework.security.authentication.AnonymousAuthenticationToken: void <init>(java.lang.String,java.lang.Object,java.util.Collection)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Integer extractKeyHash(java.lang.String)>
<org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>-><org.springframework.boot.context.properties.PropertyMapper$NullPointerExceptionSafeSupplier: java.lang.Object get()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<sun.security.ssl.SessionId: byte[] getId()>-><java.lang.Object: java.lang.Object clone()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyString: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.zone.ZoneOffsetTransitionRule: int hashCode()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.core.annotation.MergedAnnotation findMergedAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.core.annotation.MergedAnnotation: org.springframework.core.annotation.MergedAnnotation missing()>
<org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)>
<io.undertow.servlet.spec.HttpServletResponseImpl$DuplicateCookieCommitListener: void <init>(io.undertow.servlet.spec.HttpServletResponseImpl,io.undertow.servlet.spec.HttpServletResponseImpl$1)>-><io.undertow.servlet.spec.HttpServletResponseImpl$DuplicateCookieCommitListener: void <init>(io.undertow.servlet.spec.HttpServletResponseImpl)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.api.DeploymentInfo getDeploymentInfo()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar: void <init>(java.lang.String,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar: java.lang.String cleanBasePath(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.actuate.management.HeapDumpWebEndpoint: void <init>(long)>-><java.util.concurrent.locks.ReentrantLock: void <init>()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityService getCloudFoundrySecurityService(org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.core.env.Environment)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityService: void <init>(org.springframework.boot.web.client.RestTemplateBuilder,java.lang.String,boolean)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer tomcatServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.jruby.ir.IRBuilder$2: int compare(java.util.Map$Entry,java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyModule: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isFilterMatch(java.lang.Class,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>
<java.lang.Object: java.lang.String toString()>-><java.util.Locale: int hashCode()>
<java.util.stream.ForEachOps$ForEachOp$OfRef: void accept(java.lang.Object)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><org.springframework.boot.web.client.RootUriTemplateHandler: org.springframework.boot.web.client.RootUriTemplateHandler addTo(org.springframework.web.client.RestTemplate,java.lang.String)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.actuate.cache.CachesEndpoint: void <init>(java.util.Map)>-><java.util.LinkedHashMap: void <init>(java.util.Map)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jcodings.Encoding: int hashCode()>
<java.util.Collections$SetFromMap: boolean contains(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: boolean containsKey(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean resourceUrlEncodingFilter()>-><org.springframework.web.servlet.resource.ResourceUrlEncodingFilter: void <init>()>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Thread$WeakClassKey: int hashCode()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration: org.springframework.data.mongodb.core.MongoDbFactorySupport mongoDbFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.boot.autoconfigure.mongo.MongoProperties)>-><org.springframework.data.mongodb.core.SimpleMongoClientDbFactory: void <init>(com.mongodb.client.MongoClient,java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.runtime.Arity: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><io.undertow.servlet.spec.ServletCookieAdaptor: java.lang.String getDomain()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$JettyAccessLogCustomizer jettyManagementAccessLogCustomizer()>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.LongNode: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTomcatServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void warn(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isCloudFoundryHealthEndpointExtension(java.lang.Object)>-><org.springframework.core.annotation.TypeMappedAnnotations: boolean isPresent(java.lang.Class)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet()>-><org.springframework.web.servlet.DispatcherServlet: void setDetectAllHandlerExceptionResolvers(boolean)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration$ManagementErrorPageCustomizer managementErrorPageCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setNoOpCacheManager(org.springframework.cache.support.NoOpCacheManager)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration: void <init>()>
<org.springframework.context.support.ResourceBundleMessageSource$MessageSourceControl: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: java.util.Locale getDefaultLocale()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setAsyncRequestTimeout(long)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setServerHeader(java.lang.String)>
<org.springframework.validation.AbstractErrors: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<io.undertow.util.HeaderValues: boolean add(java.lang.String)>-><io.undertow.util.HeaderValues: void addLast(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer getPageableHandlerMethodArgumentResolverCustomizer()>
<java.util.Hashtable: java.lang.String toString()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers getCacheManagerCustomizersInstance()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.io.PrintWriter getWriter()>-><io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getCharacterEncoding()>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.validation.ObjectError: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder poolSize(int)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><java.util.HashMap: void putAll(java.util.Map)>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><io.undertow.servlet.api.DeploymentInfo: boolean isEscapeErrorMessage()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.ScopeModule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addExtensionMatch(java.lang.String,java.lang.String,io.undertow.servlet.handlers.ServletChain)>-><io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch: void <init>(io.undertow.servlet.handlers.ServletChain)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.UnboxedFixnum: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.google.common.collect.Maps$Values: void clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><javax.security.auth.Subject$SecureSet: int size()>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void <init>()>-><org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void setPreload(boolean)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$SingletonMap: boolean isEmpty()>
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.server.session.InMemorySessionManager$SessionImpl: void requestDone(io.undertow.server.HttpServerExchange)>-><java.lang.Long: long longValue()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.BooleanNode: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMapping,java.util.Collection,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.cors.CorsConfiguration,org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundrySecurityInterceptor,org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver)>-><org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMapping,java.util.Collection,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.cors.CorsConfiguration,boolean)>
<org.springframework.boot.info.GitProperties: void coercePropertyToEpoch(java.util.Properties,java.lang.String)>-><org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>
<io.micrometer.core.instrument.binder.system.ProcessorMetrics: java.lang.Class getFirstClassFound(java.util.List)>-><java.util.AbstractList: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.TreeSet: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.aopalliance.intercept.MethodInterceptor getMethodInterceptor()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.IdentityHashMap$KeySet: void clear()>
<org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints: void <init>(java.lang.String,java.util.Collection)>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void configureMessageConverters(java.util.List)>
<java.lang.Object: java.lang.String toString()>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hibernate.metamodel.model.domain.NavigableRole: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>-><org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.ArrayDeque$DeqSpliterator: int getFence()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<org.thymeleaf.spring5.SpringWebFluxTemplateEngine: void <init>()>-><org.thymeleaf.spring5.context.webflux.SpringWebFluxEngineContextFactory: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.ZonedDateTime: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: java.lang.String getPassword()>
<sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>-><sun.security.ssl.SessionId: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.management.HeapDumpWebEndpoint: void <init>(long)>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.ParsePosition: int hashCode()>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.security.web.server.authentication.logout.LogoutWebFilter: void <init>()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: void <init>(java.lang.String,java.lang.Object,java.util.Collection)>
<io.undertow.util.HeaderValues: boolean contains(java.lang.Object)>-><io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<org.springframework.aop.framework.DefaultAopProxyFactory: org.springframework.aop.framework.AopProxy createAopProxy(org.springframework.aop.framework.AdvisedSupport)>-><java.lang.Class: boolean isInterface()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<synthetic.method.FilterChainImpl: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setStatusAggregator(org.springframework.boot.actuate.health.StatusAggregator)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.support.EncodedResource: org.springframework.core.io.Resource getResource()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.ClassPathResource: java.lang.String getFilename()>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration: org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension reactiveHealthEndpointWebExtension(org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>-><org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension: void <init>(org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry,org.springframework.boot.actuate.health.HealthEndpointGroups)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.ArrayList: void clear()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><io.jsonwebtoken.impl.JwtMap: int hashCode()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void <init>()>-><java.time.Duration: java.time.Duration ofSeconds(long)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.HashSet: java.util.Iterator iterator()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.web.filter.RequestContextFilter requestContextFilter()>-><org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter: void <init>()>
<org.springframework.boot.web.servlet.error.DefaultErrorAttributes: void <init>()>-><org.springframework.boot.web.servlet.error.DefaultErrorAttributes: void <init>(boolean)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$InvocationResult invoke(java.lang.Object,java.util.function.Supplier)>-><org.springframework.boot.util.LambdaSafe$InvocationResult: org.springframework.boot.util.LambdaSafe$InvocationResult noResult()>
<org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.BeanWrapper createBeanWrapper()>-><org.springframework.beans.PropertyAccessorFactory: org.springframework.beans.BeanWrapper forBeanPropertyAccess(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.awt.geom.Point2D: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: java.util.Optional getWelcomePage()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void <init>()>
<java.util.HashMap$Values: void clear()>-><java.util.HashMap: void clear()>
<java.lang.reflect.WeakCache$Factory: java.lang.Object get()>-><com.google.common.collect.ForwardingMap: java.lang.Object get(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.http.HttpProperties getHttpPropertiesInstance()>-><org.springframework.boot.autoconfigure.http.HttpProperties: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SecurityWebFilterChainImpl: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.springframework.boot.actuate.env.EnvironmentEndpoint: void setKeysToSanitize(java.lang.String[])>-><org.springframework.boot.actuate.endpoint.Sanitizer: void setKeysToSanitize(java.lang.String[])>
<com.google.common.collect.Multimaps$Keys: int distinctElements()>-><java.util.Collections$UnmodifiableMap: int size()>
<java.lang.Object: java.lang.String toString()>-><java.time.zone.ZoneRules: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setBufferRequestBody(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory,java.lang.String,java.lang.Class[])>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean createEndpointBean(java.lang.String)>-><org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><org.springframework.util.Assert: void state(boolean,java.util.function.Supplier)>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addPrefixMatch(java.lang.String,io.undertow.servlet.handlers.ServletChain,boolean)>-><io.undertow.util.SubstringMap: void put(java.lang.String,java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,java.util.List,java.util.Collection,java.util.Collection)>
<java.util.Objects: int hashCode(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor: void <init>(java.lang.String,org.springframework.security.access.method.MethodSecurityMetadataSource,java.lang.String)>-><org.springframework.aop.support.AbstractPointcutAdvisor: void <init>()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.passes.CompilerPass: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Locale: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration: void <init>()>
<java.lang.Object: java.lang.String toString()>-><com.sun.beans.WildcardTypeImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryHealthEndpointWebExtension: void <init>(org.springframework.boot.actuate.health.HealthEndpointWebExtension)>-><java.lang.Object: void <init>()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setEncoding(java.nio.charset.Charset)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.io.FileSystemResource: int hashCode()>
<org.springframework.boot.actuate.health.PingHealthIndicator: void <init>()>-><org.springframework.boot.actuate.health.AbstractHealthIndicator: void <init>()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.FileSystemResource: java.lang.String getFilename()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.java.proxies.ArrayJavaProxy: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics fileDescriptorMetrics()>
<org.springframework.boot.actuate.security.AuthenticationAuditListener$WebAuditListener: void <init>(org.springframework.boot.actuate.security.AuthenticationAuditListener$1)>-><org.springframework.boot.actuate.security.AuthenticationAuditListener$WebAuditListener: void <init>()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.Year: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,java.util.List,java.util.Collection,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,java.util.List,java.util.Collection,java.util.Collection)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.text.AttributeEntry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: boolean containsKey(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.org.objectweb.asm.Type: int hashCode()>
<org.springframework.security.authentication.DelegatingReactiveAuthenticationManager: void <init>(java.util.List)>-><org.springframework.util.Assert: void notEmpty(java.util.Collection,java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.TemporaryVariable: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.io.FileSystemResource: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver freeMarkerViewResolver()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderMap put(io.undertow.util.HttpString,java.lang.String)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.LinkedHashSet: void <init>(java.util.Collection)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Hashtable: java.util.Set entrySet()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void <init>()>-><java.util.HashMap: void <init>()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyFloat: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashSet: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.web.server.adapter.ForwardedHeaderTransformer forwardedHeaderTransformer()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<java.util.Hashtable: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration: void <init>()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addReturnValueHandlers(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJavaDate()>-><org.springframework.format.datetime.DateFormatterRegistrar: void setFormatter(org.springframework.format.datetime.DateFormatter)>
<org.jruby.ir.operands.ClosureLocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.web.servlet.View getView()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$2$1: void accept(java.lang.Object)>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer extractPathWithinApplication(org.springframework.http.server.PathContainer,org.springframework.http.server.PathContainer)>-><org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.web.jersey.JerseyManagementContextConfiguration: org.springframework.boot.web.servlet.ServletRegistrationBean jerseyServletRegistration(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath,org.glassfish.jersey.server.ResourceConfig)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,java.lang.String[])>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String getJwkSetUri()>
<io.undertow.server.handlers.cache.LRUCache: java.lang.Object remove(java.lang.Object)>-><io.undertow.server.handlers.cache.LRUCache$CacheEntry: java.lang.Object getValue()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerExceptionResolver: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: java.lang.Object set(int,java.lang.Object)>-><io.undertow.util.HeaderValues: java.lang.String set(int,java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.x509.Extension: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMapping,java.util.Collection,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.cors.CorsConfiguration,org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityInterceptor,org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Float: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: void <init>()>-><org.springframework.util.unit.DataSize: org.springframework.util.unit.DataSize ofMegabytes(long)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$1: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void addExtension(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>-><java.util.HashSet: boolean add(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.PropertyPermission: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.Collections$EmptyMap: boolean isEmpty()>
<org.springframework.boot.web.client.RestTemplateBuilderClientHttpRequestInitializer: void <init>(org.springframework.boot.web.client.BasicAuthentication,java.util.Map,java.util.Set)>-><java.lang.Object: void <init>()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void warn(java.lang.Object)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.springframework.boot.actuate.info.EnvironmentInfoContributor: void <init>(org.springframework.core.env.ConfigurableEnvironment)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.GregorianCalendar: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void accept(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: org.springframework.http.client.ClientHttpRequestFactory unwrapRequestFactoryIfNecessary(org.springframework.http.client.ClientHttpRequestFactory)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.JsonViewResponseBodyAdvice: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: boolean equals(java.lang.Object)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback withLogger(java.lang.Class)>-><org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback withLogger(org.apache.commons.logging.Log)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyObject: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.accept.ContentNegotiationManager buildContentNegotiationManager()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.util.RegexpOptions: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration: org.springframework.boot.actuate.logging.LogFileWebEndpoint logFileWebEndpoint(org.springframework.beans.factory.ObjectProvider,org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<java.util.Hashtable: void putAll(java.util.Map)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration: org.springframework.transaction.support.TransactionTemplate transactionTemplate(org.springframework.transaction.PlatformTransactionManager)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addArgumentResolvers(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.LinkedHashMap$LinkedEntrySet: int size()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.Provider$UString: int hashCode()>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.util.Assert: void state(boolean,java.lang.String)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJsr310()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.persist.CachedObjectBase: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint conditionsReportEndpoint(org.springframework.context.ConfigurableApplicationContext)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$1$1: int getCount()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.IntervalSecondData: int hashCode()>
<org.springframework.boot.web.servlet.DynamicRegistrationBean: void setName(java.lang.String)>-><org.springframework.util.Assert: void hasLength(java.lang.String,java.lang.String)>
<org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityInterceptor: void <init>(org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.TokenValidator,org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundrySecurityService,java.lang.String)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.tz.CachedDateTimeZone: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.AbstractSet: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool getPool()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configurePathMatch(org.springframework.web.servlet.config.annotation.PathMatchConfigurer)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webgoat.AjaxAuthenticationEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void sendError(int,java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.audit.AuditEventsEndpoint: void <init>(org.springframework.boot.actuate.audit.AuditEventRepository)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.validation.BindException: java.lang.Object getTarget()>-><org.springframework.validation.BindException: java.lang.Object getTarget()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><org.jruby.util.collections.WeakHashSet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><java.lang.String: boolean endsWith(java.lang.String)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.xnio.SingleOption: java.lang.Object cast(java.lang.Object)>-><java.lang.Class: java.lang.Object cast(java.lang.Object)>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.util.ArrayList: void <init>(int)>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.ProcessEnvironment$StringValues: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.lang.NullPointerException: void <init>()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: java.lang.Object apply(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>
<io.undertow.servlet.core.ManagedServlets: io.undertow.servlet.handlers.ServletHandler addServlet(io.undertow.servlet.api.ServletInfo)>-><io.undertow.util.CopyOnWriteMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.chrono.GJChronology: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.XXssProtectionServerHttpHeadersWriter: void <init>()>-><org.springframework.security.web.server.header.XXssProtectionServerHttpHeadersWriter: void updateDelegate()>
<org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration: org.springframework.data.mongodb.core.MongoDbFactorySupport mongoDbFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.boot.autoconfigure.mongo.MongoProperties)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void <init>(io.undertow.servlet.handlers.ServletRequestContext,int)>-><javax.servlet.ServletOutputStream: void <init>()>
<org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints: void <init>(java.lang.String,java.util.Collection)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor: void <init>(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.context.ApplicationContext)>-><java.lang.Object: void <init>()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>-><org.springframework.web.filter.GenericFilterBean: void setServletContext(javax.servlet.ServletContext)>
<org.springframework.security.authentication.AnonymousAuthenticationToken: void <init>(java.lang.Integer,java.lang.Object,java.util.Collection)>-><org.springframework.security.authentication.AbstractAuthenticationToken: void setAuthenticated(boolean)>
<io.undertow.servlet.spec.ServletCookieAdaptor: java.lang.String getDomain()>-><javax.servlet.http.Cookie: java.lang.String getDomain()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.AbstractList: void removeRange(int,int)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.cglib.core.Signature: int hashCode()>
<io.undertow.server.handlers.cache.LRUCache: java.lang.Object get(java.lang.Object)>-><java.lang.System: long currentTimeMillis()>
<org.springframework.security.authentication.AnonymousAuthenticationToken: void <init>(java.lang.Integer,java.lang.Object,java.util.Collection)>-><java.lang.Integer: int intValue()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.SubList$1: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void extendMessageConverters(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<io.undertow.servlet.spec.SecurityActions: io.undertow.servlet.spec.HttpSessionImpl forSession(io.undertow.server.session.Session,javax.servlet.ServletContext,boolean)>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<org.springframework.jmx.support.MBeanRegistrationSupport: void setRegistrationPolicy(org.springframework.jmx.support.RegistrationPolicy)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.security.authentication.AnonymousAuthenticationToken: void <init>(java.lang.Integer,java.lang.Object,java.util.Collection)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)>-><org.springframework.context.support.ResourceBundleMessageSource$MessageSourceControl: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration: org.springframework.boot.web.servlet.filter.OrderedFormContentFilter formContentFilter()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.RubyHash$BaseSet: void clear()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration: org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter webfluxMetrics(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsProvider)>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web: org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server getServer()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.UUID: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection convertToEndpoints(java.util.Collection)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<io.undertow.server.handlers.cache.LRUCache: java.lang.Object remove(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.AbstractList$Itr: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.UTCDateTimeZone: int hashCode()>
<org.springframework.core.annotation.AnnotationsScanner: java.lang.annotation.Annotation[] getDeclaredAnnotations(java.lang.reflect.AnnotatedElement,boolean)>-><org.springframework.core.annotation.AnnotatedElementUtils$AnnotatedElementForAnnotations: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ListableBeanFactory,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration: org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar servletEndpointRegistrar(org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties,org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getRelativePath(java.lang.String)>
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void addMapping(java.lang.String,java.lang.Class)>-><java.lang.RuntimeException: void <init>(java.lang.String)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>-><java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<org.springframework.core.convert.support.ObjectToOptionalConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,java.util.List,java.util.Collection)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection,java.util.Collection)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.FieldPosition: int hashCode()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.jruby.RubyHash$BaseSet: void clear()>-><org.jruby.RubyHash: void clear()>
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>-><org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor: javax.servlet.ServletConfig getServletConfig()>
<org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.BeanWrapper createBeanWrapper()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean owns(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: boolean isOwnedBy(java.util.concurrent.locks.AbstractQueuedSynchronizer)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.web.jersey.JerseyManagementContextConfiguration: org.springframework.boot.web.servlet.ServletRegistrationBean jerseyServletRegistration(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath,org.glassfish.jersey.server.ResourceConfig)>-><org.glassfish.jersey.servlet.ServletContainer: void <init>(org.glassfish.jersey.server.ResourceConfig)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.runtime.Block: boolean equals(java.lang.Object)>
<org.springframework.util.ClassUtils: java.lang.String getShortNameAsProperty(java.lang.Class)>-><java.lang.String: int lastIndexOf(int)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: void setString(int,java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.awt.Font: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.UnboxedBoolean: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.lang.String: boolean startsWith(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.nio.charset.Charset: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.security.Provider: java.util.Set entrySet()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.HashSet: void clear()>
<java.lang.Object: java.lang.String toString()>-><sun.security.x509.AVA: int hashCode()>
<com.google.common.collect.Multisets$EntrySet: void clear()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: com.google.common.collect.Multiset multiset()>
<javax.validation.Validation$GenericBootstrapImpl: javax.validation.Configuration configure()>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.lang.invoke.MethodType: int hashCode()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.provider.PolicyFile$SelfPermission: int hashCode()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.cache.CacheProperties getCachePropertiesInstance()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: byte[] getKeySpec(java.lang.String)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJsr310()>-><org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.provider.PolicyParser$PrincipalEntry: int hashCode()>
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: void <init>()>-><java.util.HashMap: void <init>()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$EntrySet: int size()>
<java.util.AbstractCollection: void clear()>-><io.micrometer.shaded.org.pcollections.IntTree$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.LocalDateTime: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: int hashCode()>
<java.util.Hashtable$EntrySet: void clear()>-><java.util.Hashtable: void clear()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>-><org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><java.util.Hashtable: boolean isEmpty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<java.util.stream.MatchOps: java.util.stream.TerminalOp makeRef(java.util.function.Predicate,java.util.stream.MatchOps$MatchKind)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void extendMessageConverters(java.util.List)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.springframework.http.server.reactive.ReactorServerHttpResponse: void <init>(reactor.netty.http.server.HttpServerResponse,org.springframework.core.io.buffer.DataBufferFactory)>-><org.springframework.http.HttpHeaders: void <init>(org.springframework.util.MultiValueMap)>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.javasupport.JavaClass: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.AbstractMap: int hashCode()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.AbstractList: int hashCode()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.AbstractList: void clear()>-><java.util.AbstractList: void removeRange(int,int)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.SubList: int size()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void <init>()>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver freeMarkerViewResolver()>-><org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>-><org.springframework.web.servlet.handler.HandlerInterceptorAdapter: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean last()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter,org.springframework.http.server.reactive.NettyHeadersAdapter$1)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties getHealthIndicatorPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties: void <init>()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer reactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository clientRegistrationRepository(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void <init>()>-><org.springframework.web.servlet.view.AbstractCachingViewResolver: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setGenerateUniqueName(boolean)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.apache.logging.log4j.spi.Provider: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.DateFormatSymbols: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.core.io.SerializedString: int hashCode()>
<java.util.Collections$UnmodifiableList: java.lang.Object get(int)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$ValuesView: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.operands.StringLiteral: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setEndpointMediaTypes(org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes)>
<org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey createOperationKey(org.springframework.boot.actuate.endpoint.web.WebOperation)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: void <init>(java.lang.Object,java.util.function.Supplier)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration: org.springframework.security.config.annotation.rsocket.RSocketSecurity rsocketSecurity(org.springframework.context.ApplicationContext)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean add(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBean(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isExtensionExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSchema(java.util.List)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.SymbolProc: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><java.util.ArrayList: boolean isEmpty()>
<sun.net.RegisteredDomain: java.lang.String getRegisteredDomain(java.lang.String)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.Hashtable$Entry: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.lang.NullPointerException: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<org.springframework.core.io.buffer.LimitedDataBufferList: void clear()>-><java.util.ArrayList: void clear()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void <init>(java.lang.Class,java.lang.Object,java.lang.Object[])>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setPlatform(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.Statement getStatement()>
<org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object getFirst(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.String getFirst(java.lang.String)>
<java.util.HashMap$KeySet: void clear()>-><java.util.HashMap: void clear()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void <init>()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHikariDataSource(com.zaxxer.hikari.HikariDataSource)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getRelativePath(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<io.undertow.util.CopyOnWriteMap: java.util.Set entrySet()>-><java.util.HashMap: java.util.Set entrySet()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSecurityWebFilterChain(org.springframework.security.web.server.SecurityWebFilterChain)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCloudFoundryHealthEndpointWebExtension(org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryHealthEndpointWebExtension)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<org.springframework.http.client.HttpComponentsClientHttpResponse: org.springframework.http.HttpHeaders getHeaders()>-><org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder authenticationManagerBuilder(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.context.ApplicationContext)>-><org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: java.lang.Object getBeanOrNull(org.springframework.context.ApplicationContext,java.lang.Class)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.CurrentScope: int hashCode()>
<org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.authentication.logout.LogoutWebFilter: void <init>()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>-><io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.SymbolProc: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.Symbol: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()>-><org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.BeanWrapper createBeanWrapper()>
<java.security.Provider: void implPutAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.HashSet: boolean isEmpty()>
<org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar: void <init>(java.lang.String,java.util.Collection)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.LocalDate: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.HsqlNameManager$HsqlName: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.xnio.Buffers: long remaining(java.nio.Buffer[])>-><org.xnio.Buffers: long remaining(java.nio.Buffer[],int,int)>
<com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Maps$7: java.lang.Object transformEntry(java.lang.Object,java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.BlobDataID: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.core.annotation.MergedAnnotation findMergedAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.beans.factory.support.AbstractBeanDefinition: boolean hasBeanClass()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration: com.fasterxml.jackson.databind.ObjectMapper jacksonObjectMapper(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder)>
<org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice: void <init>()>-><org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.Row: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.idor.IDORViewOtherProfile: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver: void <init>(org.springframework.core.ReactiveAdapterRegistry)>-><org.springframework.expression.spel.standard.SpelExpressionParser: void <init>()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: org.springframework.security.web.server.SecurityWebFilterChain springSecurityFilterChain()>-><org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: org.springframework.security.web.server.SecurityWebFilterChain springSecurityFilterChain(org.springframework.security.config.web.server.ServerHttpSecurity)>
<java.lang.Object: java.lang.String toString()>-><sun.util.BuddhistCalendar: int hashCode()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String[] getViewNames()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.beans.IndexedPropertyDescriptor: int hashCode()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer freeMarkerConfigurer()>-><org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.annotation.MergedAnnotation: org.springframework.core.annotation.MergedAnnotation from(java.lang.Object,java.lang.annotation.Annotation)>-><org.springframework.core.annotation.TypeMappedAnnotation: org.springframework.core.annotation.MergedAnnotation from(java.lang.Object,java.lang.annotation.Annotation)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.util.RegexpOptions: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.health.AbstractHealthIndicator: void <init>()>-><org.springframework.boot.actuate.health.AbstractHealthIndicator: void <init>(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.JumboEnumSet: int size()>
<io.undertow.servlet.core.ManagedServlets: io.undertow.servlet.handlers.ServletHandler getServletHandler(java.lang.String)>-><io.undertow.util.CopyOnWriteMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.apache.commons.logging.LogAdapter$Log4jLog: void warn(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBasicErrorController(org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAnnotationMBeanExporter(org.springframework.jmx.export.annotation.AnnotationMBeanExporter)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.PropertyValue: int hashCode()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setType(java.lang.Class)>
<org.springframework.http.server.DefaultRequestPath: void <init>(java.net.URI,java.lang.String)>-><org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer parsePath(java.lang.String)>
<java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.format.InternalParserDateTimeParser: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><io.undertow.servlet.handlers.ServletPathMatches$MatchData: void <init>(io.undertow.servlet.handlers.ServletHandler,java.lang.String,java.lang.String,javax.servlet.http.MappingMatch,boolean,io.undertow.servlet.handlers.ServletPathMatches$1)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.web.authentication.WebAuthenticationDetails: int hashCode()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Boolean: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.util.LinkedMultiValueMap: void <init>()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasWaiters(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.String toString()>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.awt.Font: int hashCode()>
<io.undertow.util.HeaderMap: void resize()>-><io.undertow.util.HttpString: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration: org.springframework.boot.actuate.cache.CachesEndpointWebExtension cachesEndpointWebExtension(org.springframework.boot.actuate.cache.CachesEndpoint)>
<org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint configurationPropertiesReportEndpoint(org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties)>-><org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<io.micrometer.core.instrument.binder.system.UptimeMetrics: void <init>(java.lang.Iterable)>-><io.micrometer.core.instrument.binder.system.UptimeMetrics: void <init>(java.lang.management.RuntimeMXBean,java.lang.Iterable)>
<org.springframework.security.authentication.AbstractUserDetailsReactiveAuthenticationManager: void <init>()>-><reactor.core.scheduler.Schedulers: reactor.core.scheduler.Scheduler newParallel(java.lang.String,int,boolean)>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver reactiveCurrentSecurityContextArgumentResolver()>-><org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver: void <init>(org.springframework.core.ReactiveAdapterRegistry)>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><java.util.Optional: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Vector$Itr: boolean hasNext()>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Env: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl getSsl()>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer webEndpointDiscoverer(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyBoolean: int hashCode()>
<java.util.Iterator: void remove()>-><java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><jnr.constants.ConstantSet: int size()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<io.undertow.util.HeaderMap: java.util.Collection remove(io.undertow.util.HttpString)>-><java.util.Collections: java.util.List emptyList()>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.String getMessage()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.core.ManagedServlets getServlets()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.PreparedStatement prepareStatement(java.lang.String,int,int)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: boolean isFilterApplicable(java.lang.String,java.lang.String)>-><java.lang.String: boolean endsWith(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<io.undertow.util.CopyOnWriteMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><io.undertow.util.CopyOnWriteMap: java.lang.Object putInternal(java.lang.Object,java.lang.Object)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><java.io.PushbackInputStream: void close()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void closeAsync()>-><java.lang.Integer: java.lang.String toString(int)>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerExceptionResolver compositeHandlerExceptionResolver()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerExceptionResolver: void <init>()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addReturnValueHandlers(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment couchbaseEnvironment()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureMessageConverters(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.javasupport.JavaArray: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.net.URI: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.UnresolvedPermission: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.AbstractMap: boolean isEmpty()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<org.springframework.security.authentication.UserDetailsRepositoryReactiveAuthenticationManager: void <init>(org.springframework.security.core.userdetails.ReactiveUserDetailsService)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>-><org.springframework.core.style.ToStringCreator: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: int hashCode()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.OffsetDateTime: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.springframework.util.LinkedMultiValueMap: boolean isEmpty()>
<org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory: java.util.Collection createOperations(org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object)>-><org.springframework.core.MethodIntrospector: java.util.Map selectMethods(java.lang.Class,org.springframework.core.MethodIntrospector$MetadataLookup)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Integer: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setInfoEndpoint(org.springframework.boot.actuate.info.InfoEndpoint)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Boolean: int hashCode()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractCollection: void clear()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View: java.lang.String getPrefix()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.util.stream.Nodes$SizedCollectorTask: void compute()>-><java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
<org.springframework.boot.actuate.security.AbstractAuthorizationAuditListener: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.HashSet: boolean isEmpty()>
<org.hibernate.MultiTenancyStrategy: org.hibernate.MultiTenancyStrategy determineMultiTenancyStrategy(java.util.Map)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.util.List removeIncludeEvents(java.util.List)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><org.springframework.boot.web.servlet.RegistrationBean: int getOrder()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.Integer: int hashCode()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.session.LabelDebugger labelDebugger()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.BlindSendFileAssignment: void <init>()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void <init>(java.lang.String,io.undertow.servlet.spec.ServletContextImpl)>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.handlers.ServletPathMatches getServletPaths()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.AbstractList$Itr: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.BlobDataID: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter createRequestMappingHandlerAdapter()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.prepost.PrePostAdviceReactiveMethodInterceptor securityMethodInterceptor(org.springframework.security.access.method.AbstractMethodSecurityMetadataSource,org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>-><org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice: void <init>()>
<io.undertow.servlet.spec.ServletPrintWriterDelegate: sun.misc.Unsafe access$100()>-><io.undertow.servlet.spec.ServletPrintWriterDelegate: sun.misc.Unsafe getUnsafe0()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.Duration: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: void alloc(int)>
<java.util.Hashtable: java.lang.String toString()>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.ConcurrentModificationException: void <init>()>
<java.lang.Object: java.lang.String toString()>-><java.sql.Timestamp: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>
<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: void <init>(int)>
<org.springframework.boot.context.properties.source.MapConfigurationPropertySource: void put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.net.URI: int hashCode()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor(org.springframework.core.env.Environment)>-><org.springframework.aop.framework.ProxyConfig: void setProxyTargetClass(boolean)>
<java.lang.Object: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: int hashCode()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.springframework.boot.actuate.trace.http.HttpTrace$Request: java.net.URI getUri()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint conditionsReportEndpoint(org.springframework.context.ConfigurableApplicationContext)>-><org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint: void <init>(org.springframework.context.ConfigurableApplicationContext)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.javasupport.JavaConstructor: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.security.AuthenticationAuditListener: org.springframework.boot.actuate.security.AuthenticationAuditListener$WebAuditListener maybeCreateWebListener()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.GJChronology: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.ImmutableDescriptor: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.Object getBean()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.RubyObject: int hashCode()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureMessageConverters(java.util.List)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureMessageConverters(java.util.List)>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints pathMappedEndpoints(java.util.Collection)>-><org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints: void <init>(java.lang.String,java.util.Collection)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: void <init>()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.JumboEnumSet: boolean isEmpty()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder authenticationManagerBuilder(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.context.ApplicationContext)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.Self: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.health.HealthStatusHttpMapper: void setStatusMapping(java.util.Map)>-><java.util.HashMap: void <init>(java.util.Map)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyFloat: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<io.undertow.server.handlers.cache.LRUCache: void add(java.lang.Object,java.lang.Object)>-><io.undertow.server.handlers.cache.LRUCache: java.lang.Object remove(java.lang.Object)>
<org.springframework.core.style.DefaultToStringStyler: void styleStart(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.core.annotation.AbstractMergedAnnotation: java.util.Optional getValue(java.lang.String,java.lang.Class)>-><java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>-><java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.access.SecurityConfig: int hashCode()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><reactor.netty.http.server.HttpServerRequest: java.net.InetSocketAddress hostAddress()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.ScopeModule: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><io.undertow.server.HttpServerExchange: void addResponseCommitListener(io.undertow.server.ResponseCommitListener)>
<io.undertow.servlet.spec.ServletOutputStreamImpl$1: void <init>(io.undertow.servlet.spec.ServletOutputStreamImpl)>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>-><org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object)>
<io.micrometer.core.util.internal.logging.JdkLogger: void fillCallerData(java.lang.String,java.util.logging.LogRecord)>-><java.lang.String: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.StaticResourceJars: void <init>()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<io.undertow.servlet.api.ServletInfo: java.util.List getMappings()>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: boolean isCheckTemplate()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.BinaryData: int hashCode()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<sun.util.locale.provider.CalendarNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: java.lang.String path(org.springframework.boot.actuate.trace.http.HttpTrace)>-><java.net.URI: java.lang.String getPath()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><java.util.HashMap: void <init>()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void <init>()>-><org.springframework.util.AntPathMatcher: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint getFilterEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.http.HttpEntity: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void sendError(int,java.lang.String)>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.api.DeploymentInfo getDeploymentInfo()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: org.springframework.http.HttpHeaders initHeaders(reactor.netty.http.server.HttpServerRequest)>-><reactor.netty.http.server.HttpServerRequest: io.netty.handler.codec.http.HttpHeaders requestHeaders()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.java.proxies.ArrayJavaProxy: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData getData()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><org.jsoup.helper.ChangeNotifyingArrayList: boolean remove(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace$Name: boolean equals(java.lang.Object)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMethodSecurityMetadataSource(org.springframework.security.access.method.MethodSecurityMetadataSource)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.SimpleDateFormat: int hashCode()>
<java.net.IDN$1: java.io.InputStream run()>-><java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: java.time.format.DateTimeFormatterBuilder$PrefixTree getTree(java.time.format.DateTimeParseContext)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: java.util.List determineBootstrapHosts()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: java.util.List getBootstrapHosts()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.WeakHashMap$KeySet: void clear()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider getDataSourcePoolMetadataProvider()>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Map)>-><java.lang.Object: void <init>()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.AbstractMap$SimpleEntry: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.beans.factory.config.DependencyDescriptor: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain servletChain(io.undertow.server.HttpHandler,io.undertow.servlet.core.ManagedServlet,java.util.Map,java.lang.String,io.undertow.servlet.api.DeploymentInfo,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><io.undertow.servlet.handlers.ServletChain: void <init>(io.undertow.server.HttpHandler,io.undertow.servlet.core.ManagedServlet,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String,java.util.Map)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.Period: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><io.undertow.util.HeaderValues: int size()>
<org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>-><org.springframework.util.DefaultPropertiesPersister: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.HashSet: java.util.Iterator iterator()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><javax.net.ssl.SNIHostName: int hashCode()>
<io.undertow.servlet.core.ApplicationListeners$1: java.lang.Object initialValue()>-><io.undertow.servlet.core.ApplicationListeners$1: io.undertow.servlet.core.ApplicationListeners$ListenerState initialValue()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration: org.springframework.security.config.annotation.rsocket.RSocketSecurity rsocketSecurity(org.springframework.context.ApplicationContext)>-><org.springframework.security.config.annotation.rsocket.RSocketSecurity: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.BooleanNode: int hashCode()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$SynchronizedMap: java.util.Set keySet()>
<org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties healthEndpointProperties(org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties)>-><org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties: java.util.List getOrder()>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>-><java.util.LinkedHashMap: void clear()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder authenticationManagerBuilder(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.context.ApplicationContext)>-><org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$LazyPasswordEncoder: void <init>(org.springframework.context.ApplicationContext)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter controllerExposeExcludePropertyEndpointFilter()>-><org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter: void <init>(java.lang.Class,java.util.Collection,java.util.Collection,java.lang.String[])>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.http.HttpHeaders: java.lang.String getFirst(java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: java.lang.Object getFirst(java.lang.Object)>
<java.lang.reflect.WeakCache$Factory: java.lang.Object get()>-><com.google.common.collect.ForwardingConcurrentMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSpringTemplateEngine(org.thymeleaf.spring5.SpringTemplateEngine)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService: org.springframework.http.client.reactive.ReactorClientHttpConnector buildTrustAllSslConnector()>-><reactor.netty.http.client.HttpClient: reactor.netty.http.client.HttpClient create()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.SubstringMap: void put(java.lang.String,java.lang.Object)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><org.springframework.core.Conventions: java.lang.Object peekAhead(java.util.Collection)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.headius.invokebinder.Signature: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.DigitList: int hashCode()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.security.config.web.server.ServerHttpSecurity: void <init>()>-><org.springframework.security.config.web.server.ServerHttpSecurity$ExceptionHandlingSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.config.RuntimeBeanReference: int hashCode()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties getWebEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties: void setBasePath(java.lang.String)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.CSRFConfirmFlag1: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap: java.util.Set entrySet()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$SingletonMap: java.util.Set keySet()>
<com.google.common.collect.Maps$TransformedEntriesMap: void <init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer)>-><com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$SynchronizedMap: int hashCode()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint getFilterEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<java.text.AttributeEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties getDiskSpaceHealthIndicatorPropertiesInstance()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateNonEmpty(io.undertow.util.HttpString,java.lang.Object[],int,int,java.lang.Object)>-><java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$SingletonMap: boolean isEmpty()>
<org.springframework.security.web.server.authentication.logout.RedirectServerLogoutSuccessHandler: void <init>()>-><java.net.URI: java.net.URI create(java.lang.String)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashMap: boolean isEmpty()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.SortedOps$SizedRefSortingSink: void accept(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.http.server.reactive.ReactorHttpHandlerAdapter: reactor.core.publisher.Mono apply(reactor.netty.http.server.HttpServerRequest,reactor.netty.http.server.HttpServerResponse)>-><java.lang.StringBuilder: void <init>()>
<java.util.stream.ReferencePipeline$7$1: void accept(java.lang.Object)>-><java.util.stream.ReferencePipeline: void forEach(java.util.function.Consumer)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession(boolean)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpServletRequest _getHttpServletRequest()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService getCloudFoundrySecurityService(org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.core.env.Environment)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService: void <init>(org.springframework.web.reactive.function.client.WebClient$Builder,java.lang.String,boolean)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.web.reactive.result.view.UrlBasedViewResolver: void setOrder(int)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.HashMap$Values: int size()>
<org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics classLoaderMetrics()>-><io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeFile(java.lang.String,boolean)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: void <init>()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<java.lang.Object: java.lang.String toString()>-><java.lang.invoke.LambdaForm: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Hashtable$Entry: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.WeakHashMap$Entry: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isHealthEndpointExtension(java.lang.Object)>-><org.springframework.core.annotation.MissingMergedAnnotation: java.util.Optional getValue(java.lang.String,java.lang.Class)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSet: void beforeFirst()>
<java.util.SubList: void removeRange(int,int)>-><java.util.SubList: void checkForComodification()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.servlet.handlers.ServletPathMatch: java.lang.String getMatched()>
<java.lang.Object: java.lang.String toString()>-><java.time.Year: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String,int)>-><io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String,int,boolean)>
<java.lang.Object: java.lang.String toString()>-><java.util.BitSet: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration: org.springframework.context.support.PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer()>-><org.springframework.context.support.PropertySourcesPlaceholderConfigurer: void <init>()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.xnio.Buffers: long remaining(java.nio.Buffer[],int,int)>-><java.nio.Buffer: int remaining()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.support.AbstractBeanDefinition: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatchesData: void <init>(java.util.Map,io.undertow.util.SubstringMap,java.util.Map)>-><java.util.HashMap: void <init>()>
<sun.util.locale.provider.CalendarNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>-><org.springframework.web.servlet.HttpServletBean: void setEnvironment(org.springframework.core.env.Environment)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.WeakHashMap$EntrySet: void clear()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>-><org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.util.AbstractMap$SimpleEntry: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: void <init>(reactor.netty.http.server.HttpServerRequest,org.springframework.core.io.buffer.NettyDataBufferFactory)>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: org.springframework.http.HttpHeaders initHeaders(reactor.netty.http.server.HttpServerRequest)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint configurationPropertiesReportEndpoint(org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties)>-><org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties: java.lang.String[] getKeysToSanitize()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.security.web.header.Header: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerMapping compositeHandlerMapping()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.CompositeHandlerMapping: void <init>()>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTransactionManagerCustomizers(org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration: void <init>()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void doErrorDispatch(int,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasWaiters(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean owns(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.core.Conventions: java.lang.Object peekAhead(java.util.Collection)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><org.jruby.RubyHash: java.util.Set entrySet()>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: java.lang.String getRequestContextAttribute()>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<io.undertow.util.HeaderValues: java.lang.Object get(int)>-><io.undertow.util.HeaderValues: java.lang.String get(int)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.AbstractMap: void <init>()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCloudFoundryReactiveHealthEndpointWebExtension(org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryReactiveHealthEndpointWebExtension)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.POJONode: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.lang.String: int length()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String getSuffix()>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.springframework.core.io.buffer.LimitedDataBufferList: void clear()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setConditionsReportEndpoint(org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint)>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void <init>()>-><org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void setIncludeSubDomains(boolean)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.util.DerValue: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<java.util.HashMap$Values: void clear()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: void clear()>
<java.util.EnumMap: void <init>(java.util.Map)>-><org.springframework.util.LinkedMultiValueMap: java.util.Set keySet()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider: void <init>(java.lang.Iterable)>-><java.lang.Object: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration: void <init>(org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties)>
<java.lang.Object: java.lang.String toString()>-><java.util.jar.Attributes$Name: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>-><org.springframework.http.server.DefaultPathContainer$DefaultSeparator: java.lang.String value()>
<java.lang.Object: java.lang.String toString()>-><java.security.CodeSource: int hashCode()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<io.undertow.util.CopyOnWriteMap: java.lang.Object get(java.lang.Object)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><io.undertow.servlet.spec.SecurityActions$1: java.lang.Object run()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.stream.ReferencePipeline$3$1: void accept(java.lang.Object)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.util.RegexpOptions: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.validation.ObjectError: int hashCode()>
<org.springframework.security.authentication.AnonymousAuthenticationToken: void <init>(java.lang.Integer,java.lang.Object,java.util.Collection)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.types.TimestampData: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.Year: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Properties: java.util.Set stringPropertyNames()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeServlet(java.lang.String,boolean)>-><io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.RegularEnumSet: void clear()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<java.util.Objects: int hashCode(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$SynchronizedCollection: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyBasicObject: boolean equals(java.lang.Object)>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>-><org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String getRedirectUrl()>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: void <init>(reactor.netty.http.server.HttpServerRequest,org.springframework.core.io.buffer.NettyDataBufferFactory)>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI initUri(reactor.netty.http.server.HttpServerRequest)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setUsername(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.Year: int hashCode()>
<org.springframework.security.core.userdetails.User: java.util.SortedSet sortAuthorities(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.Collections$UnmodifiableMap: java.util.Set keySet()>-><com.google.common.collect.Maps$TransformedEntriesMap: java.util.Set keySet()>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><java.util.IdentityHashMap$KeySet: int hashCode()>
<org.springframework.cache.support.AbstractValueAdaptingCache: void <init>(boolean)>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.aop.support.DefaultIntroductionAdvisor: int hashCode()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration: org.springframework.jdbc.datasource.DataSourceTransactionManager transactionManager(javax.sql.DataSource,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.jdbc.datasource.DataSourceTransactionManager: void <init>(javax.sql.DataSource)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.RubyHash$ConvertingEntry: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.thymeleaf.spring5.SpringWebFluxTemplateEngine: void <init>()>-><org.thymeleaf.spring5.SpringTemplateEngine: void <init>()>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<org.springframework.web.servlet.DispatcherServlet: void <init>()>-><org.springframework.web.servlet.FrameworkServlet: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.PathMatchConfigurer: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.Object getBean()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.RegularEnumSet: void clear()>
<java.util.Collections$SynchronizedCollection: int size()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: int size()>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch handleMatch(java.lang.String,io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch,int)>-><io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch: java.util.Map access$000(io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch)>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredControllerEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubySymbol: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,boolean,java.lang.String[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.fasterxml.jackson.databind.module.SimpleModule: void <init>(com.fasterxml.jackson.core.Version)>-><com.fasterxml.jackson.core.Version: java.lang.String getArtifactId()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.field.PreciseDurationField: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.awt.Color: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>-><java.security.Provider: void ensureLegacyParsed()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><com.google.common.collect.Maps$EntrySet: int size()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: int hashCode()>
<java.util.IdentityHashMap$Values: void clear()>-><java.util.IdentityHashMap: void clear()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: void <init>(org.springframework.boot.autoconfigure.orm.jpa.JpaProperties)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<org.jruby.RubyFile$2: int read()>-><java.io.InputStreamReader: int read()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jcodings.Encoding: int hashCode()>
<java.util.AbstractMap: boolean isEmpty()>-><com.google.common.collect.Maps$TransformedEntriesMap: int size()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><java.util.ArrayDeque$DeqIterator: void remove()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver authenticationPrincipalArgumentResolver()>-><org.springframework.context.expression.BeanFactoryResolver: void <init>(org.springframework.beans.factory.BeanFactory)>
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>-><org.springframework.util.ClassUtils: java.lang.String getShortNameAsProperty(java.lang.Class)>
<io.undertow.servlet.spec.ServletPrintWriterDelegate$2: java.lang.Object run()>-><io.undertow.servlet.spec.ServletPrintWriterDelegate$2: sun.misc.Unsafe run()>
<org.springframework.security.web.server.util.matcher.AndServerWebExchangeMatcher: void <init>(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.springframework.cache.concurrent.ConcurrentMapCache: void <init>(java.lang.String,java.util.concurrent.ConcurrentMap,boolean,org.springframework.core.serializer.support.SerializationDelegate)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.operands.CurrentScope: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.security.AllPermission: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setReadTimeout(java.time.Duration)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.ScopeModule: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.WeakHashMap$EntrySet: void clear()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Vector$Itr: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: void registerFormatters(org.springframework.format.FormatterRegistry)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$7$1: void accept(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$SingletonList: int size()>
<org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory: void <init>()>-><org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory: void <init>()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: int hashCode()>
<org.jruby.ir.operands.LocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration: void <init>()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>-><io.undertow.util.HeaderValues: int size()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setPathMatcher(org.springframework.util.PathMatcher)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: io.micrometer.core.instrument.Clock getClock()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><com.google.common.collect.Maps$Values: java.util.Iterator iterator()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.springframework.core.io.buffer.LimitedDataBufferList: boolean add(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setConfiguration(freemarker.template.Configuration)>
<io.undertow.servlet.core.DeploymentImpl: void addLifecycleObjects(io.undertow.servlet.core.Lifecycle[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>-><java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.http.HttpProperties getHttpPropertiesInstance()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Hashtable$ValueCollection: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration: org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$UndertowAccessLogCustomizer undertowManagementAccessLogCustomizer()>
<org.hibernate.tool.schema.Action: org.hibernate.tool.schema.Action interpretHbm2ddlSetting(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.util.HeaderValues: java.lang.String set(int,java.lang.String)>-><io.undertow.util.HeaderValues: int index(int)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>(java.lang.Iterable)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: void <init>()>-><org.springframework.security.config.core.GrantedAuthorityDefaults: void <init>(java.lang.String)>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.util.SubstringMap$SubstringMatch: java.lang.Object getValue()>
<org.owasp.webwolf.requests.Requests: java.lang.String path(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.springframework.boot.actuate.trace.http.HttpTrace$Request: java.net.URI getUri()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.auth_bypass.VerifyAccount: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder applicationContext(org.springframework.context.ApplicationContext)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.springframework.security.web.FilterInvocation: java.lang.String getRequestUrl()>-><org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(javax.servlet.http.HttpServletRequest)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>-><java.lang.Class: boolean isInterface()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.AbstractSet: int hashCode()>
<org.hsqldb.jdbc.JDBCDriver: java.sql.Connection connect(java.lang.String,java.util.Properties)>-><java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>
<com.fasterxml.jackson.databind.cfg.BaseSettings: java.text.DateFormat _force(java.text.DateFormat,java.util.TimeZone)>-><java.text.DateFormat: void setTimeZone(java.util.TimeZone)>
<javax.servlet.ServletOutputStream: void <init>()>-><java.io.OutputStream: void <init>()>
<io.undertow.util.SubstringMap: io.undertow.util.SubstringMap$SubstringMatch get(java.lang.String)>-><java.lang.String: int length()>
<java.security.Provider: void implPutAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.AbstractMap: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.springframework.core.style.DefaultToStringStyler: void styleFieldSeparator(java.lang.StringBuilder)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setTaskExecutor(org.springframework.core.task.AsyncTaskExecutor)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyObject: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.internal.database.base.Schema: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><java.util.ArrayList: void <init>()>
<org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties: void <init>()>-><java.util.ArrayList: void <init>()>
<org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter: java.util.Set asSet(java.util.Collection)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration: org.springframework.boot.actuate.beans.BeansEndpoint beansEndpoint(org.springframework.context.ConfigurableApplicationContext)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.Collections$SynchronizedCollection: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<io.undertow.server.HttpServerExchange: boolean isResponseStarted()>-><org.xnio.Bits: boolean allAreSet(int,int)>
<java.lang.Object: java.lang.String toString()>-><javax.management.MBeanNotificationInfo: int hashCode()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider webMvcTagsProvider()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><io.jsonwebtoken.impl.JwtMap: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.Vector: boolean add(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration: org.springframework.boot.autoconfigure.http.HttpMessageConverters messageConverters(org.springframework.beans.factory.ObjectProvider)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.jsonwebtoken.impl.JwtMap: boolean isEmpty()>
<org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration: org.springframework.boot.actuate.logging.LoggersEndpoint loggersEndpoint(org.springframework.boot.logging.LoggingSystem,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.actuate.logging.LoggersEndpoint: void <init>(org.springframework.boot.logging.LoggingSystem,org.springframework.boot.logging.LoggerGroups)>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer controllerEndpointDiscoverer(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<java.util.AbstractCollection: void clear()>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String readPublicKey()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: int executeUpdate(java.lang.String)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.IntervalSecondData: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<java.util.Hashtable: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hsqldb.types.JavaObjectData: int hashCode()>
<io.undertow.servlet.spec.SecurityActions$1: io.undertow.servlet.handlers.ServletRequestContext run()>-><io.undertow.servlet.handlers.ServletRequestContext: io.undertow.servlet.handlers.ServletRequestContext current()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.context.properties.source.AliasedConfigurationPropertySource: org.springframework.boot.context.properties.source.ConfigurationPropertyState containsDescendantOf(org.springframework.boot.context.properties.source.ConfigurationPropertyName)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.LinkedHashMap$LinkedEntrySet: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: int getRow()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.core.io.InputStreamResource: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.JumboEnumSet: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes endpointMediaTypes()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: io.micrometer.core.instrument.simple.SimpleConfig getSimpleConfig()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: java.util.List determineBootstrapHosts()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void setPreload(boolean)>-><org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void updateDelegate()>
<java.util.ComparableTimSort: void mergeHi(int,int,int,int)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Short: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setExposeExcludePropertyEndpointFilter(org.springframework.boot.actuate.autoconfigure.endpoint.ExposeExcludePropertyEndpointFilter)>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters$1: void <init>(org.springframework.boot.autoconfigure.http.HttpMessageConverters)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void <init>()>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.internal.database.base.Schema: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><net.bytebuddy.matcher.FilterableList$Empty: int size()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.RubyHash$BaseCollection: void clear()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder: org.springframework.security.web.server.header.StaticServerHttpHeadersWriter$Builder header(java.lang.String,java.lang.String[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.springframework.boot.web.server.AbstractConfigurableWebServerFactory: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.web.servlet.HttpServletBean: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><javax.security.auth.Subject$SecureSet: int size()>
<java.lang.Object: java.lang.String toString()>-><java.util.EnumMap: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap: java.util.Set entrySet()>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder roles(java.lang.String[])>-><java.util.ArrayList: boolean add(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: boolean equals(java.lang.Object)>
<com.google.common.collect.ForwardingConcurrentMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.google.common.collect.ForwardingConcurrentMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<io.undertow.util.QueryParameterUtils: java.util.Map mergeQueryParametersWithNewQueryString(java.util.Map,java.lang.String,java.lang.String)>-><java.util.LinkedList: boolean addAll(java.util.Collection)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: boolean isEmpty()>-><java.util.ArrayDeque: boolean isEmpty()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: void <init>()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.HashSet: boolean isEmpty()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.internal.info.MigrationInfoImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletRequestContext: io.undertow.servlet.handlers.ServletRequestContext current()>-><java.lang.ThreadLocal: java.lang.Object get()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>
<org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration: org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter webfluxMetrics(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsProvider)>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server: org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest getRequest()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate build()>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate build(java.lang.Class)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.springframework.boot.actuate.endpoint.web.EndpointMapping: java.lang.String normalizePath(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.awt.geom.Point2D: int hashCode()>
<com.thoughtworks.xstream.converters.collections.TreeMapConverter$NullComparator: int compare(java.lang.Object,java.lang.Object)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebFluxEndpointHandlerMapping(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.reactive.function.client.WebClient$Builder,org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier,org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMapping,java.util.Collection,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.cors.CorsConfiguration,org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundrySecurityInterceptor,org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: boolean equals(java.lang.Object)>
<org.springframework.core.OrderComparator: java.lang.Integer findOrder(java.lang.Object)>-><org.springframework.boot.web.servlet.RegistrationBean: int getOrder()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: int hashCode()>
<org.springframework.core.annotation.AnnotatedElementUtils: java.lang.reflect.AnnotatedElement forAnnotations(java.lang.annotation.Annotation[])>-><org.springframework.core.annotation.AnnotatedElementUtils$AnnotatedElementForAnnotations: void <init>(java.lang.annotation.Annotation[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCloudFoundryWebFluxEndpointHandlerMapping(org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.ServerProperties: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setErrorMvcAutoConfiguration$ErrorPageCustomizer(org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: void <init>(java.lang.Object,java.util.function.Supplier)>-><java.lang.Object: void <init>()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.springframework.security.config.web.server.ServerHttpSecurity: void <init>()>-><org.springframework.security.config.web.server.ServerHttpSecurity$RequestCacheSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>
<org.springframework.security.authentication.AbstractUserDetailsReactiveAuthenticationManager: void <init>()>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<org.springframework.security.config.web.server.ServerHttpSecurity: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSecuritySocketAcceptorInterceptor(org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari: com.zaxxer.hikari.HikariDataSource dataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeServlet(java.lang.String,boolean)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration: org.springframework.boot.actuate.security.AuthorizationAuditListener authorizationAuditListener()>-><org.springframework.boot.actuate.security.AuthorizationAuditListener: void <init>()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void close()>-><io.undertow.servlet.spec.ServletOutputStreamImpl: void closeAsync()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.ir.representations.BasicBlock: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<java.util.HashMap: int hash(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.config.BeanExpressionContext: int hashCode()>
<io.undertow.servlet.spec.RequestDispatcherImpl: void error(io.undertow.servlet.handlers.ServletRequestContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Throwable,java.lang.String)>-><io.undertow.util.QueryParameterUtils: java.util.Map mergeQueryParametersWithNewQueryString(java.util.Map,java.lang.String,java.lang.String)>
<org.springframework.core.annotation.AbstractMergedAnnotation: java.lang.String getString(java.lang.String)>-><org.springframework.core.annotation.AbstractMergedAnnotation: java.lang.Object getRequiredAttributeValue(java.lang.String,java.lang.Class)>
<javax.management.openmbean.TabularDataSupport: void putAll(java.util.Map)>-><java.util.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<io.undertow.servlet.spec.ServletPrintWriter: void createEncoder()>-><java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.IdentityHashMap: boolean isEmpty()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBucket(com.couchbase.client.java.Bucket)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><java.util.ArrayList$ListItr: void set(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><sun.security.ssl.SecureKey: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.http.HttpEntity: boolean equals(java.lang.Object)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.core.annotation.AnnotatedElementUtils$AnnotatedElementForAnnotations: void <init>(java.lang.annotation.Annotation[])>-><java.lang.Object: void <init>()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$1: boolean hasNext()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder awaitTermination(boolean)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: void close()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getKeyValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.DecimalNode: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.IdentityHashMap$EntrySet: void clear()>
<org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: java.sql.ResultSet executeQuery()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<io.undertow.servlet.spec.HttpSessionImpl: io.undertow.server.session.Session getSession()>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.RequestDispatcherImpl: void <init>(java.lang.String,io.undertow.servlet.spec.ServletContextImpl)>-><io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.api.Deployment getDeployment()>
<org.springframework.boot.actuate.info.InfoEndpoint: void <init>(java.util.List)>-><java.lang.Object: void <init>()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source when(java.util.function.Predicate)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.BasicPermission: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<org.springframework.security.web.FilterInvocation: java.lang.String toString()>-><org.springframework.security.web.FilterInvocation: java.lang.String getRequestUrl()>
<io.undertow.util.HeaderValues: java.util.List subList(int,int)>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.aop.support.AbstractPointcutAdvisor: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.flyway.FlywayEndpointAutoConfiguration: org.springframework.boot.actuate.flyway.FlywayEndpoint flywayEndpoint(org.springframework.context.ApplicationContext)>-><org.springframework.boot.actuate.flyway.FlywayEndpoint: void <init>(org.springframework.context.ApplicationContext)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor applicationTaskExecutor(org.springframework.boot.task.TaskExecutorBuilder)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryWebEndpointDiscoverer: boolean isHealthEndpointExtension(java.lang.Object)>-><org.springframework.core.annotation.TypeMappedAnnotations: org.springframework.core.annotation.MergedAnnotation get(java.lang.Class)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Hashtable$KeySet: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.io.FilePermission: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.headius.invokebinder.Signature: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.AbstractCollection: boolean isEmpty()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Optional: int hashCode()>
<io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.format.number.NumberFormatAnnotationFormatterFactory: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer(org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.FrozenString: int hashCode()>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: boolean equals(java.lang.Object)>
<java.util.Hashtable$ValueCollection: void clear()>-><java.security.Provider: void clear()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><javax.crypto.CryptoPermission: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: void clear()>-><javax.security.auth.Subject$SecureSet$1: void remove()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.Hashtable$EntrySet: void clear()>
<org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.DecimalFormat: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder awaitTerminationPeriod(java.time.Duration)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArraySet: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><javax.management.openmbean.TabularDataSupport: boolean isEmpty()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration: org.springframework.boot.actuate.cache.CachesEndpoint cachesEndpoint(java.util.Map)>
<java.util.concurrent.ArrayBlockingQueue: void clear()>-><java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: void signal()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(int)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.Boolean: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedHashMap$LinkedKeySet: int size()>
<java.io.ObjectInputStream$PeekInputStream: int available()>-><java.io.InputStream: int available()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.aop.support.DefaultIntroductionAdvisor: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.servlet.core.ServletContainerImpl: java.util.Collection listDeployments()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.header.ContentSecurityPolicyServerHttpHeadersWriter: void <init>()>
<org.owasp.webgoat.lessons.Hint: int hashCode()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getHint()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.springframework.validation.BindException: java.lang.String getMessage()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.Collections$UnmodifiableMap: java.util.Set keySet()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.io.FileSystemResource: int hashCode()>
<io.undertow.server.HttpServerExchange$6: void <init>(io.undertow.server.HttpServerExchange,io.undertow.server.ResponseCommitListener)>-><java.lang.Object: void <init>()>
<java.lang.Object: java.lang.String toString()>-><sun.security.x509.RDN: int hashCode()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><io.undertow.servlet.spec.ServletPrintWriterDelegate$1: java.lang.Object run()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.validation.BindException: java.lang.String getObjectName()>-><org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<java.util.AbstractMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setPassword(java.lang.String)>
<java.util.AbstractCollection: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.concurrent.ArrayBlockingQueue: int size()>
<org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory: void <init>(org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper,java.util.Collection)>-><java.lang.Object: void <init>()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>(java.lang.Iterable)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.security.config.web.server.ServerHttpSecurity$CsrfSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.csrf.WebSessionServerCsrfTokenRepository: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><ch.qos.logback.core.subst.Token: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.TreeMap$Entry: int hashCode()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.api.ServletContainer getServletContainer()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateEntry(io.undertow.util.HttpString)>-><io.undertow.util.HeaderValues: void <init>(io.undertow.util.HttpString)>
<java.util.EnumMap: void <init>(java.util.Map)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean isEmpty()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.core.annotation.AnnotatedElementUtils$AnnotatedElementForAnnotations: java.lang.annotation.Annotation[] getDeclaredAnnotations()>-><java.lang.Object: java.lang.Object clone()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyMatchData: boolean equals(java.lang.Object)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties: void <init>()>-><java.util.HashSet: void <init>(java.util.Collection)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>-><org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor: javax.servlet.ServletContext getServletContext()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.jruby.util.collections.WeakHashSet: boolean isEmpty()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.BuddhistChronology: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.ZoneId: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AbstractAuthenticationToken: boolean isAuthenticated()>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: void <init>(javax.servlet.ServletContext)>-><org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void <init>()>
<java.util.AbstractSet: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.boot.actuate.endpoint.EndpointId: void logWarning(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: boolean isWarnEnabled()>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><java.util.Arrays$ArrayList: int size()>
<org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver: void <init>(org.springframework.core.ReactiveAdapterRegistry)>-><org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverSupport: void <init>(org.springframework.core.ReactiveAdapterRegistry)>
<org.jruby.NativeException: java.lang.String searchStackMessage(java.lang.Throwable)>-><org.springframework.validation.BindException: java.lang.String getMessage()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.core.io.SerializedString: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace$Name: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><java.lang.String: java.lang.String substring(int)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration: void <init>()>
<org.springframework.core.annotation.MergedAnnotations: org.springframework.core.annotation.MergedAnnotations from(java.lang.Object,java.lang.annotation.Annotation[],org.springframework.core.annotation.RepeatableContainers)>-><org.springframework.core.annotation.TypeMappedAnnotations: org.springframework.core.annotation.MergedAnnotations from(java.lang.Object,java.lang.annotation.Annotation[],org.springframework.core.annotation.RepeatableContainers,org.springframework.core.annotation.AnnotationFilter)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.springframework.boot.web.client.RootUriTemplateHandler: void <init>(java.lang.String,org.springframework.web.util.UriTemplateHandler)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<io.undertow.servlet.spec.HttpSessionImpl$UnwrapSessionAction: void <init>(javax.servlet.http.HttpSession)>-><java.lang.Object: void <init>()>
<org.springframework.security.config.web.server.ServerHttpSecurity$CorsSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><java.lang.Object: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer,boolean,java.lang.String,java.util.Set,java.util.Set,java.util.function.Supplier,org.springframework.web.util.UriTemplateHandler,org.springframework.web.client.ResponseErrorHandler,org.springframework.boot.web.client.BasicAuthentication,java.util.Map,java.util.Set,java.util.Set)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setProcessorMetrics(io.micrometer.core.instrument.binder.system.ProcessorMetrics)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyBasicObject: boolean equals(java.lang.Object)>
<org.jruby.specialized.RubyArrayTwoObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: void modifyCheck()>
<java.util.Hashtable: java.lang.String toString()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.core.convert.TypeDescriptor: int hashCode()>
<javax.security.auth.Subject$SecureSet: void clear()>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.core.context.SecurityContextImpl: int hashCode()>
<java.util.AbstractList: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatchesData: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><java.lang.String: int lastIndexOf(int)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter(org.springframework.boot.autoconfigure.http.HttpProperties)>
<java.util.AbstractCollection: java.lang.String toString()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.cglib.core.EmitUtils: void member_helper_type(org.springframework.cglib.core.CodeEmitter,java.util.List,org.springframework.cglib.core.ObjectSwitchCallback,org.springframework.cglib.core.EmitUtils$ParameterTyper,org.springframework.asm.Label,org.springframework.asm.Label,java.util.BitSet)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.core.annotation.MergedAnnotation findMergedAnnotationOnBean(java.lang.String,java.lang.Class)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean containsBeanDefinition(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.util.ByteList: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.web.cors.CorsConfiguration: void addAllowedOrigin(java.lang.String)>-><java.util.ArrayList: void <init>(int)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>-><org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.Throwable getCause()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.lang.Object[])>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.MBeanExporter: void setAssembler(org.springframework.jmx.export.assembler.MBeanInfoAssembler)>
<io.undertow.servlet.handlers.security.ServletSecurityRoleHandler: void <init>(io.undertow.server.HttpHandler,io.undertow.servlet.api.AuthorizationManager)>-><java.lang.Object: void <init>()>
<org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.BeanWrapper createBeanWrapper()>-><org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletEndpointDiscoverer(org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.ContentTypeInfo parseContentType(java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.Collections: java.util.Set emptySet()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.lang.Object: java.lang.String toString()>-><java.net.InetSocketAddress: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.DateTimeType: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.LocalTime: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.api.ServletInfo: java.util.List getMappings()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.util.HeaderValues: java.util.ListIterator iterator(int,boolean)>-><io.undertow.util.HeaderValues$1: void <init>(io.undertow.util.HeaderValues,int,boolean)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><java.util.HashSet: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Collections$EmptyList: int hashCode()>
<org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter: void updateDelegate()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.Hashtable: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>-><com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration: org.springframework.boot.actuate.trace.http.HttpTraceEndpoint httpTraceEndpoint(org.springframework.boot.actuate.trace.http.HttpTraceRepository)>
<io.undertow.util.HeaderValues: java.lang.String set(int,java.lang.String)>-><java.lang.IndexOutOfBoundsException: void <init>()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.client.MetricsClientHttpRequestInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider,java.lang.String,org.springframework.boot.actuate.metrics.AutoTimer)>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: int hashCode()>
<java.util.stream.AbstractPipeline: void copyInto(java.util.stream.Sink,java.util.Spliterator)>-><java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.tz.FixedDateTimeZone: int hashCode()>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch findWelcomeFile(java.lang.String,boolean)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsProvider,java.lang.String,org.springframework.boot.actuate.metrics.AutoTimer)>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nullOrToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.EnumMap: void <init>(java.util.Map)>-><org.jruby.RubyHash: java.util.Set keySet()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultMethodSecurityExpressionHandler(org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.security.Provider: java.lang.Object get(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><java.nio.charset.Charset: java.lang.String name()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>-><java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setInterceptors(java.lang.Object[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.lang.String: int lastIndexOf(int)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.web.EndpointMapping: java.lang.String normalizePath(java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.boot.actuate.web.mappings.MappingsEndpoint: void <init>(java.util.Collection,org.springframework.context.ApplicationContext)>-><java.lang.Object: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void accept(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void setBufferRequestBody(org.springframework.http.client.ClientHttpRequestFactory)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.invoke.MemberName: int hashCode()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String readPublicKey()>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.MBeanOperationInfo: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.thymeleaf.extras.java8time.dialect.Java8TimeDialect: void <init>()>-><org.thymeleaf.extras.java8time.dialect.Java8TimeExpressionFactory: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setClock(io.micrometer.core.instrument.Clock)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.hibernate.boot.model.relational.Namespace$Name: int hashCode()>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.security.config.web.server.ServerHttpSecurity: void <init>()>-><org.springframework.security.config.web.server.ServerHttpSecurity$CsrfSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveTokenValidator: void <init>(org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService)>-><java.util.concurrent.ConcurrentHashMap: void <init>()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<sun.util.locale.provider.LocaleProviderAdapter: boolean isSupportedLocale(java.util.Locale,sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>-><java.util.AbstractCollection: boolean contains(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.runtime.Block: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$Values: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.health.HttpCodeStatusMapper getHttpCodeStatusMapper()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.management.openmbean.TabularDataSupport: java.util.Set entrySet()>
<org.springframework.boot.actuate.endpoint.web.EndpointMapping: java.lang.String normalizePath(java.lang.String)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping createRequestMappingHandlerMapping()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.util.ByteList: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getView()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.metamodel.model.domain.NavigableRole: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Short: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.LocalDate: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.ResourceBundle$CacheKey: int hashCode()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.UUID: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: boolean equals(java.lang.Object)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$InvocationResult invoke(java.lang.Object,java.util.function.Supplier)>-><org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAuditListener(org.springframework.boot.actuate.audit.listener.AuditListener)>
<org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration: org.springframework.boot.actuate.web.mappings.MappingsEndpoint mappingsEndpoint(org.springframework.context.ApplicationContext,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.actuate.web.mappings.MappingsEndpoint: void <init>(java.util.Collection,org.springframework.context.ApplicationContext)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: org.springframework.security.core.userdetails.MapReactiveUserDetailsService reactiveUserDetailsService(org.springframework.boot.autoconfigure.security.SecurityProperties,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.core.style.ToStringCreator: void <init>(java.lang.Object,org.springframework.core.style.ToStringStyler)>-><java.lang.Object: void <init>()>
<org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter: void <init>()>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><javax.net.ssl.SNIHostName: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.util.unit.DataSize: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.CurrentScope: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.SimpleXXE: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setDataUsername(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean last()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet: boolean isProducePartialOutputWhileProcessing()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: void setPath(java.io.File)>-><org.springframework.util.Assert: void isTrue(boolean,java.util.function.Supplier)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration: org.springframework.boot.autoconfigure.context.MessageSourceProperties messageSourceProperties()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.thymeleaf.spring5.SpringTemplateEngine: void setEnableSpringELCompiler(boolean)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration: org.springframework.boot.actuate.web.mappings.MappingsEndpoint mappingsEndpoint(org.springframework.context.ApplicationContext,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: java.util.Iterator iterator()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration$WebFilterChainPostProcessor: void <init>(org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration$1)>-><org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration$WebFilterChainPostProcessor: void <init>()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source asInt(java.util.function.Function)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.zone.ZoneRules: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.ArrayDeque$DeqSpliterator: int getFence()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache: org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher createDefaultRequestMacher()>-><java.util.Collections: java.util.Set singleton(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.binder.system.ProcessorMetrics: java.lang.reflect.Method detectMethod(java.lang.String)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setConnectionTimeout(java.time.Duration)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.MBeanInfo: int hashCode()>
<org.springframework.http.server.reactive.AbstractServerHttpRequest: void <init>(java.net.URI,java.lang.String,org.springframework.http.HttpHeaders)>-><org.springframework.http.HttpLogging: org.apache.commons.logging.Log forLogName(java.lang.Class)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection createEndpointBeans()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean createEndpointBean(java.lang.String)>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$4$1: void accept(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSqlScriptEncoding(java.nio.charset.Charset)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<org.hibernate.boot.internal.SessionFactoryOptionsBuilder: java.util.function.Supplier determineStatelessInterceptor(java.util.Map,org.hibernate.boot.registry.selector.spi.StrategySelector)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.boot.info.BuildProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>
<io.undertow.servlet.handlers.ServletPathMatchesData: void <init>(java.util.Map,io.undertow.util.SubstringMap,java.util.Map)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: void setDateFormatter(org.joda.time.format.DateTimeFormatter)>-><java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReduceOps$1ReducingSink: void accept(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.util.RegexpOptions: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<org.springframework.context.support.ResourceBundleMessageSource$MessageSourceControl: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)>-><java.util.Locale: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashSet: boolean isEmpty()>
<org.jruby.util.io.SelectorPool: java.nio.channels.Selector retrieveFromPool(java.nio.channels.spi.SelectorProvider)>-><io.undertow.util.HeaderValues: int size()>
<java.lang.Object: java.lang.String toString()>-><java.util.Collections$SynchronizedSet: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration: void <init>()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<io.micrometer.core.util.internal.logging.LocationAwareSlf4JLogger: void log(int,java.lang.String)>-><ch.qos.logback.classic.Logger: void log(org.slf4j.Marker,java.lang.String,int,java.lang.String,java.lang.Object[],java.lang.Throwable)>
<io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><java.time.zone.ZoneOffsetTransition: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.beans.factory.config.BeanFactoryPostProcessor getBeanFactoryPostProcessor()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableCollection: int size()>
<org.springframework.web.servlet.mvc.method.annotation.JsonViewResponseBodyAdvice: void <init>()>-><org.springframework.web.servlet.mvc.method.annotation.AbstractMappingJacksonResponseBodyAdvice: void <init>()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: int size()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: int hashCode()>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: void <init>(javax.servlet.ServletContext)>-><org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void setServletContext(javax.servlet.ServletContext)>
<org.jruby.javasupport.binding.Initializer: void handleScalaSingletons(java.lang.Class,org.jruby.javasupport.binding.Initializer$State)>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.context.properties.PropertyMapper: void <init>(org.springframework.boot.context.properties.PropertyMapper,org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: boolean isRenderHiddenMarkersBeforeCheckboxes()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: void setInt(int,int)>
<org.springframework.context.support.AbstractApplicationContext: org.springframework.beans.factory.ObjectProvider getBeanProvider(org.springframework.core.ResolvableType)>-><org.springframework.context.support.AbstractApplicationContext: void assertBeanFactoryActive()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.String toString()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.boot.actuate.health.HealthStatusHttpMapper: void <init>()>-><java.util.HashMap: void <init>()>
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setThymeleafViewResolver(org.thymeleaf.spring5.view.ThymeleafViewResolver)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientFallbackConfiguration: void <init>()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.springframework.boot.web.servlet.support.ErrorPageFilterConfiguration: org.springframework.boot.web.servlet.support.ErrorPageFilter errorPageFilter()>-><org.springframework.boot.web.servlet.support.ErrorPageFilter: void <init>()>
<org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration: org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter webfluxMetrics(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsProvider)>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest: org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties getAutotime()>
<org.springframework.http.server.PathContainer: org.springframework.http.server.PathContainer subPath(int)>-><org.springframework.http.server.DefaultPathContainer: java.util.List elements()>
<org.springframework.boot.convert.CollectionToDelimitedStringConverter: java.lang.Object convert(java.util.Collection,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean isEmpty()>
<java.util.ArrayDeque: boolean remove(java.lang.Object)>-><java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>
<org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints pathMappedEndpoints(java.util.Collection)>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties: java.lang.String getBasePath()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Collections$1: boolean hasNext()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.server.AbstractConfigurableWebServerFactory: void <init>()>
<org.springframework.boot.context.properties.PropertyMapper$NullPointerExceptionSafeSupplier: java.lang.Object get()>-><org.springframework.boot.context.properties.PropertyMapper$CachingSupplier: java.lang.Object get()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jcodings.Encoding: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: org.springframework.boot.actuate.endpoint.EndpointId of(org.springframework.core.env.Environment,java.lang.String)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.micrometer.core.util.internal.logging.JdkLogger: void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><io.micrometer.core.util.internal.logging.JdkLogger: void fillCallerData(java.lang.String,java.util.logging.LogRecord)>
<io.undertow.servlet.spec.ServletPrintWriterDelegate: sun.misc.Unsafe getUnsafe0()>-><java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.DurationFieldType$StandardDurationFieldType: int hashCode()>
<io.undertow.util.HeaderMap: io.undertow.util.HeaderValues getOrCreateEntry(io.undertow.util.HttpString)>-><io.undertow.util.HttpString: int hashCode()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>-><org.springframework.security.oauth2.jwt.JwtValidators: org.springframework.security.oauth2.core.OAuth2TokenValidator createDefaultWithIssuer(java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: int hashCode()>
<org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource: void <init>()>-><org.springframework.security.access.method.AbstractMethodSecurityMetadataSource: void <init>()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor: javax.servlet.ServletConfig getServletConfig()>-><org.springframework.web.context.support.ServletContextAwareProcessor: javax.servlet.ServletConfig getServletConfig()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><sun.security.x509.GeneralName: int hashCode()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJsr310()>-><org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void registerFormatters(org.springframework.format.FormatterRegistry)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.concurrent.ArrayBlockingQueue: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.health.HealthStatusHttpMapper: void addStatusMapping(java.lang.String,java.lang.Integer)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration: org.springframework.boot.actuate.audit.listener.AuditListener auditListener(org.springframework.boot.actuate.audit.AuditEventRepository)>
<java.util.Collections$SynchronizedCollection: void clear()>-><org.jsoup.helper.ChangeNotifyingArrayList: void clear()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addExtensionBeans(java.util.Collection)>-><java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>-><com.google.common.collect.Maps: java.util.Map transformValues(java.util.Map,com.google.common.base.Function)>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>-><org.springframework.web.cors.CorsConfiguration: void setAllowedHeaders(java.util.List)>
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<org.springframework.web.servlet.view.InternalResourceViewResolver: void <init>()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void closeAsync()>-><io.undertow.servlet.spec.ServletOutputStreamImpl: boolean flushBufferAsync(boolean)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><org.springframework.beans.factory.support.AbstractBeanDefinition: boolean isAbstract()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.Collections$UnmodifiableMap: boolean isEmpty()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.javasupport.JavaArray: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.jar.Attributes: boolean isEmpty()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.time.OffsetTime: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addExtensionMatch(java.lang.String,java.lang.String,io.undertow.servlet.handlers.ServletChain)>-><io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch: java.util.Map access$000(io.undertow.servlet.handlers.ServletPathMatchesData$PathMatch)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.springframework.expression.TypedValue: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.text.AttributeEntry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHealthContributorRegistryHealthIndicatorRegistryAdapter(org.springframework.boot.actuate.autoconfigure.health.HealthContributorRegistryHealthIndicatorRegistryAdapter)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><javax.net.ssl.SNIHostName: int hashCode()>
<org.jruby.util.collections.WeakHashSet: void clear()>-><java.util.WeakHashMap: void clear()>
<java.util.concurrent.ArrayBlockingQueue: void clear()>-><java.util.concurrent.locks.ReentrantLock: boolean hasWaiters(java.util.concurrent.locks.Condition)>
<org.springframework.boot.info.GitProperties: java.util.Properties processEntries(java.util.Properties)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.types.TimeData: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSpringWebFluxTemplateEngine(org.thymeleaf.spring5.SpringWebFluxTemplateEngine)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.Collections$EmptyList: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void <init>()>-><java.util.LinkedHashMap: void <init>(int)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><java.util.Collections$UnmodifiableCollection: int size()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><io.undertow.servlet.api.ServletInfo: java.lang.String toString()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setTemplateMode(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.Locale: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.TabularDataSupport: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.ir.operands.Label: int hashCode()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReduceOps$2ReducingSink: void accept(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.security.config.annotation.ObjectPostProcessor getObjectPostProcessor()>
<org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource: void <init>(java.util.List)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.HashMap$Node: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.RegularEnumSet: int size()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics: void <init>()>-><io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics: void <init>(java.lang.Iterable)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setAddress(java.net.InetAddress)>
<java.util.LinkedList: boolean addAll(int,java.util.Collection)>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setSuffix(java.lang.String)>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: void <init>()>
<java.lang.Object: java.lang.String toString()>-><io.jsonwebtoken.impl.JwtMap: int hashCode()>
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>-><java.util.ArrayList: int size()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace: boolean equals(java.lang.Object)>
<java.util.jar.Attributes: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor: void <init>(java.lang.String,org.springframework.security.access.method.MethodSecurityMetadataSource,java.lang.String)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.text.AttributeEntry: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.WebWolf: void initBean_synthetic()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addNameMatch(java.lang.String,io.undertow.servlet.handlers.ServletChain)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.net.Inet6Address: int hashCode()>
<org.springframework.security.config.web.server.ServerHttpSecurity$ExceptionHandlingSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>-><org.springframework.security.config.web.server.ServerHttpSecurity$ExceptionHandlingSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.IdentityHashMap$EntrySet: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.awt.image.ColorModel: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.security.CodeSigner: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.ir.IRScope: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder driverClassName(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.runtime.Arity: int hashCode()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.boot.actuate.health.HealthStatusHttpMapper: void addStatusMapping(org.springframework.boot.actuate.health.Status,java.lang.Integer)>-><org.springframework.boot.actuate.health.HealthStatusHttpMapper: void addStatusMapping(java.lang.String,java.lang.Integer)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.MBeanExporter: void setNamingStrategy(org.springframework.jmx.export.naming.ObjectNamingStrategy)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: org.springframework.boot.web.servlet.server.Jsp getJsp()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.springframework.validation.BindException: java.lang.String getObjectName()>-><org.springframework.validation.BindException: java.lang.String getObjectName()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration: org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents autowiredWebSecurityConfigurersIgnoreParents(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.Nodes$SpinedNodeBuilder: void accept(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.field.MillisDurationField: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.jsoup.helper.ChangeNotifyingArrayList: void clear()>-><org.jsoup.nodes.Element$NodeList: void onContentsChanged()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.web.reactive.result.view.UrlBasedViewResolver: void setPrefix(java.lang.String)>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: int size()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: void <init>(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<io.undertow.servlet.handlers.ServletPathMatchesData: void <init>(java.util.Map,io.undertow.util.SubstringMap,java.util.Map)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration: org.springframework.boot.actuate.metrics.MetricsEndpoint metricsEndpoint(io.micrometer.core.instrument.MeterRegistry)>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void closeAsync()>-><org.xnio.Bits: boolean anyAreSet(int,int)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration: java.lang.Object createDataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,java.lang.Class)>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafSecurityDialectConfiguration: org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect securityDialect()>
<org.springframework.security.config.annotation.rsocket.RSocketSecurity: void <init>()>-><java.util.ArrayList: void <init>()>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCloudFoundryWebEndpointServletHandlerMapping(org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryWebEndpointServletHandlerMapping)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><org.jruby.RubyHash$BaseSet: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.lang.Object getLast(java.util.List)>-><org.jruby.RubyArray: java.lang.Object get(int)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver: void <init>(org.springframework.core.ReactiveAdapterRegistry)>-><org.springframework.expression.spel.standard.SpelExpressionParser: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setAdmin(boolean)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.field.MillisDurationField: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyRegistrationConfiguration: org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository relyingPartyRegistrationRepository(org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyProperties)>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean last()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><java.util.Properties: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: void close()>
<java.lang.Object: java.lang.String toString()>-><org.jruby.javasupport.JavaObject: int hashCode()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.security.web.header.Header: boolean equals(java.lang.Object)>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.SubList$1: java.lang.Object next()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.util.MimeType: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.joda.time.chrono.GJCacheKey: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.chrono.GJChronology: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.joda.time.base.AbstractDuration: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.base.AbstractDuration: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties getEnvironmentEndpointPropertiesInstance()>
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>-><javax.servlet.ServletRequestWrapper: void setAttribute(java.lang.String,java.lang.Object)>
<org.springframework.boot.actuate.management.PlainTextThreadDumpFormatter: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.Collections$EmptyList: boolean isEmpty()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.SubList$1: java.lang.Object next()>
<org.xnio.OptionMap: boolean get(org.xnio.Option,boolean)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.util.QueryParameterUtils: java.util.Map mergeQueryParametersWithNewQueryString(java.util.Map,java.lang.String,java.lang.String)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.ClobDataID: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.system.DiskSpaceHealthIndicator: void <init>(java.io.File,org.springframework.util.unit.DataSize)>-><org.springframework.boot.actuate.health.AbstractHealthIndicator: void <init>(java.lang.String)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.time.Duration: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: javax.servlet.ServletOutputStream getOutputStream()>-><io.undertow.servlet.spec.HttpServletResponseImpl: void createOutputStream()>
<java.util.TreeMap$Entry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.lang.Long: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><sun.util.locale.provider.RuleBasedBreakIterator: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Date: int hashCode()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<io.undertow.servlet.handlers.ServletPathMatchesData$Builder: void addExtensionMatch(java.lang.String,java.lang.String,io.undertow.servlet.handlers.ServletChain)>-><io.undertow.util.SubstringMap$SubstringMatch: java.lang.Object getValue()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setMessageConverters(java.util.List)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.ScopeModule: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebFilterChainProxy(org.springframework.security.web.server.WebFilterChainProxy)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.PreparedStatement prepareStatement(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<java.lang.ProcessEnvironment$StringEntrySet: void clear()>-><java.util.HashMap$EntrySet: void clear()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean: void <init>(org.springframework.core.env.Environment,java.lang.String,java.lang.Object)>-><org.springframework.core.annotation.MissingMergedAnnotation: boolean isPresent()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.ir.operands.Fixnum: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: void <init>(org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.POJONode: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean: void <init>(java.lang.String,org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.boot.web.servlet.DynamicRegistrationBean: void setName(java.lang.String)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder keepAlive(java.time.Duration)>
<io.micrometer.core.instrument.binder.logging.LogbackMetrics: void <init>(java.lang.Iterable,ch.qos.logback.classic.LoggerContext)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.util.Optional: java.lang.Object get()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashMap$Values: java.util.Iterator iterator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><java.util.Collections$UnmodifiableCollection: boolean remove(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.beans.BeansEndpoint: void <init>(org.springframework.context.ConfigurableApplicationContext)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setStatus(int)>-><io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setStatusCode(int)>
<org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration: org.springframework.security.authentication.ReactiveAuthenticationManager authenticationManager()>-><org.springframework.security.authentication.AbstractUserDetailsReactiveAuthenticationManager: void setPasswordEncoder(org.springframework.security.crypto.password.PasswordEncoder)>
<java.util.Hashtable: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setTemplateMode(java.lang.String)>-><org.thymeleaf.util.Validate: void notNull(java.lang.Object,java.lang.String)>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><java.net.URI: java.lang.String getQuery()>
<io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setInMemoryClientRegistrationRepository(org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMongoDbFactorySupport(org.springframework.data.mongodb.core.MongoDbFactorySupport)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void sendError(int,java.lang.String)>-><io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setReasonPhrase(java.lang.String)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setAllowSessionOverride(boolean)>
<com.google.common.collect.Maps$Values: void clear()>-><java.util.Collections$UnmodifiableMap: void clear()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$SynchronizedList: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getReturnValueHandlers()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addReturnValueHandlers(java.util.List)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.cglib.proxy.BridgeMethodResolver$BridgedFinder: org.springframework.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>-><com.google.common.collect.Maps$EntrySet: boolean remove(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>-><io.undertow.util.HeaderValues: boolean contains(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><javax.management.ImmutableDescriptor: int hashCode()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: java.util.Collection convertToEndpoints(java.util.Collection)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Collection)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: int hashCode()>
<io.undertow.servlet.spec.ServletContextImpl: io.undertow.servlet.spec.HttpSessionImpl getSession(io.undertow.servlet.spec.ServletContextImpl,io.undertow.server.HttpServerExchange,boolean)>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.server.session.SessionManager getSessionManager()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.RubyHash$BaseCollection: int size()>
<io.undertow.servlet.handlers.ServletPathMatches: boolean isFilterApplicable(java.lang.String,java.lang.String)>-><java.lang.String: boolean isEmpty()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source getSource(java.util.function.Supplier)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<javax.servlet.ServletRequestWrapper: void setAttribute(java.lang.String,java.lang.Object)>-><javax.servlet.ServletRequestWrapper: void setAttribute(java.lang.String,java.lang.Object)>
<org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource: void <init>(org.springframework.security.access.prepost.PrePostInvocationAttributeFactory)>-><org.springframework.security.access.method.AbstractMethodSecurityMetadataSource: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.info.BuildProperties: void <init>(java.util.Properties)>
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>-><java.util.stream.Nodes$FixedNodeBuilder: void accept(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.config.annotation.PathMatchConfigurer getPathMatchConfigurer()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletChain createHandler(io.undertow.servlet.api.DeploymentInfo,io.undertow.servlet.handlers.ServletHandler,java.util.Map,java.lang.String,boolean,javax.servlet.http.MappingMatch,java.lang.String)>-><java.util.HashMap: boolean isEmpty()>
<java.util.AbstractMap: java.lang.String toString()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Hashtable$EntrySet: void clear()>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.AbstractMap: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.Row: boolean equals(java.lang.Object)>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler methodSecurityExpressionHandler()>-><org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.ResultSetMetaData getMetaData()>
<com.google.common.collect.Multimaps$Keys$1$1: void <init>(com.google.common.collect.Multimaps$Keys$1,java.util.Map$Entry)>-><com.google.common.collect.Multisets$AbstractEntry: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.core.io.UrlResource: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.Package: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getPrefix()>-><java.lang.String: int indexOf(int)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><java.time.chrono.AbstractChronology: int hashCode()>
<org.springframework.security.config.web.server.ServerHttpSecurity: void <init>()>-><org.springframework.security.config.web.server.ServerHttpSecurity$CorsSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.config.web.server.ServerHttpSecurity$1)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.Vector: int size()>
<java.lang.Object: java.lang.String toString()>-><java.time.OffsetDateTime: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.TreeMap: java.util.Set entrySet()>
<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.sun.jmx.mbeanserver.NamedObject: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.flywaydb.core.api.Location: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringKeySet: int size()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: void clear()>-><java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder xml()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.HashMap$EntrySet: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><javax.management.MBeanAttributeInfo: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.core.DeploymentImpl: io.undertow.servlet.core.ManagedFilters getFilters()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$TomcatAccessLogCustomizer: void <init>()>-><org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementChildContextConfiguration$AccessLogCustomizer: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration: org.springframework.security.web.reactive.result.view.CsrfRequestDataValueProcessor requestDataValueProcessor()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.jcodings.Encoding: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.jackson.databind.jsontype.NamedType: int hashCode()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.validation.Validator)>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><java.util.stream.ReduceOps$2ReducingSink: java.lang.Object get()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.springframework.boot.info.GitProperties: java.util.Properties processEntries(java.util.Properties)>-><org.springframework.boot.info.GitProperties: void coercePropertyToEpoch(java.util.Properties,java.lang.String)>
<org.jruby.RubyHash$BaseCollection: void clear()>-><org.jruby.RubyHash: void clear()>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.owasp.webgoat.StartWebGoat: void <init>()>-><org.springframework.boot.web.servlet.support.SpringBootServletInitializer: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.util.calendar.ZoneInfo: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.context.MessageSource getMessageSource()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.reflect.Parameter: int hashCode()>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: java.lang.String getOrDeducePassword(org.springframework.boot.autoconfigure.security.SecurityProperties$User,org.springframework.security.crypto.password.PasswordEncoder)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void info(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: java.lang.String getUsername()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.SubList: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForAnnotationIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>-><org.springframework.context.support.AbstractApplicationContext: org.springframework.beans.factory.BeanFactory getParentBeanFactory()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.text.RuleBasedCollator: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><org.springframework.util.LinkedMultiValueMap: java.util.Set entrySet()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.logging.Level: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint configurationPropertiesReportEndpoint(org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><io.undertow.servlet.handlers.ServletPathMatchesData$Builder: io.undertow.servlet.handlers.ServletPathMatchesData build()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setCharacterEncoding(java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getContentType()>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl: boolean weakCompareAndSet(java.lang.Object,int,int)>-><java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl: void accessCheck(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.MapReactiveUserDetailsService: void <init>(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.LocalDate: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyModule: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.ir.operands.TemporaryVariable: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jmx.support.WebSphereMBeanServerFactoryBean: javax.management.MBeanServer getObject()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineUsername()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineDriverClassName()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration: org.springframework.boot.actuate.metrics.MetricsEndpoint metricsEndpoint(io.micrometer.core.instrument.MeterRegistry)>-><org.springframework.boot.actuate.metrics.MetricsEndpoint: void <init>(io.micrometer.core.instrument.MeterRegistry)>
<java.lang.Object: java.lang.String toString()>-><java.time.YearMonth: int hashCode()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>-><java.util.Collections$UnmodifiableMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void logNonMatchingType(java.lang.Object,java.lang.ClassCastException)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: boolean isDebugEnabled()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void setRootViewName(java.lang.String)>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setOrder(int)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.text.AttributedCharacterIterator$Attribute: int hashCode()>
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object buildLazyResolutionProxy(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>-><org.springframework.aop.framework.ProxyFactory: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.Vector: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getContentType()>-><io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getCharacterEncoding()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setShutdownEndpoint(org.springframework.boot.actuate.context.ShutdownEndpoint)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><sun.security.provider.PolicyFile$SelfPermission: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$EmptyMap: boolean isEmpty()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer extractPathWithinApplication(org.springframework.http.server.PathContainer,org.springframework.http.server.PathContainer)>-><java.util.Collections$UnmodifiableCollection: int size()>
<sun.net.RegisteredDomain: java.lang.String getRegisteredDomain(java.lang.String)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.beans.factory.config.BeanDefinitionHolder: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundryActuatorAutoConfiguration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.springframework.validation.BindException: int hashCode()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.prepost.PrePostAdviceReactiveMethodInterceptor securityMethodInterceptor(org.springframework.security.access.method.AbstractMethodSecurityMetadataSource,org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void addMediaTypes(java.util.Map)>-><java.util.HashMap: void putAll(java.util.Map)>
<org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration: java.lang.String getOrDeducePassword(org.springframework.boot.autoconfigure.security.SecurityProperties$User,org.springframework.security.crypto.password.PasswordEncoder)>-><org.apache.commons.logging.LogAdapter$Log4jLog: void info(java.lang.Object)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque: int size()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.security.CodeSource: int hashCode()>
<org.springframework.http.server.reactive.ServerHttpResponseDecorator: void <init>(org.springframework.http.server.reactive.ServerHttpResponse)>-><java.lang.Object: void <init>()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.ArrayList: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.AbstractSet: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><java.time.format.DecimalStyle: int hashCode()>
<io.undertow.servlet.spec.HttpServletResponseImpl: void setCharacterEncoding(java.lang.String)>-><io.undertow.servlet.spec.HttpServletResponseImpl: boolean responseStarted()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List extractPartConverters(org.springframework.http.converter.FormHttpMessageConverter)>-><org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: org.springframework.web.servlet.config.annotation.InterceptorRegistration addInterceptor(org.springframework.web.servlet.HandlerInterceptor)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.LinkedHashMap$LinkedKeySet: int size()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors(org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><io.undertow.util.HeaderValues: java.lang.Object[] toArray()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.cglib.core.MethodInfo: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.WeakHashMap: java.util.Set entrySet()>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.http.server.DefaultRequestPath: void <init>(java.net.URI,java.lang.String)>-><org.springframework.http.server.DefaultRequestPath: org.springframework.http.server.PathContainer initContextPath(org.springframework.http.server.PathContainer,java.lang.String)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<java.lang.Object: java.lang.String toString()>-><javax.management.openmbean.ArrayType: int hashCode()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.security.web.server.context.WebSessionServerSecurityContextRepository: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.validation.BindException: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><java.util.ArrayDeque: java.util.Iterator iterator()>
<org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver: void <init>(org.springframework.core.ReactiveAdapterRegistry)>-><org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverSupport: void <init>(org.springframework.core.ReactiveAdapterRegistry)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setEnvironmentInfoContributor(org.springframework.boot.actuate.info.EnvironmentInfoContributor)>
<org.springframework.http.server.DefaultPathContainer: org.springframework.http.server.PathContainer subPath(org.springframework.http.server.PathContainer,int,int)>-><org.springframework.http.server.DefaultPathContainer: void <init>(java.lang.String,java.util.List)>
<io.undertow.util.Rfc6265CookieSupport: void validateCookieValue(java.lang.String)>-><java.lang.String: int length()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.nio.ByteBuffer: int hashCode()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.Short: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: int size()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: void <init>(java.util.Collection)>-><java.util.ArrayList: int size()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.Hashtable$KeySet: void clear()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.EndpointId: void <init>(java.lang.String)>-><java.lang.String: char charAt(int)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<java.util.EnumMap: void <init>(java.util.Map)>-><io.jsonwebtoken.impl.JwtMap: java.util.Set keySet()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.expression.TypedValue: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.core.OrderComparator: int compare(java.lang.Object,java.lang.Object)>
<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: void add(java.lang.Object,java.lang.Object)>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.DocumentRoot: void <init>(org.apache.commons.logging.Log)>
<java.util.Collections$SynchronizedCollection: void clear()>-><java.util.ArrayDeque: void clear()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.ContentTypeAssignment: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveTokenValidator: void <init>(org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService)>-><java.lang.Object: void <init>()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatch getServletHandlerByPath(java.lang.String)>-><io.undertow.servlet.handlers.ServletPathMatch: io.undertow.servlet.handlers.ServletChain getServletChain()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<org.springframework.boot.actuate.endpoint.EndpointId: void logWarning(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void warn(java.lang.Object)>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><com.fasterxml.jackson.databind.node.DecimalNode: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.chrono.GJCacheKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addFormatters(org.springframework.format.FormatterRegistry)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.RubyFixnum: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint convertToEndpoint(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: org.springframework.boot.actuate.endpoint.ExposableEndpoint createEndpoint(java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,boolean,java.util.Collection)>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><org.jruby.RubyArray: void clear()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: int hashCode()>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.google.common.collect.Maps$EntrySet: int size()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSchemaUsername(java.lang.String)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><org.springframework.web.context.support.ServletContextResource: void <init>(javax.servlet.ServletContext,java.lang.String)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.CharacterType: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.EnumMap$EntryIterator$Entry: int hashCode()>
<org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String getHint()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><com.google.common.collect.Maps$TransformedEntriesMap$1: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyHash: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLabelDebugger(org.owasp.webgoat.session.LabelDebugger)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.jruby.RubyHash$ConvertingEntry: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.awt.Point: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.web.servlet.support.ErrorPageFilterConfiguration: org.springframework.boot.web.servlet.support.ErrorPageFilter errorPageFilter()>
<io.undertow.server.HttpServerExchange: io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)>-><java.lang.String: boolean isEmpty()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ListableBeanFactory)>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ListableBeanFactory,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.core.ResolvableType)>
<org.springframework.web.servlet.HttpServletBean: void <init>()>-><javax.servlet.http.HttpServlet: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.joda.time.UTCDateTimeZone: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory undertowServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: java.util.Collection getDeploymentInfoCustomizers()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean: java.lang.String getBeanName()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder taskDecorator(org.springframework.core.task.TaskDecorator)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder authenticationManagerBuilder(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.context.ApplicationContext)>-><org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder: void <init>(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.security.crypto.password.PasswordEncoder)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.binder.system.UptimeMetrics: void <init>(java.lang.management.RuntimeMXBean,java.lang.Iterable)>-><java.lang.Object: void <init>()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void <init>()>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource methodMetadataSource(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>-><org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource: void <init>(org.springframework.security.access.prepost.PrePostInvocationAttributeFactory)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<java.util.EnumMap: void <init>(java.util.Map)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<com.google.common.collect.Maps$10: java.lang.Object getKey()>-><java.text.AttributeEntry: java.lang.Object getKey()>
<java.lang.Object: java.lang.String toString()>-><java.time.ZoneOffset: int hashCode()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>-><java.security.Provider: void checkInitialized()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.logging.Level: int hashCode()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void <init>(java.lang.String)>-><org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.reflect.Proxy$Key2: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setPrefix(java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.HsqlException: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler,org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.web.reactive.result.view.UrlBasedViewResolver: void setViewNames(java.lang.String[])>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder awaitTermination(boolean)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.util.HashSet: boolean add(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set)>-><java.lang.Object: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.hsqldb.persist.CachedObjectBase: boolean equals(java.lang.Object)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.http.server.DefaultRequestPath: void validateContextPath(java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: byte[] getKeySpec(java.lang.String)>-><java.util.Base64$Decoder: byte[] decode(java.lang.String)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.RegularEnumSet: boolean isEmpty()>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><java.util.stream.ForEachOps$ForEachOp$OfInt: java.lang.Object get()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><org.springframework.context.support.GenericApplicationContext: java.lang.ClassLoader getClassLoader()>
<io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>-><io.undertow.server.session.InMemorySessionManager$SessionImpl: java.lang.String getId()>
<org.springframework.security.core.userdetails.User: java.util.SortedSet sortAuthorities(java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void addOperations(org.springframework.util.MultiValueMap,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.Object,boolean)>-><org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer: org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey createOperationKey(org.springframework.boot.actuate.endpoint.Operation)>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForAnnotationIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>-><org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForAnnotationIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>
<org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>-><org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><com.google.common.collect.Maps$EntrySet: int size()>
<io.undertow.util.Rfc6265CookieSupport: void validateCookieValue(java.lang.String)>-><java.lang.String: char[] toCharArray()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.lang.invoke.LambdaForm: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedHashMap$LinkedEntrySet: void clear()>
<io.undertow.servlet.handlers.ServletPathMatches: void addToListMap(java.util.Map,java.lang.Object,java.lang.Object)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: int hashCode()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyMatchData: int hashCode()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.ArrayDeque: boolean isEmpty()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.springframework.validation.BindException: java.lang.String getMessage()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.LinkedHashMap$LinkedValues: int size()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void <init>(java.lang.Class,java.lang.Object,java.lang.Object[])>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.springframework.boot.actuate.endpoint.web.annotation.DiscoveredServletEndpoint: void <init>(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer,java.lang.Object,org.springframework.boot.actuate.endpoint.EndpointId,java.lang.String,boolean)>-><java.lang.Object: java.lang.Class getClass()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.Vector: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Integer extractKeyHash(java.lang.String)>-><java.lang.String: int hashCode()>
<org.jruby.javasupport.binding.Initializer: void handleScalaSingletons(java.lang.Class,org.jruby.javasupport.binding.Initializer$State)>-><io.undertow.util.HeaderValues: int size()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setResourceConfig(org.glassfish.jersey.server.ResourceConfig)>
<java.lang.Object: java.lang.String toString()>-><java.util.AbstractList: int hashCode()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<java.util.AbstractMap: java.lang.String toString()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.springframework.validation.BindException: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration: void <init>()>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor endpointCachingOperationInvokerAdvisor(org.springframework.core.env.Environment)>-><org.springframework.boot.actuate.autoconfigure.endpoint.EndpointIdTimeToLivePropertyFunction: void <init>(org.springframework.core.env.Environment)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.hsqldb.types.JavaObjectData: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter,java.lang.String)>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><javax.management.MBeanConstructorInfo: int hashCode()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.boot.actuate.endpoint.EndpointId: int hashCode()>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><io.undertow.util.HeaderValues: int size()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration: org.springframework.boot.actuate.cache.CachesEndpointWebExtension cachesEndpointWebExtension(org.springframework.boot.actuate.cache.CachesEndpoint)>-><org.springframework.boot.actuate.cache.CachesEndpointWebExtension: void <init>(org.springframework.boot.actuate.cache.CachesEndpoint)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.jruby.RubyHash: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider: void <init>()>-><java.lang.Object: void <init>()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><ch.qos.logback.core.joran.spi.ElementSelector: int hashCode()>
<com.google.common.collect.TransformedIterator: java.lang.Object next()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.Boolean getEnabled()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers: void <init>(java.util.Collection)>-><java.util.Collections: java.util.List emptyList()>
<org.springframework.util.LinkedMultiValueMap: void add(java.lang.Object,java.lang.Object)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<com.fasterxml.jackson.databind.cfg.BaseSettings: java.text.DateFormat _force(java.text.DateFormat,java.util.TimeZone)>-><java.text.SimpleDateFormat: java.lang.Object clone()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.web.client.RestTemplateBuilder: void addClientHttpRequestInitializer(org.springframework.web.client.RestTemplate)>-><org.springframework.boot.web.client.RestTemplateBuilderClientHttpRequestInitializer: void <init>(org.springframework.boot.web.client.BasicAuthentication,java.util.Map,java.util.Set)>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><io.undertow.util.HeaderValues: boolean isEmpty()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.trace.http.HttpExchangeTracer: void <init>(java.util.Set)>-><java.lang.Object: void <init>()>
<org.jruby.RubyHash: void putAll(java.util.Map)>-><com.google.common.collect.Multimaps$Keys$KeysEntrySet: java.util.Iterator iterator()>
<org.springframework.http.server.reactive.NettyHeadersAdapter: java.util.List get(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter: boolean containsKey(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>-><org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: java.lang.Object getSuggestedValue(org.springframework.beans.factory.config.DependencyDescriptor)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><com.google.common.collect.Multisets$AbstractEntry: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Maps$EntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$UnmodifiableCollection: boolean remove(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.jruby.javasupport.JavaMethod: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder maxPoolSize(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean contains(java.lang.Object)>-><java.util.EnumMap$EntrySet: int size()>
<org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor: javax.servlet.ServletConfig getServletConfig()>-><org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: javax.servlet.ServletConfig getServletConfig()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.jruby.ir.operands.StringLiteral: boolean equals(java.lang.Object)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository clientRegistrationRepository(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>-><java.util.HashMap: java.util.Collection values()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hsqldb.types.TimeData: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping welcomePageHandlerMapping(org.springframework.context.ApplicationContext,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<io.undertow.servlet.spec.HttpServletResponseImpl: java.lang.String getCharacterEncoding()>-><io.undertow.servlet.api.DeploymentInfo: java.lang.String getDefaultResponseEncoding()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>-><com.google.common.collect.Maps$EntrySet: boolean contains(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getRelativePath(java.lang.String)>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getPrefix()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.security.access.expression.SecurityExpressionHandler getSecurityExpressionHandler()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><java.io.ByteArrayInputStream: void close()>
<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: int hashCode()>
<com.google.common.collect.Maps$10: java.lang.Object getValue()>-><java.text.AttributeEntry: java.lang.Object getValue()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: boolean isEndpointExposed(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean)>-><org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer: boolean isEndpointExposed(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.expression.spel.standard.SpelCompiler: org.springframework.expression.spel.CompiledExpression compile(org.springframework.expression.spel.ast.SpelNodeImpl)>-><org.springframework.expression.spel.ast.QualifiedIdentifier: java.lang.String toStringAST()>
<com.google.common.collect.Maps$7: void <init>(com.google.common.base.Function)>-><java.lang.Object: void <init>()>
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder type(java.lang.Class)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setGridFsDatabase(java.lang.String)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration$ServletTraceFilterConfiguration: org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter httpTraceFilter(org.springframework.boot.actuate.trace.http.HttpTraceRepository,org.springframework.boot.actuate.trace.http.HttpExchangeTracer)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.google.common.collect.Maps$TransformedEntriesMap: int size()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.TreeMap$Values: java.util.Iterator iterator()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.springframework.boot.info.GitProperties: void coercePropertyToEpoch(java.util.Properties,java.lang.String)>-><java.util.Properties: java.lang.String getProperty(java.lang.String)>
<sun.security.ssl.JsseJce$SunCertificates$1: java.lang.Object run()>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<org.springframework.context.support.AbstractApplicationContext: void doClose()>-><org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void onClose()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><sun.security.ssl.SSLSessionImpl: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><java.security.cert.X509CRLEntry: int hashCode()>
<org.jruby.ir.representations.IGVCFGVisitor: void visitEdges(org.jruby.ir.representations.CFG)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ListableBeanFactory)>-><org.springframework.boot.autoconfigure.web.ResourceProperties: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.util.Collections$UnmodifiableList: int hashCode()>
<org.springframework.core.io.buffer.NettyDataBufferFactory: void <init>(io.netty.buffer.ByteBufAllocator)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.Maps$EntrySet: int size()>-><com.google.common.collect.Maps$TransformedEntriesMap: int size()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration: void <init>()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupDomain(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void setDefaultDomain(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean startsWith(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJava8TimeDialect(org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><sun.security.x509.AVA: int hashCode()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.http.server.reactive.ReactorServerHttpRequest: java.net.URI resolveBaseUrl(reactor.netty.http.server.HttpServerRequest)>-><org.springframework.http.server.reactive.ReactorServerHttpRequest: java.lang.String getScheme(reactor.netty.http.server.HttpServerRequest)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.Object getDetails()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<io.micrometer.core.instrument.binder.logging.LogbackMetrics: void <init>()>-><java.util.Collections: java.util.List emptyList()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: void <init>(org.springframework.http.MediaType[])>-><org.springframework.util.Assert: void noNullElements(java.lang.Object[],java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder roles(java.lang.String[])>-><org.springframework.security.core.userdetails.User$UserBuilder: org.springframework.security.core.userdetails.User$UserBuilder authorities(java.util.Collection)>
<java.util.Collections$SynchronizedCollection: void clear()>-><io.undertow.util.HeaderValues: void clear()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.SortedOps$RefSortingSink: void accept(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<org.springframework.http.converter.FormHttpMessageConverter: void setPartConverters(java.util.List)>-><org.springframework.util.Assert: void notEmpty(java.util.Collection,java.lang.String)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.time.YearMonth: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: int hashCode()>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatchesData setupServletChains()>-><java.lang.String: boolean endsWith(java.lang.String)>
<com.google.common.collect.TransformedIterator: boolean hasNext()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.lang.String: int hashCode()>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.accept.ContentNegotiationManager buildContentNegotiationManager()>-><org.springframework.web.accept.ContentNegotiationManagerFactoryBean: org.springframework.web.accept.ContentNegotiationManager build()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><io.undertow.servlet.spec.HttpSessionImpl: int hashCode()>
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determinePassword()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineDriverClassName()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration: org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider flywayDefaultDdlModeProvider(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider: void <init>(java.lang.Iterable)>
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void <init>()>-><java.lang.Object: void <init>()>
<io.undertow.server.handlers.cache.LRUCache: void add(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.actuate.logging.LoggersEndpoint: void <init>(org.springframework.boot.logging.LoggingSystem,org.springframework.boot.logging.LoggerGroups)>-><java.lang.Object: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.lang.String: int hashCode()>
<org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties: void <init>()>-><java.lang.Object: void <init>()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.validation.BindException: int hashCode()>
<java.util.Arrays$NaturalOrder: int compare(java.lang.Object,java.lang.Object)>-><sun.security.ssl.CipherSuite: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository clientRegistrationRepository(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>-><org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientPropertiesRegistrationAdapter: java.util.Map getClientRegistrations(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.Nodes$SizedCollectorTask$OfRef: void accept(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.cache.CacheProperties getCachePropertiesInstance()>-><org.springframework.boot.autoconfigure.cache.CacheProperties: void setCacheNames(java.util.List)>
<io.undertow.servlet.handlers.ServletPathMatches: io.undertow.servlet.handlers.ServletPathMatches$MatchData resolveServletForPath(java.lang.String,java.util.Map,java.util.Map,io.undertow.servlet.handlers.ServletHandler)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec: void <init>(org.springframework.security.config.web.server.ServerHttpSecurity)>-><org.springframework.security.web.server.header.FeaturePolicyServerHttpHeadersWriter: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><com.couchbase.client.core.env.KeyValueServiceConfig: com.couchbase.client.core.env.KeyValueServiceConfig create(int)>
<org.springframework.security.config.annotation.method.configuration.ReactiveMethodSecurityConfiguration: org.springframework.security.access.prepost.PrePostAdviceReactiveMethodInterceptor securityMethodInterceptor(org.springframework.security.access.method.AbstractMethodSecurityMetadataSource,org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>-><org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice: void setExpressionHandler(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)>
<java.util.AbstractCollection: void clear()>-><jnr.constants.ConstantSet$ConstantIterator: void remove()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.jruby.javasupport.JavaConstructor: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.lang.Object[])>-><org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.util.Collection)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.autoconfigure.security.servlet.RequestMatcherProvider getRequestMatcherProvider()>
<io.undertow.servlet.spec.ServletOutputStreamImpl: void <init>(io.undertow.servlet.handlers.ServletRequestContext)>-><javax.servlet.ServletOutputStream: void <init>()>
<org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping: void <init>(org.springframework.boot.actuate.endpoint.web.EndpointMapping,java.util.Collection,org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes,org.springframework.web.cors.CorsConfiguration,boolean)>-><org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping: void <init>()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<java.util.AbstractSet: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.Vector: java.lang.String toString()>
<io.undertow.server.handlers.cache.LRUCache: void clear()>-><java.util.concurrent.ConcurrentHashMap: void clear()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl: boolean weakCompareAndSet(java.lang.Object,int,int)>-><sun.misc.Unsafe: boolean compareAndSwapInt(java.lang.Object,long,int,int)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>(java.lang.Iterable)>-><java.lang.Object: void <init>()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.jruby.specialized.RubyArrayTwoObject: org.jruby.runtime.builtin.IRubyObject rb_clear()>-><org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject rb_clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>
<org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer: void assertNoDuplicateOperations(org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean,org.springframework.util.MultiValueMap)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: int size()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$1: int size()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()>-><java.util.concurrent.ConcurrentHashMap$CollectionView: int size()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: int hashCode()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeInitMethods(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>-><org.springframework.web.filter.GenericFilterBean: void afterPropertiesSet()>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<io.undertow.server.handlers.cache.LRUCache: void add(java.lang.Object,java.lang.Object)>-><io.undertow.server.handlers.cache.LRUCache$CacheEntry: void setValue(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.logging.log4j.Level: int hashCode()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.jruby.RubyBoolean: int hashCode()>
<io.undertow.util.HeaderValues: boolean addAll(java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<io.micrometer.core.instrument.binder.jvm.JvmGcMetrics: void <init>(java.lang.Iterable)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.validation.AbstractBindingResult: boolean equals(java.lang.Object)>-><org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration: org.springframework.boot.actuate.logging.LoggersEndpoint loggersEndpoint(org.springframework.boot.logging.LoggingSystem,org.springframework.beans.factory.ObjectProvider)>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>-><sun.security.ssl.ProtocolVersion: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.hsqldb.persist.CachedObjectBase: int hashCode()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><java.util.IdentityHashMap: int hashCode()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.Collections$UnmodifiableCollection: int size()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><java.io.ObjectStreamClass$WeakClassKey: int hashCode()>
<com.google.common.collect.Multimaps$Keys$KeysEntrySet: boolean remove(java.lang.Object)>-><java.util.LinkedHashMap$LinkedKeySet: void clear()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.HashSet: java.util.Iterator iterator()>
<org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.util.Map$Entry next()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: void <init>(org.springframework.http.server.reactive.NettyHeadersAdapter,java.lang.String)>
<io.undertow.servlet.handlers.FilterHandler: void <init>(java.util.Map,boolean,io.undertow.server.HttpHandler)>-><java.util.EnumMap: void <init>(java.lang.Class)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping(org.springframework.web.accept.ContentNegotiationManager,org.springframework.format.support.FormattingConversionService,org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: int size()>
