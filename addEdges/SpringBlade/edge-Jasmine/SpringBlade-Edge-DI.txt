<org.springblade.modules.system.controller.MenuController: org.springblade.core.tool.api.R detail(org.springblade.modules.system.entity.Menu)>-><org.springblade.modules.system.service.impl.MenuServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.DeptServiceImpl: boolean save(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.RegionServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<org.springblade.modules.system.controller.UserController: org.springblade.core.tool.api.R info(org.springblade.core.secure.BladeUser)>-><org.springblade.modules.system.service.impl.UserServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.springblade.modules.system.service.impl.DictServiceImpl: boolean removeByIds(java.util.Collection)>-><com.baomidou.mybatisplus.core.toolkit.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.springblade.modules.develop.controller.CodeController: org.springblade.core.tool.api.R copy(java.lang.Long)>-><org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean save(java.lang.Object)>
<org.springblade.modules.system.controller.LogUsualController: org.springblade.core.tool.api.R detail(org.springblade.core.log.model.LogUsual)>-><org.springblade.modules.system.service.impl.LogUsualServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.system.service.impl.DeptServiceImpl: boolean updateById(java.lang.Object)>
<org.springblade.modules.system.service.impl.MenuServiceImpl: java.util.List roleTreeKeys(java.lang.String)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean updateById(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.develop.service.impl.DatasourceServiceImpl: java.util.List list()>-><org.springblade.modules.develop.service.impl.DatasourceServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.LogApiServiceImpl: void <init>()>-><synthetic.method.SingletonFactory: synthetic.method.LogApiMapperImpl getLogApiMapperImpl()>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean save(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean save(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.develop.service.impl.CodeServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.springblade.modules.system.controller.DictController: org.springblade.core.tool.api.R detail(org.springblade.modules.system.entity.Dict)>-><org.springblade.modules.system.service.impl.DictServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.DictServiceImpl: boolean updateById(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.system.service.impl.RoleServiceImpl: void <init>(org.springblade.modules.system.service.IRoleMenuService)>-><synthetic.method.SingletonFactory: synthetic.method.RoleMapperImpl getRoleMapperImpl()>
<org.springblade.modules.system.service.impl.MenuServiceImpl: java.util.List routes(java.lang.String)>-><java.util.Collections$SingletonList: void forEach(java.util.function.Consumer)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: boolean save(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.core.mp.base.BaseServiceImpl: boolean deleteLogic(java.util.List)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean removeByIds(java.util.Collection)>
<org.springblade.modules.system.controller.AuthClientController: org.springblade.core.tool.api.R list(org.springblade.modules.system.entity.AuthClient,org.springblade.core.mp.support.Query)>-><org.springblade.core.mp.base.BaseServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.develop.service.impl.DatasourceServiceImpl: java.util.List list()>-><com.baomidou.mybatisplus.core.toolkit.Wrappers: com.baomidou.mybatisplus.core.conditions.query.QueryWrapper emptyWrapper()>
<org.springblade.modules.system.controller.UserController: org.springblade.core.tool.api.R detail(org.springblade.modules.system.entity.User)>-><org.springblade.modules.system.service.impl.UserServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.DictServiceImpl: boolean submit(org.springblade.modules.system.entity.Dict)>-><org.springblade.modules.system.vo.DictVO: java.lang.Long getId()>
<org.springblade.modules.system.service.impl.UserServiceImpl: boolean grant(java.lang.String,java.lang.String)>-><org.springblade.modules.system.service.impl.UserServiceImpl: boolean update(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: boolean removeRegion(java.lang.String)>-><org.springblade.modules.system.service.impl.RegionServiceImpl: boolean removeById(java.io.Serializable)>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.system.service.impl.DeptServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.springblade.modules.system.service.impl.DictServiceImpl: boolean updateById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.controller.TenantController: org.springblade.core.tool.api.R select(org.springblade.modules.system.entity.Tenant,org.springblade.core.secure.BladeUser)>-><org.springblade.core.mp.base.BaseServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.DeptServiceImpl: boolean updateById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.controller.UserController: org.springblade.core.tool.api.R userList(org.springblade.modules.system.entity.User)>-><org.springblade.modules.system.service.impl.UserServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.develop.controller.CodeController: org.springblade.core.tool.api.R genCode(java.lang.String,java.lang.String)>-><org.springblade.modules.develop.service.impl.CodeServiceImpl: java.util.List listByIds(java.util.Collection)>
<org.springblade.modules.system.service.impl.UserServiceImpl: boolean resetPassword(java.lang.String)>-><org.springblade.modules.system.service.impl.UserServiceImpl: boolean update(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.core.mp.base.BaseServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.controller.DeptController: org.springblade.core.tool.api.R detail(org.springblade.modules.system.entity.Dept)>-><org.springblade.modules.system.service.impl.DeptServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: boolean updateById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.core.mp.base.BaseServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.springblade.modules.system.service.impl.RoleMenuServiceImpl: void <init>()>-><synthetic.method.SingletonFactory: synthetic.method.RoleMenuMapperImpl getRoleMenuMapperImpl()>
<org.springblade.modules.system.service.impl.MenuServiceImpl: boolean updateById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.controller.TenantController: org.springblade.core.tool.api.R detail(org.springblade.modules.system.entity.Tenant)>-><org.springblade.core.mp.base.BaseServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.DeptServiceImpl: boolean removeByIds(java.util.Collection)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean removeByIds(java.util.Collection)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: boolean updateById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.controller.LogApiController: org.springblade.core.tool.api.R list(java.util.Map,org.springblade.core.mp.support.Query)>-><org.springblade.modules.system.service.impl.LogApiServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.MenuServiceImpl: boolean save(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: boolean removeById(java.io.Serializable)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: boolean updateById(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean removeByIds(java.util.Collection)>-><com.baomidou.mybatisplus.core.toolkit.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.springblade.modules.system.controller.RoleController: org.springblade.core.tool.api.R list(java.util.Map,org.springblade.core.secure.BladeUser)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.controller.RegionController: org.springblade.core.tool.api.R select(java.lang.String)>-><org.springblade.modules.system.service.impl.RegionServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: boolean removeById(java.io.Serializable)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.develop.controller.CodeController: org.springblade.core.tool.api.R remove(java.lang.String)>-><org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean removeByIds(java.util.Collection)>
<org.springblade.core.mp.base.BaseServiceImpl: boolean save(org.springblade.core.mp.base.BaseEntity)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean save(java.lang.Object)>
<org.springblade.core.mp.base.BaseServiceImpl: java.lang.Object getById(java.io.Serializable)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.springblade.Application: void <init>()>
<org.springblade.modules.system.controller.LogErrorController: org.springblade.core.tool.api.R list(java.util.Map,org.springblade.core.mp.support.Query)>-><org.springblade.modules.system.service.impl.LogErrorServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.UserServiceImpl: boolean update(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.system.service.impl.MenuServiceImpl: boolean updateById(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.system.controller.RegionController: org.springblade.core.tool.api.R update(org.springblade.modules.system.entity.Region)>-><org.springblade.modules.system.service.impl.RegionServiceImpl: boolean updateById(java.lang.Object)>
<org.springblade.modules.system.service.impl.DictServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: java.lang.Object getById(java.io.Serializable)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.core.report.service.impl.ReportFileServiceImpl: void <init>()>-><synthetic.method.SingletonFactory: synthetic.method.ReportFileMapperImpl getReportFileMapperImpl()>
<org.springblade.modules.develop.controller.CodeController: org.springblade.core.tool.api.R detail(org.springblade.modules.develop.entity.Code)>-><org.springblade.modules.develop.service.impl.CodeServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.develop.service.impl.DatasourceServiceImpl: java.lang.Object getById(java.io.Serializable)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.controller.RegionController: org.springblade.core.tool.api.R list(org.springblade.modules.system.entity.Region,org.springblade.core.mp.support.Query)>-><org.springblade.modules.system.service.impl.RegionServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.DictServiceImpl: boolean save(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.MenuServiceImpl: boolean save(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.UserServiceImpl: boolean updatePassword(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)>-><org.springblade.modules.system.service.impl.UserServiceImpl: boolean update(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.controller.ParamController: org.springblade.core.tool.api.R detail(org.springblade.modules.system.entity.Param)>-><org.springblade.core.mp.base.BaseServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean save(java.lang.Object)>
<org.springblade.modules.system.service.impl.PostServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean updateById(java.lang.Object)>
<org.springblade.modules.system.service.impl.MenuServiceImpl: boolean removeByIds(java.util.Collection)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.system.service.impl.MenuServiceImpl: boolean updateById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.system.service.impl.MenuServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean removeByIds(java.util.Collection)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.system.controller.DeptController: org.springblade.core.tool.api.R list(java.util.Map,org.springblade.core.secure.BladeUser)>-><org.springblade.modules.system.service.impl.DeptServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.controller.RoleController: org.springblade.core.tool.api.R detail(org.springblade.modules.system.entity.Role)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.DictServiceImpl: void <init>()>-><synthetic.method.SingletonFactory: synthetic.method.DictMapperImpl getDictMapperImpl()>
<org.springblade.modules.system.controller.UserController: org.springblade.core.tool.api.R list(java.util.Map,org.springblade.core.mp.support.Query,org.springblade.core.secure.BladeUser)>-><org.springblade.modules.system.service.impl.UserServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.UserServiceImpl: boolean update(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.springblade.core.log.error.BladeErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.LogUsualServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.system.service.impl.MenuServiceImpl: boolean updateById(java.lang.Object)>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.system.service.impl.PostServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.springblade.modules.system.service.impl.DeptServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: boolean submit(org.springblade.modules.system.entity.Region)>-><org.springblade.modules.system.service.impl.RegionServiceImpl: boolean updateById(java.lang.Object)>
<org.springblade.modules.develop.controller.CodeController: org.springblade.core.tool.api.R list(java.util.Map,org.springblade.core.mp.support.Query)>-><org.springblade.modules.develop.service.impl.CodeServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.controller.PostController: org.springblade.core.tool.api.R detail(org.springblade.modules.system.entity.Post)>-><org.springblade.modules.system.service.impl.PostServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.PostServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.UserServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<org.springblade.modules.develop.controller.CodeController: org.springblade.core.tool.api.R copy(java.lang.Long)>-><org.springblade.modules.develop.service.impl.CodeServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.springblade.modules.system.controller.RegionController: org.springblade.core.tool.api.R detail(org.springblade.modules.system.entity.Region)>-><org.springblade.modules.system.service.impl.RegionServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.desk.controller.NoticeController: org.springblade.core.tool.api.R list(java.util.Map,org.springblade.core.mp.support.Query)>-><org.springblade.core.mp.base.BaseServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.system.service.impl.UserServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.springblade.modules.system.service.impl.MenuServiceImpl: void <init>(org.springblade.modules.system.service.IRoleMenuService)>-><synthetic.method.SingletonFactory: synthetic.method.MenuMapperImpl getMenuMapperImpl()>
<org.springblade.modules.system.controller.PostController: org.springblade.core.tool.api.R list(org.springblade.modules.system.entity.Post,org.springblade.core.mp.support.Query)>-><org.springblade.modules.system.service.impl.PostServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.LogUsualServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<org.springblade.modules.system.controller.LogApiController: org.springblade.core.tool.api.R detail(org.springblade.core.log.model.LogApi)>-><org.springblade.modules.system.service.impl.LogApiServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.DeptServiceImpl: boolean updateById(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.system.controller.ParamController: org.springblade.core.tool.api.R list(java.util.Map,org.springblade.core.mp.support.Query)>-><org.springblade.core.mp.base.BaseServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.core.mp.base.BaseServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<org.springblade.modules.system.controller.TenantController: org.springblade.core.tool.api.R info(java.lang.String)>-><org.springblade.core.mp.base.BaseServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.MenuServiceImpl: boolean save(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.system.service.impl.DeptServiceImpl: boolean updateById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.system.service.impl.DictServiceImpl: boolean removeByIds(java.util.Collection)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.system.service.impl.LogErrorServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean updateById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.system.controller.DeptController: org.springblade.core.tool.api.R remove(java.lang.String)>-><org.springblade.modules.system.service.impl.DeptServiceImpl: boolean removeByIds(java.util.Collection)>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.system.service.impl.DeptServiceImpl: boolean save(java.lang.Object)>
<org.springblade.modules.system.service.impl.DictServiceImpl: boolean updateById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.UserServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.controller.PostController: org.springblade.core.tool.api.R select(java.lang.String,org.springblade.core.secure.BladeUser)>-><org.springblade.modules.system.service.impl.PostServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.DeptServiceImpl: java.lang.Object getById(java.io.Serializable)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean save(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.LogErrorServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<org.springblade.modules.system.service.impl.UserServiceImpl: boolean registerGuest(org.springblade.modules.system.entity.User,java.lang.Long)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: java.util.List listByIds(java.util.Collection)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.RegionServiceImpl: boolean save(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.system.service.impl.DictServiceImpl: boolean save(java.lang.Object)>
<org.springblade.modules.system.service.impl.LogUsualServiceImpl: void <init>()>-><synthetic.method.SingletonFactory: synthetic.method.LogUsualMapperImpl getLogUsualMapperImpl()>
<org.springblade.modules.system.service.impl.DictServiceImpl: java.lang.Object getById(java.io.Serializable)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.DeptServiceImpl: boolean removeByIds(java.util.Collection)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: boolean submit(org.springblade.modules.system.entity.Region)>-><org.springblade.modules.system.service.impl.RegionServiceImpl: boolean save(java.lang.Object)>
<org.springblade.modules.system.service.impl.DeptServiceImpl: void <init>()>-><synthetic.method.SingletonFactory: synthetic.method.DeptMapperImpl getDeptMapperImpl()>
<org.springblade.modules.system.service.impl.MenuServiceImpl: void lambda$authRoutes$4(java.util.List,org.springblade.modules.system.dto.MenuDTO)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springblade.modules.system.controller.AuthClientController: org.springblade.core.tool.api.R detail(org.springblade.modules.system.entity.AuthClient)>-><org.springblade.core.mp.base.BaseServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.system.service.impl.MenuServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.springblade.modules.system.service.impl.MenuServiceImpl: java.util.List authRoutes(org.springblade.core.secure.BladeUser)>-><java.util.Collections$SingletonList: void forEach(java.util.function.Consumer)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: boolean save(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.system.service.impl.DictServiceImpl: boolean removeByIds(java.util.Collection)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.MenuServiceImpl: boolean removeByIds(java.util.Collection)>-><com.baomidou.mybatisplus.core.toolkit.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.springblade.modules.desk.controller.NoticeController: org.springblade.core.tool.api.R detail(org.springblade.modules.desk.entity.Notice)>-><org.springblade.core.mp.base.BaseServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.DeptServiceImpl: boolean save(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.develop.service.impl.DatasourceServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<org.springblade.modules.system.service.impl.UserServiceImpl: boolean registerGuest(org.springblade.modules.system.entity.User,java.lang.Long)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean updateById(java.lang.Object)>
<org.springblade.modules.system.service.impl.LogApiServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<org.springblade.modules.system.service.impl.UserOauthServiceImpl: void <init>()>-><synthetic.method.SingletonFactory: synthetic.method.UserOauthMapperImpl getUserOauthMapperImpl()>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean removeByIds(java.util.Collection)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.DeptServiceImpl: boolean removeByIds(java.util.Collection)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.MenuServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.DictServiceImpl: boolean save(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.system.service.impl.DeptServiceImpl: boolean removeByIds(java.util.Collection)>-><com.baomidou.mybatisplus.core.toolkit.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.springblade.modules.system.service.impl.DeptServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.DictServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.develop.service.impl.DatasourceServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.controller.DictController: org.springblade.core.tool.api.R list(java.util.Map)>-><org.springblade.modules.system.service.impl.DictServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: void <init>()>-><synthetic.method.SingletonFactory: synthetic.method.RegionMapperImpl getRegionMapperImpl()>
<org.springblade.modules.system.service.impl.LogErrorServiceImpl: void <init>()>-><synthetic.method.SingletonFactory: synthetic.method.LogErrorMapperImpl getLogErrorMapperImpl()>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: boolean updateById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.DictServiceImpl: boolean removeByIds(java.util.Collection)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.system.controller.RegionController: org.springblade.core.tool.api.R save(org.springblade.modules.system.entity.Region)>-><org.springblade.modules.system.service.impl.RegionServiceImpl: boolean save(java.lang.Object)>
<org.springblade.modules.system.service.impl.UserServiceImpl: java.lang.Object getById(java.io.Serializable)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.controller.LogUsualController: org.springblade.core.tool.api.R list(java.util.Map,org.springblade.core.mp.support.Query)>-><org.springblade.modules.system.service.impl.LogUsualServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.UserServiceImpl: boolean registerGuest(org.springblade.modules.system.entity.User,java.lang.Long)>-><org.springblade.core.mp.base.BaseServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.UserServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.PostServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.core.mp.base.BaseServiceImpl: boolean updateById(org.springblade.core.mp.base.BaseEntity)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean updateById(java.lang.Object)>
<org.springblade.modules.system.service.impl.RoleServiceImpl: boolean grant(java.util.List,java.util.List)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean remove(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.develop.controller.DatasourceController: org.springblade.core.tool.api.R list(org.springblade.modules.develop.entity.Datasource,org.springblade.core.mp.support.Query)>-><org.springblade.modules.develop.service.impl.DatasourceServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.core.mp.base.BaseServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.LogApiServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.system.service.impl.DictServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.springblade.modules.system.service.impl.UserServiceImpl: boolean updatePassword(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)>-><org.springblade.modules.system.service.impl.UserServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.springblade.modules.system.controller.MenuController: org.springblade.core.tool.api.R list(java.util.Map)>-><org.springblade.modules.system.service.impl.MenuServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.service.impl.RegionServiceImpl: boolean removeById(java.io.Serializable)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.MenuServiceImpl: java.lang.Object getById(java.io.Serializable)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.system.service.impl.DictServiceImpl: boolean updateById(java.lang.Object)>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: void <init>()>-><synthetic.method.SingletonFactory: synthetic.method.CodeMapperImpl getCodeMapperImpl()>
<org.springblade.modules.system.controller.LogErrorController: org.springblade.core.tool.api.R detail(org.springblade.core.log.model.LogError)>-><org.springblade.modules.system.service.impl.LogErrorServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.develop.controller.DatasourceController: org.springblade.core.tool.api.R detail(org.springblade.modules.develop.entity.Datasource)>-><org.springblade.modules.develop.service.impl.DatasourceServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.develop.service.impl.DatasourceServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.springblade.modules.system.service.impl.PostServiceImpl: java.lang.Object getById(java.io.Serializable)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.service.impl.UserServiceImpl: boolean update(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.system.service.impl.MenuServiceImpl: boolean removeByIds(java.util.Collection)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.springblade.modules.system.service.impl.MenuServiceImpl: boolean save(java.lang.Object)>
<org.springblade.modules.system.service.impl.MenuServiceImpl: boolean removeByIds(java.util.Collection)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.springblade.modules.develop.service.impl.CodeServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<org.springblade.modules.system.controller.RoleController: org.springblade.core.tool.api.R remove(java.lang.String)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean removeByIds(java.util.Collection)>
<org.springblade.modules.develop.service.impl.DatasourceServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.springblade.modules.system.controller.TenantController: org.springblade.core.tool.api.R list(java.util.Map,org.springblade.core.mp.support.Query,org.springblade.core.secure.BladeUser)>-><org.springblade.core.mp.base.BaseServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.springblade.modules.system.controller.DictController: org.springblade.core.tool.api.R remove(java.lang.String)>-><org.springblade.modules.system.service.impl.DictServiceImpl: boolean removeByIds(java.util.Collection)>
<org.springblade.modules.system.controller.MenuController: org.springblade.core.tool.api.R remove(java.lang.String)>-><org.springblade.modules.system.service.impl.MenuServiceImpl: boolean removeByIds(java.util.Collection)>
<org.springblade.modules.system.service.impl.DeptServiceImpl: boolean save(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.system.service.impl.RoleServiceImpl: boolean grant(java.util.List,java.util.List)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveBatch(java.util.Collection)>
<org.springblade.modules.develop.controller.DatasourceController: org.springblade.core.tool.api.R select()>-><org.springblade.modules.develop.service.impl.DatasourceServiceImpl: java.util.List list()>
<org.springblade.modules.system.service.impl.DictServiceImpl: boolean save(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springblade.modules.system.service.impl.UserServiceImpl: boolean update(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><org.springblade.modules.system.service.impl.UserServiceImpl: boolean update(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>
