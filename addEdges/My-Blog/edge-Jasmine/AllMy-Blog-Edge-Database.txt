<synthetic.method.BlogCategoryMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogCategory)>-><com.site.blog.my.core.entity.BlogCategory: java.lang.Integer getCategoryRank()>
<synthetic.method.BlogTagMapperImpl: int batchInsertBlogTag(java.util.List)>-><synthetic.method.datatable.TBBLOGTAG: void settagname(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogtitle(java.lang.String)>
<synthetic.method.BlogCategoryMapperImpl: int getTotalCategories(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGCATEGORY: synthetic.method.datatable.TBBLOGCATEGORY getInstance()>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setcreatetime(java.util.Date)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogcoverimage(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.lang.Byte getblogstatus()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Byte getBlogStatus()>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogLink: void setLinkType(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: int getisdeleted()>
<synthetic.method.datatable.TBLINK: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser login(java.lang.String,java.lang.String)>-><synthetic.method.datatable.TBADMINUSER: java.lang.String getloginpassword()>
<synthetic.method.BlogCommentMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Long getcommentid()>
<synthetic.method.BlogConfigMapperImpl: com.site.blog.my.core.entity.BlogConfig selectByPrimaryKey(java.lang.String)>-><synthetic.method.datatable.TBCONFIG: synthetic.method.datatable.TBCONFIG getInstance()>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: synthetic.method.datatable.TBBLOGCATEGORY getInstance()>
<synthetic.method.BlogCategoryMapperImpl: java.util.List selectByCategoryIds(java.util.List)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setlinkname(java.lang.String)>
<synthetic.method.BlogTagMapperImpl: com.site.blog.my.core.entity.BlogTag selectByTagName(java.lang.String)>-><synthetic.method.datatable.TBBLOGTAG: java.util.Date getcreatetime()>
<synthetic.method.BlogConfigMapperImpl: com.site.blog.my.core.entity.BlogConfig selectByPrimaryKey(java.lang.String)>-><synthetic.method.datatable.TBCONFIG: java.lang.String getconfigvalue()>
<synthetic.method.BlogMapperImpl: int getTotalBlogs(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: int getisdeleted()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Byte getEnableComment()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogCategory: void setCategoryName(java.lang.String)>
<synthetic.method.AdminUserMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.AdminUser)>-><synthetic.method.datatable.TBADMINUSER: void setloginpassword(java.lang.String)>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogCategory: void setCategoryRank(java.lang.Integer)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: synthetic.method.datatable.TBBLOGCOMMENT getInstance()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setBlogStatus(java.lang.Byte)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.String getcommentator()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Byte getblogstatus()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBBLOGCATEGORY: int getisdeleted()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><com.site.blog.my.core.entity.BlogCategory: void setCategoryIcon(java.lang.String)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogviews(java.lang.Long)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogCoverImage()>
<synthetic.method.BlogConfigMapperImpl: java.util.List selectAll()>-><synthetic.method.datatable.TBCONFIG: synthetic.method.datatable.TBCONFIG getInstance()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogContent()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogCategoryName(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setBlogStatus(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogcontent(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: int getTotalBlogComments(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Byte getcommentstatus()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setUpdateTime(java.util.Date)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Integer getBlogCategoryId()>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBLINK: java.lang.Integer getlinkid()>
<synthetic.method.BlogTagMapperImpl: java.util.List findTagList(com.site.blog.my.core.util.PageQueryUtil)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void <init>()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.String getreplybody()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogcoverimage()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogtitle()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogtitle()>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setlinkrank(java.lang.Integer)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void setReplyCreateTime(java.util.Date)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogTitle(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.util.Date getUpdateTime()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setEnableComment(java.lang.Byte)>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.util.Date getcreatetime()>
<synthetic.method.BlogCategoryMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: void setcategoryrank(java.lang.Integer)>
<synthetic.method.BlogTagMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogTag)>-><synthetic.method.datatable.TBBLOGTAG: void settagname(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.String getcommentbody()>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><com.site.blog.my.core.entity.BlogCategory: java.lang.String getCategoryIcon()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setCreateTime(java.util.Date)>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setisdeleted(int)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogviews()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setBlogSubUrl(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setcommentator(java.lang.String)>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: synthetic.method.datatable.TBLINK getInstance()>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void setBlogId(java.lang.Long)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBADMINUSER: java.lang.String getloginpassword()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Byte getblogstatus()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogstatus(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogtitle(java.lang.String)>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setlinkdescription(java.lang.String)>
<synthetic.method.BlogTagMapperImpl: int batchInsertBlogTag(java.util.List)>-><synthetic.method.datatable.TBBLOGTAG: synthetic.method.datatable.TBBLOGTAG getInstance()>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.util.Date getcommentcreatetime()>
<synthetic.method.BlogTagMapperImpl: int batchInsertBlogTag(java.util.List)>-><java.util.ArrayList: java.lang.Object get(int)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setBlogId(java.lang.Long)>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.Byte getCommentStatus()>
<synthetic.method.datatable.TBBLOGTAGRELATION: void <clinit>()>-><synthetic.method.datatable.TBBLOGTAGRELATION: void <init>()>
<synthetic.method.BlogConfigMapperImpl: java.util.List selectAll()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setblogid(java.lang.Long)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: synthetic.method.datatable.TBBLOG getInstance()>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBLINK: java.lang.Byte getlinktype()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.lang.Byte getblogstatus()>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.Byte getIsDeleted()>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGCATEGORY: int getisdeleted()>
<synthetic.method.BlogTagMapperImpl: java.util.List findTagList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogTag: void setTagId(java.lang.Integer)>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setlinkid(java.lang.Integer)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: synthetic.method.datatable.TBBLOG getInstance()>
<synthetic.method.BlogTagRelationMapperImpl: java.util.List selectDistinctTagIds(java.lang.Integer[])>-><java.lang.Long: void <init>(long)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void setReplyBody(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setUpdateTime(java.util.Date)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogId(java.lang.Long)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void <init>()>
<synthetic.method.datatable.TBBLOG: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.BlogCategoryMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.Integer getcategoryid()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setEnableComment(java.lang.Byte)>
<synthetic.method.BlogTagMapperImpl: com.site.blog.my.core.entity.BlogTag selectByTagName(java.lang.String)>-><com.site.blog.my.core.entity.BlogTag: void setTagId(java.lang.Integer)>
<synthetic.method.datatable.TBBLOG: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: synthetic.method.datatable.TBBLOG getInstance()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogCategoryName()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setblogid(java.lang.Long)>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setcommentstatus(java.lang.Byte)>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogCategory: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setenablecomment(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogcoverimage()>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.String getLinkDescription()>
<synthetic.method.BlogTagMapperImpl: com.site.blog.my.core.entity.BlogTag selectByTagName(java.lang.String)>-><synthetic.method.datatable.TBBLOGTAG: java.lang.Byte getisdeleted()>
<synthetic.method.BlogTagMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogTag)>-><com.site.blog.my.core.entity.BlogTag: java.util.Date getCreateTime()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogTags()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><com.site.blog.my.core.entity.BlogCategory: void setCategoryName(java.lang.String)>
<synthetic.method.BlogCategoryMapperImpl: java.util.List selectByCategoryIds(java.util.List)>-><synthetic.method.datatable.TBBLOGCATEGORY: synthetic.method.datatable.TBBLOGCATEGORY getInstance()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogCoverImage(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogviews()>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser login(java.lang.String,java.lang.String)>-><synthetic.method.datatable.TBADMINUSER: java.lang.String getnickname()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: java.util.Date getcreatetime()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: synthetic.method.datatable.TBBLOG getInstance()>
<synthetic.method.BlogConfigMapperImpl: com.site.blog.my.core.entity.BlogConfig selectByPrimaryKey(java.lang.String)>-><synthetic.method.datatable.TBCONFIG: java.util.Date getupdatetime()>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBLINK: java.lang.Integer getlinkrank()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogCategory: void setCategoryIcon(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setupdatetime(java.util.Date)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.BlogTagRelationMapperImpl: int deleteByBlogId(java.lang.Long)>-><synthetic.method.datatable.TBBLOGTAGRELATION: synthetic.method.datatable.TBBLOGTAGRELATION getInstance()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogsuburl()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogviews(java.lang.Long)>
<synthetic.method.BlogMapperImpl: int getTotalBlogs(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Byte getblogstatus()>
<com.site.blog.my.core.entity.AdminUser: void setNickName(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<synthetic.method.BlogTagMapperImpl: com.site.blog.my.core.entity.BlogTag selectByTagName(java.lang.String)>-><synthetic.method.datatable.TBBLOGTAG: java.lang.Integer gettagid()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: synthetic.method.datatable.TBBLOGCOMMENT getInstance()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.lang.Integer getblogcategoryid()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogConfigMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogConfig)>-><synthetic.method.datatable.TBCONFIG: void setupdatetime(java.util.Date)>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.Long getBlogId()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setBlogCoverImage(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogCategoryId(java.lang.Integer)>
<synthetic.method.BlogMapperImpl: int getTotalBlogsByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: int getcount()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: int getisdeleted()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogviews()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: java.util.Date getupdatetime()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogsuburl()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogcategoryname(java.lang.String)>
<synthetic.method.BlogTagMapperImpl: com.site.blog.my.core.entity.BlogTag selectByTagName(java.lang.String)>-><synthetic.method.datatable.TBBLOGTAG: java.lang.String gettagname()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: java.lang.Integer getblogcategoryid()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: int getisdeleted()>
<synthetic.method.BlogTagMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGTAG: java.lang.Integer gettagid()>
<synthetic.method.datatable.TBBLOG: void <clinit>()>-><synthetic.method.datatable.TBBLOG: void <init>()>
<synthetic.method.AdminUserMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.AdminUser)>-><com.site.blog.my.core.entity.AdminUser: java.lang.String getLoginPassword()>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.String getLinkName()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setBlogCoverImage(java.lang.String)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogCoverImage()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setcreatetime(java.util.Date)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogTitle()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: int getisdeleted()>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogLink: void <init>()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.util.Date getReplyCreateTime()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setcommentbody(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogConfigMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogConfig)>-><synthetic.method.datatable.TBCONFIG: java.lang.String getconfigname()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setreplycreatetime(java.util.Date)>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setisdeleted(int)>
<synthetic.method.BlogTagRelationMapperImpl: int deleteByBlogId(java.lang.Long)>-><synthetic.method.datatable.TBBLOGTAGRELATION: java.lang.Long getblogid()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void setCommentator(java.lang.String)>
<com.site.blog.my.core.entity.AdminUser: void setLoginUserName(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBLINK: int getisdeleted()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.util.Date getupdatetime()>
<synthetic.method.BlogTagRelationMapperImpl: int batchInsert(java.util.List)>-><com.site.blog.my.core.entity.BlogTagRelation: java.lang.Long getBlogId()>
<synthetic.method.BlogCommentMapperImpl: int getTotalBlogComments(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: synthetic.method.datatable.TBBLOGCOMMENT getInstance()>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><com.site.blog.my.core.entity.BlogCategory: java.lang.String getCategoryName()>
<synthetic.method.BlogTagRelationMapperImpl: int batchInsert(java.util.List)>-><synthetic.method.datatable.TBBLOGTAGRELATION: void setblogid(java.lang.Long)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogtags()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setreplybody(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setEnableComment(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogCategoryName()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.util.Date getupdatetime()>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.Integer getLinkId()>
<synthetic.method.BlogMapperImpl: int updateBlogCategorys(java.lang.String,java.lang.Integer,java.lang.Integer[])>-><synthetic.method.datatable.TBBLOG: int getisdeleted()>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser login(java.lang.String,java.lang.String)>-><com.site.blog.my.core.entity.AdminUser: void <init>()>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void setEmail(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Byte getenablecomment()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setupdatetime(java.util.Date)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Byte getenablecomment()>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.String getLinkUrl()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setwebsiteurl(java.lang.String)>
<synthetic.method.datatable.TBCONFIG: void <clinit>()>-><synthetic.method.datatable.TBCONFIG: void <init>()>
<synthetic.method.BlogCategoryMapperImpl: int getTotalCategories(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGCATEGORY: int getisdeleted()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.String getcategoryname()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Integer getBlogCategoryId()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogcategoryname()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setisdeleted(int)>
<synthetic.method.BlogLinkMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBLINK: java.lang.Integer getlinkid()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.Long getCommentId()>
<synthetic.method.BlogLinkMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBLINK: void setisdeleted(int)>
<synthetic.method.BlogTagMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogTag)>-><com.site.blog.my.core.entity.BlogTag: java.lang.String getTagName()>
<synthetic.method.BlogCategoryMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: void setisdeleted(int)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogid()>
<synthetic.method.BlogCommentMapperImpl: int getTotalBlogComments(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Byte getisdeleted()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogCategory: void setCreateTime(java.util.Date)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogtitle()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.util.Date getReplyCreateTime()>
<synthetic.method.BlogLinkMapperImpl: java.util.List findLinkList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBLINK: int getisdeleted()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setemail(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void setEmail(java.lang.String)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.AdminUser: void setLocked(java.lang.Byte)>
<synthetic.method.BlogTagMapperImpl: java.util.List findTagList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGTAG: java.lang.Integer gettagid()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Long getBlogViews()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><com.site.blog.my.core.entity.BlogCategory: void setCategoryRank(java.lang.Integer)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.util.Date getupdatetime()>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setlinktype(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogTitle(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setcommentstatus(java.lang.Byte)>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><com.site.blog.my.core.entity.BlogCategory: void setCategoryId(java.lang.Integer)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogtags(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Byte getEnableComment()>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Long getblogid()>
<synthetic.method.datatable.TBLINK: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogviews(java.lang.Long)>
<synthetic.method.BlogMapperImpl: int getTotalBlogs(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: synthetic.method.datatable.TBBLOG getInstance()>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser login(java.lang.String,java.lang.String)>-><synthetic.method.datatable.TBADMINUSER: java.lang.Integer getadminuserid()>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.String getLinkDescription()>
<synthetic.method.BlogMapperImpl: int getTotalBlogsByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogid()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Long getBlogId()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void <init>()>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogCategory: void setCategoryIcon(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setBlogTags(java.lang.String)>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogLink: void setLinkId(java.lang.Integer)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Byte getIsDeleted()>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBLINK: java.lang.String getlinkurl()>
<synthetic.method.BlogTagMapperImpl: int getTotalTags(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGTAG: synthetic.method.datatable.TBBLOGTAG getInstance()>
<synthetic.method.BlogLinkMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBLINK: synthetic.method.datatable.TBLINK getInstance()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Long getBlogViews()>
<synthetic.method.BlogLinkMapperImpl: int getTotalLinks(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBLINK: int getcount()>
<synthetic.method.BlogMapperImpl: int updateBlogCategorys(java.lang.String,java.lang.Integer,java.lang.Integer[])>-><synthetic.method.datatable.TBBLOG: void setblogcategoryname(java.lang.String)>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><com.site.blog.my.core.entity.BlogCategory: java.lang.Integer getCategoryId()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setcommentcreatetime(java.util.Date)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setBlogViews(java.lang.Long)>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.String getEmail()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogTags()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Integer getblogcategoryid()>
<synthetic.method.BlogMapperImpl: int getTotalBlogsByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: synthetic.method.datatable.TBBLOG getInstance()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogcoverimage()>
<synthetic.method.BlogTagRelationMapperImpl: int batchInsert(java.util.List)>-><synthetic.method.datatable.TBBLOGTAGRELATION: void settagid(java.lang.Integer)>
<synthetic.method.BlogCategoryMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGCATEGORY: void setisdeleted(int)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogViews(java.lang.Long)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: java.lang.Byte getenablecomment()>
<synthetic.method.BlogTagMapperImpl: int batchInsertBlogTag(java.util.List)>-><com.site.blog.my.core.entity.BlogTag: java.lang.String getTagName()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setcommentid(java.lang.Long)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogSubUrl()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.String getEmail()>
<synthetic.method.datatable.TBBLOGTAG: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.BlogLinkMapperImpl: java.util.List findLinkList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBLINK: synthetic.method.datatable.TBLINK getInstance()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Byte getIsDeleted()>
<com.site.blog.my.core.entity.BlogConfig: void setConfigName(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<synthetic.method.datatable.TBADMINUSER: void <clinit>()>-><synthetic.method.datatable.TBADMINUSER: void <init>()>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser login(java.lang.String,java.lang.String)>-><synthetic.method.datatable.TBADMINUSER: synthetic.method.datatable.TBADMINUSER getInstance()>
<synthetic.method.BlogTagMapperImpl: com.site.blog.my.core.entity.BlogTag selectByTagName(java.lang.String)>-><com.site.blog.my.core.entity.BlogTag: void setTagName(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.String getwebsiteurl()>
<synthetic.method.datatable.TBBLOGCOMMENT: void <clinit>()>-><synthetic.method.datatable.TBBLOGCOMMENT: void <init>()>
<synthetic.method.BlogConfigMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogConfig)>-><synthetic.method.datatable.TBCONFIG: void setconfigvalue(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogCategoryName()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogcontent()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.util.Date getcreatetime()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogTags(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.util.Date getcreatetime()>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.String getcommentatorip()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setupdatetime(java.util.Date)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogid()>
<synthetic.method.datatable.TBBLOGCOMMENT: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><com.site.blog.my.core.entity.BlogCategory: java.lang.Integer getCategoryRank()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogsuburl(java.lang.String)>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogCategory: void setCategoryName(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: int getisdeleted()>
<synthetic.method.BlogTagMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogTag)>-><synthetic.method.datatable.TBBLOGTAG: void setisdeleted(java.lang.Byte)>
<synthetic.method.BlogLinkMapperImpl: java.util.List findLinkList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogLink: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogConfigMapperImpl: com.site.blog.my.core.entity.BlogConfig selectByPrimaryKey(java.lang.String)>-><com.site.blog.my.core.entity.BlogConfig: void setCreateTime(java.util.Date)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: java.lang.Byte getblogstatus()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogid()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogcategoryid(java.lang.Integer)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setCreateTime(java.util.Date)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setenablecomment(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setBlogCoverImage(java.lang.String)>
<synthetic.method.AdminUserMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.AdminUser)>-><com.site.blog.my.core.entity.AdminUser: java.lang.String getNickName()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><com.site.blog.my.core.entity.BlogCategory: void <init>()>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setlinktype(java.lang.Byte)>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><synthetic.method.datatable.TBBLOGCATEGORY: int getisdeleted()>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.String getcategoryname()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.Integer getcategoryrank()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><com.site.blog.my.core.entity.BlogCategory: void setCreateTime(java.util.Date)>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.Integer getcategoryid()>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBLINK: synthetic.method.datatable.TBLINK getInstance()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setcommentatorip(java.lang.String)>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.String getLinkUrl()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.Byte getIsDeleted()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void setBlogId(java.lang.Long)>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setreplycreatetime(java.util.Date)>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.Integer getLinkRank()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setUpdateTime(java.util.Date)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void <init>()>
<synthetic.method.BlogConfigMapperImpl: com.site.blog.my.core.entity.BlogConfig selectByPrimaryKey(java.lang.String)>-><synthetic.method.datatable.TBCONFIG: java.lang.String getconfigname()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setBlogCategoryId(java.lang.Integer)>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setlinkdescription(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateBlogCategorys(java.lang.String,java.lang.Integer,java.lang.Integer[])>-><synthetic.method.datatable.TBBLOG: void setblogcategoryid(java.lang.Integer)>
<synthetic.method.BlogMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogid()>
<synthetic.method.BlogCommentMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGCOMMENT: void setisdeleted(java.lang.Byte)>
<synthetic.method.BlogTagRelationMapperImpl: java.util.List selectDistinctTagIds(java.lang.Integer[])>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.BlogCategoryMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: void setcategoryname(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.lang.Byte getenablecomment()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogTags(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void setReplyCreateTime(java.util.Date)>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><com.site.blog.my.core.entity.BlogCategory: java.lang.Byte getIsDeleted()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogid()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogcoverimage()>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><com.site.blog.my.core.entity.BlogCategory: java.util.Date getCreateTime()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setBlogCategoryName(java.lang.String)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.AdminUser: void setLoginPassword(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void setCommentId(java.lang.Long)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser login(java.lang.String,java.lang.String)>-><synthetic.method.datatable.TBADMINUSER: java.lang.Byte getlocked()>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogLink: void setCreateTime(java.util.Date)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogtags(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void setCommentStatus(java.lang.Byte)>
<synthetic.method.BlogTagMapperImpl: java.util.List findTagList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogTag: void setTagName(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogviews()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setisdeleted(java.lang.Byte)>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogCategory: void <init>()>
<synthetic.method.BlogCommentMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGCOMMENT: synthetic.method.datatable.TBBLOGCOMMENT getInstance()>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void setCommentator(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogcategoryname(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setBlogTitle(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.lang.Integer getblogcategoryid()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setemail(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogcategoryname()>
<synthetic.method.AdminUserMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.AdminUser)>-><com.site.blog.my.core.entity.AdminUser: java.lang.Byte getLocked()>
<synthetic.method.BlogConfigMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogConfig)>-><synthetic.method.datatable.TBCONFIG: synthetic.method.datatable.TBCONFIG getInstance()>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBADMINUSER: java.lang.Byte getlocked()>
<synthetic.method.BlogCategoryMapperImpl: java.util.List selectByCategoryIds(java.util.List)>-><synthetic.method.datatable.TBBLOGCATEGORY: int getisdeleted()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void setReplyBody(java.lang.String)>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: void setcreatetime(java.util.Date)>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogLink: void setLinkUrl(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setreplybody(java.lang.String)>
<synthetic.method.BlogConfigMapperImpl: com.site.blog.my.core.entity.BlogConfig selectByPrimaryKey(java.lang.String)>-><synthetic.method.datatable.TBCONFIG: java.util.Date getcreatetime()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void setCommentCreateTime(java.util.Date)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void setWebsiteUrl(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Byte getisdeleted()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setEnableComment(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogstatus(java.lang.Byte)>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.String getCommentBody()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogStatus(java.lang.Byte)>
<synthetic.method.BlogCategoryMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: synthetic.method.datatable.TBBLOGCATEGORY getInstance()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogcategoryid(java.lang.Integer)>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setwebsiteurl(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setBlogId(java.lang.Long)>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.String getCommentator()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><com.site.blog.my.core.entity.BlogCategory: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setBlogCategoryId(java.lang.Integer)>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><synthetic.method.datatable.TBBLOGCATEGORY: synthetic.method.datatable.TBBLOGCATEGORY getInstance()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setBlogSubUrl(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: synthetic.method.datatable.TBBLOG getInstance()>
<synthetic.method.BlogTagMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogTag)>-><synthetic.method.datatable.TBBLOGTAG: void setcreatetime(java.util.Date)>
<synthetic.method.BlogConfigMapperImpl: com.site.blog.my.core.entity.BlogConfig selectByPrimaryKey(java.lang.String)>-><com.site.blog.my.core.entity.BlogConfig: void setConfigName(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void <init>()>
<synthetic.method.BlogTagMapperImpl: int getTotalTags(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGTAG: int getcount()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogcategoryname()>
<synthetic.method.datatable.TBBLOGTAG: void <clinit>()>-><synthetic.method.datatable.TBBLOGTAG: void <init>()>
<synthetic.method.BlogCommentMapperImpl: int checkDone(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGCOMMENT: void setcommentstatus(java.lang.Byte)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBADMINUSER: synthetic.method.datatable.TBADMINUSER getInstance()>
<synthetic.method.BlogLinkMapperImpl: int getTotalLinks(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBLINK: int getisdeleted()>
<synthetic.method.BlogConfigMapperImpl: java.util.List selectAll()>-><com.site.blog.my.core.entity.BlogConfig: void <init>()>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: void setcategoryname(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: int checkDone(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Long getcommentid()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: synthetic.method.datatable.TBBLOG getInstance()>
<synthetic.method.AdminUserMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.AdminUser)>-><synthetic.method.datatable.TBADMINUSER: void setnickname(java.lang.String)>
<com.site.blog.my.core.entity.BlogComment: void setReplyBody(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setCreateTime(java.util.Date)>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogLink: void setLinkName(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.util.Date getcreatetime()>
<synthetic.method.BlogConfigMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogConfig)>-><synthetic.method.datatable.TBCONFIG: void setcreatetime(java.util.Date)>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setlinkname(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogviews()>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogCategory: void setCategoryId(java.lang.Integer)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.AdminUser: void setAdminUserId(java.lang.Integer)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser login(java.lang.String,java.lang.String)>-><com.site.blog.my.core.entity.AdminUser: void setLoginPassword(java.lang.String)>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.util.Date getcreatetime()>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void setCommentBody(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.String getreplybody()>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogCategory: void setCategoryRank(java.lang.Integer)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogcategoryname(java.lang.String)>
<synthetic.method.BlogLinkMapperImpl: java.util.List findLinkList(com.site.blog.my.core.util.PageQueryUtil)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.util.Date getUpdateTime()>
<synthetic.method.BlogTagMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGTAG: synthetic.method.datatable.TBBLOGTAG getInstance()>
<synthetic.method.BlogConfigMapperImpl: com.site.blog.my.core.entity.BlogConfig selectByPrimaryKey(java.lang.String)>-><com.site.blog.my.core.entity.BlogConfig: void setUpdateTime(java.util.Date)>
<synthetic.method.BlogTagMapperImpl: java.util.List findTagList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGTAG: java.lang.String gettagname()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: synthetic.method.datatable.TBBLOG getInstance()>
<synthetic.method.BlogTagMapperImpl: java.util.List findTagList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGTAG: java.lang.Byte getisdeleted()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.String getCommentatorIp()>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.Byte getLinkType()>
<synthetic.method.BlogTagMapperImpl: java.util.List findTagList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGTAG: java.util.Date getcreatetime()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.String getcategoryname()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Byte getcommentstatus()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.util.Date getcreatetime()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void <init>()>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setlinkurl(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setBlogCategoryId(java.lang.Integer)>
<synthetic.method.BlogMapperImpl: int getTotalBlogs(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: int getcount()>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser login(java.lang.String,java.lang.String)>-><synthetic.method.datatable.TBADMINUSER: java.lang.String getloginusername()>
<synthetic.method.BlogConfigMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogConfig)>-><com.site.blog.my.core.entity.BlogConfig: java.util.Date getCreateTime()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogCategory: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setUpdateTime(java.util.Date)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.AdminUser: void setNickName(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setisdeleted(int)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.String getemail()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogtitle()>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: void setisdeleted(int)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogSubUrl()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogtags(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setcreatetime(java.util.Date)>
<synthetic.method.AdminUserMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.AdminUser)>-><synthetic.method.datatable.TBADMINUSER: java.lang.Integer getadminuserid()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.String getcategoryicon()>
<synthetic.method.BlogTagMapperImpl: com.site.blog.my.core.entity.BlogTag selectByTagName(java.lang.String)>-><com.site.blog.my.core.entity.BlogTag: void <init>()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setBlogCategoryName(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.Byte getCommentStatus()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setBlogContent(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogStatus(java.lang.Byte)>
<com.site.blog.my.core.entity.AdminUser: void setLoginPassword(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBADMINUSER: java.lang.Integer getadminuserid()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogcategoryname()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.String getReplyBody()>
<synthetic.method.BlogTagRelationMapperImpl: int batchInsert(java.util.List)>-><synthetic.method.datatable.TBBLOGTAGRELATION: synthetic.method.datatable.TBBLOGTAGRELATION getInstance()>
<synthetic.method.BlogTagMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogTag)>-><com.site.blog.my.core.entity.BlogTag: java.lang.Integer getTagId()>
<synthetic.method.BlogTagMapperImpl: int getTotalTags(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGTAG: java.lang.Byte getisdeleted()>
<synthetic.method.BlogCategoryMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogCategory)>-><com.site.blog.my.core.entity.BlogCategory: java.lang.String getCategoryIcon()>
<synthetic.method.datatable.TBBLOGTAGRELATION: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.BlogCategoryMapperImpl: java.util.List selectByCategoryIds(java.util.List)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.Integer getcategoryid()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Integer getblogcategoryid()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setBlogViews(java.lang.Long)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: synthetic.method.datatable.TBBLOG getInstance()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Long getcommentid()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setcommentatorip(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogTags()>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: java.lang.Integer getlinkid()>
<synthetic.method.datatable.TBLINK: void <clinit>()>-><synthetic.method.datatable.TBLINK: void <init>()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogCategoryName(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogid()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void setCommentStatus(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogcategoryid(java.lang.Integer)>
<synthetic.method.BlogCategoryMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogCategory)>-><com.site.blog.my.core.entity.BlogCategory: java.lang.String getCategoryName()>
<synthetic.method.BlogTagMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogTag)>-><synthetic.method.datatable.TBBLOGTAG: void settagid(java.lang.Integer)>
<synthetic.method.AdminUserMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.AdminUser)>-><synthetic.method.datatable.TBADMINUSER: void setlocked(java.lang.Byte)>
<synthetic.method.BlogCategoryMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: void setcategoryicon(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setCreateTime(java.util.Date)>
<synthetic.method.BlogCategoryMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogCategory)>-><com.site.blog.my.core.entity.BlogCategory: java.util.Date getCreateTime()>
<synthetic.method.datatable.TBADMINUSER: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setBlogCategoryName(java.lang.String)>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBLINK: java.lang.String getlinkdescription()>
<synthetic.method.BlogTagRelationMapperImpl: java.util.List selectDistinctTagIds(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGTAGRELATION: synthetic.method.datatable.TBBLOGTAGRELATION getInstance()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogsuburl(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogsuburl()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void setWebsiteUrl(java.lang.String)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser login(java.lang.String,java.lang.String)>-><com.site.blog.my.core.entity.AdminUser: void setLocked(java.lang.Byte)>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBLINK: java.lang.String getlinkname()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogsuburl()>
<synthetic.method.BlogMapperImpl: int updateBlogCategorys(java.lang.String,java.lang.Integer,java.lang.Integer[])>-><synthetic.method.datatable.TBBLOG: java.lang.Integer getblogcategoryid()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Long getblogid()>
<synthetic.method.datatable.TBBLOGTAG: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBADMINUSER: java.lang.String getloginusername()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.util.Date getreplycreatetime()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogsuburl()>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogLink: void setLinkDescription(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setIsDeleted(java.lang.Byte)>
<com.site.blog.my.core.entity.BlogComment: void setCommentatorIp(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.Integer getLinkRank()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogstatus(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogCoverImage(java.lang.String)>
<synthetic.method.BlogTagRelationMapperImpl: int batchInsert(java.util.List)>-><com.site.blog.my.core.entity.BlogTagRelation: java.lang.Integer getTagId()>
<synthetic.method.datatable.TBBLOGCOMMENT: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setcommentcreatetime(java.util.Date)>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.String getcategoryicon()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setisdeleted(int)>
<synthetic.method.BlogConfigMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogConfig)>-><com.site.blog.my.core.entity.BlogConfig: java.util.Date getUpdateTime()>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: synthetic.method.datatable.TBLINK getInstance()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogCategory: void setCategoryId(java.lang.Integer)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.AdminUser: void <init>()>
<synthetic.method.BlogTagMapperImpl: java.util.List findTagList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogTag: void <init>()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogtitle(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogSubUrl(java.lang.String)>
<synthetic.method.datatable.TBBLOGCATEGORY: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setlinkrank(java.lang.Integer)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogcontent(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setEnableComment(java.lang.Byte)>
<synthetic.method.AdminUserMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.AdminUser)>-><synthetic.method.datatable.TBADMINUSER: void setloginusername(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.util.Date getCommentCreateTime()>
<synthetic.method.BlogCommentMapperImpl: int checkDone(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Byte getcommentstatus()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogtags()>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setlinkurl(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void <init>()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogTitle()>
<synthetic.method.BlogLinkMapperImpl: java.util.List findLinkList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogLink: void <init>()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setBlogTitle(java.lang.String)>
<synthetic.method.datatable.TBCONFIG: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.String getCommentatorIp()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.String getCommentBody()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.util.Date getCommentCreateTime()>
<synthetic.method.BlogMapperImpl: int updateBlogCategorys(java.lang.String,java.lang.Integer,java.lang.Integer[])>-><synthetic.method.datatable.TBBLOG: synthetic.method.datatable.TBBLOG getInstance()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.String getcommentatorip()>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void setCommentatorIp(java.lang.String)>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBLINK: java.util.Date getcreatetime()>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.AdminUser: void setLoginUserName(java.lang.String)>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.util.Date getCreateTime()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.util.Date getUpdateTime()>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGCATEGORY: synthetic.method.datatable.TBBLOGCATEGORY getInstance()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogSubUrl()>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: void setcategoryrank(java.lang.Integer)>
<synthetic.method.BlogCategoryMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGCATEGORY: synthetic.method.datatable.TBBLOGCATEGORY getInstance()>
<synthetic.method.BlogCategoryMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: void setcreatetime(java.util.Date)>
<synthetic.method.BlogConfigMapperImpl: com.site.blog.my.core.entity.BlogConfig selectByPrimaryKey(java.lang.String)>-><com.site.blog.my.core.entity.BlogConfig: void <init>()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setBlogViews(java.lang.Long)>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void setCommentBody(java.lang.String)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogtags()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: synthetic.method.datatable.TBBLOGCOMMENT getInstance()>
<synthetic.method.BlogTagMapperImpl: java.util.List findTagList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogTag: void setCreateTime(java.util.Date)>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.String getReplyBody()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setBlogTags(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: int getTotalBlogComments(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Long getblogid()>
<synthetic.method.datatable.TBBLOGCATEGORY: void <clinit>()>-><synthetic.method.datatable.TBBLOGCATEGORY: void <init>()>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.Integer getcategoryrank()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.String getWebsiteUrl()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Byte getisdeleted()>
<synthetic.method.BlogCategoryMapperImpl: int getTotalCategories(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGCATEGORY: int getcount()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogCategory: void <init>()>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.util.Date getCreateTime()>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.util.Date getreplycreatetime()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setBlogSubUrl(java.lang.String)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser login(java.lang.String,java.lang.String)>-><com.site.blog.my.core.entity.AdminUser: void setAdminUserId(java.lang.Integer)>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.String getCommentator()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void setCommentatorIp(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: int checkDone(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGCOMMENT: synthetic.method.datatable.TBBLOGCOMMENT getInstance()>
<synthetic.method.BlogMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOG: synthetic.method.datatable.TBBLOG getInstance()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.lang.Byte getenablecomment()>
<synthetic.method.BlogTagRelationMapperImpl: java.util.List selectDistinctTagIds(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGTAGRELATION: java.lang.Integer gettagid()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.util.Date getupdatetime()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setBlogContent(java.lang.String)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogid(java.lang.Long)>
<synthetic.method.BlogCategoryMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.Integer getcategoryid()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: synthetic.method.datatable.TBBLOGCOMMENT getInstance()>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.BlogComment: void setCommentCreateTime(java.util.Date)>
<synthetic.method.BlogConfigMapperImpl: com.site.blog.my.core.entity.BlogConfig selectByPrimaryKey(java.lang.String)>-><com.site.blog.my.core.entity.BlogConfig: void setConfigValue(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Byte getBlogStatus()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.Integer getcategoryrank()>
<com.site.blog.my.core.entity.BlogConfig: void setConfigValue(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<synthetic.method.AdminUserMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.AdminUser)>-><synthetic.method.datatable.TBADMINUSER: synthetic.method.datatable.TBADMINUSER getInstance()>
<synthetic.method.BlogTagMapperImpl: com.site.blog.my.core.entity.BlogTag selectByTagName(java.lang.String)>-><com.site.blog.my.core.entity.BlogTag: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogViews(java.lang.Long)>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogCategory: void setCreateTime(java.util.Date)>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setUpdateTime(java.util.Date)>
<synthetic.method.BlogLinkMapperImpl: int getTotalLinks(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBLINK: synthetic.method.datatable.TBLINK getInstance()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setBlogTitle(java.lang.String)>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.String getcategoryicon()>
<synthetic.method.datatable.TBCONFIG: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setcreatetime(java.util.Date)>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.String getcommentbody()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.String getcommentator()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Byte getIsDeleted()>
<synthetic.method.BlogTagMapperImpl: java.util.List findTagList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGTAG: synthetic.method.datatable.TBBLOGTAG getInstance()>
<synthetic.method.datatable.TBBLOGTAGRELATION: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Long getBlogViews()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.util.Date getcreatetime()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.util.Date getcommentcreatetime()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogContent()>
<synthetic.method.BlogCommentMapperImpl: int getTotalBlogComments(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: int getcount()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogcoverimage()>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: void setcategoryid(java.lang.Integer)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogTitle()>
<synthetic.method.BlogTagMapperImpl: com.site.blog.my.core.entity.BlogTag selectByTagName(java.lang.String)>-><synthetic.method.datatable.TBBLOGTAG: synthetic.method.datatable.TBBLOGTAG getInstance()>
<synthetic.method.BlogMapperImpl: int getTotalBlogs(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.Integer getblogcategoryid()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Byte getEnableComment()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Long getcommentid()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Integer getBlogCategoryId()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setcommentator(java.lang.String)>
<synthetic.method.BlogTagMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOGTAG: void setisdeleted(java.lang.Byte)>
<synthetic.method.BlogTagMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogTag)>-><com.site.blog.my.core.entity.BlogTag: java.lang.Byte getIsDeleted()>
<synthetic.method.BlogConfigMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogConfig)>-><com.site.blog.my.core.entity.BlogConfig: java.lang.String getConfigValue()>
<synthetic.method.AdminUserMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.AdminUser)>-><com.site.blog.my.core.entity.AdminUser: java.lang.String getLoginUserName()>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser login(java.lang.String,java.lang.String)>-><com.site.blog.my.core.entity.AdminUser: void setNickName(java.lang.String)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser login(java.lang.String,java.lang.String)>-><com.site.blog.my.core.entity.AdminUser: void setLoginUserName(java.lang.String)>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.String getWebsiteUrl()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogcoverimage(java.lang.String)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.util.Date getCreateTime()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.String getwebsiteurl()>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBBLOGCATEGORY: synthetic.method.datatable.TBBLOGCATEGORY getInstance()>
<synthetic.method.BlogCategoryMapperImpl: java.util.List selectByCategoryIds(java.util.List)>-><java.lang.Integer: void <init>(int)>
<synthetic.method.datatable.TBBLOGCATEGORY: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogid()>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setisdeleted(java.lang.Byte)>
<synthetic.method.AdminUserMapperImpl: com.site.blog.my.core.entity.AdminUser selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.TBADMINUSER: java.lang.String getnickname()>
<synthetic.method.BlogCommentMapperImpl: com.site.blog.my.core.entity.BlogComment selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.Byte getcommentstatus()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.util.Date getCreateTime()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogCategoryId(java.lang.Integer)>
<synthetic.method.BlogCategoryMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogCategory)>-><com.site.blog.my.core.entity.BlogCategory: java.lang.Byte getIsDeleted()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><com.site.blog.my.core.entity.Blog: void setCreateTime(java.util.Date)>
<synthetic.method.BlogTagMapperImpl: com.site.blog.my.core.entity.BlogTag selectByTagName(java.lang.String)>-><com.site.blog.my.core.entity.BlogTag: void setCreateTime(java.util.Date)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.lang.Long getblogid()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.util.Date getCreateTime()>
<synthetic.method.BlogMapperImpl: java.util.List getBlogsPageByTagId(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogSubUrl(java.lang.String)>
<synthetic.method.BlogMapperImpl: int deleteBatch(java.lang.Integer[])>-><synthetic.method.datatable.TBBLOG: void setisdeleted(int)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setBlogId(java.lang.Long)>
<synthetic.method.BlogTagMapperImpl: java.util.List findTagList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.BlogTag: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.String getBlogCoverImage()>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><synthetic.method.datatable.TBBLOGCOMMENT: java.lang.String getemail()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogcategoryname()>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogcoverimage(java.lang.String)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><com.site.blog.my.core.entity.Blog: void setBlogTags(java.lang.String)>
<synthetic.method.BlogMapperImpl: int insertSelective(com.site.blog.my.core.entity.Blog)>-><com.site.blog.my.core.entity.Blog: java.lang.Byte getBlogStatus()>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setblogsuburl(java.lang.String)>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.String getLinkName()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.Byte getIsDeleted()>
<synthetic.method.BlogCategoryMapperImpl: java.util.List findCategoryList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.Integer getcategoryid()>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.Byte getIsDeleted()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><com.site.blog.my.core.entity.Blog: void setBlogId(java.lang.Long)>
<synthetic.method.BlogCommentMapperImpl: java.util.List findBlogCommentList(java.util.Map)>-><com.site.blog.my.core.entity.BlogComment: void setCommentId(java.lang.Long)>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><com.site.blog.my.core.entity.Blog: void setBlogStatus(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: int updateByPrimaryKey(com.site.blog.my.core.entity.Blog)>-><synthetic.method.datatable.TBBLOG: void setenablecomment(java.lang.Byte)>
<synthetic.method.BlogMapperImpl: java.util.List findBlogListByType(int,int)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogtags()>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogLink: void setLinkRank(java.lang.Integer)>
<synthetic.method.BlogCategoryMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogCategory)>-><synthetic.method.datatable.TBBLOGCATEGORY: void setcategoryicon(java.lang.String)>
<synthetic.method.BlogTagMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogTag)>-><synthetic.method.datatable.TBBLOGTAG: synthetic.method.datatable.TBBLOGTAG getInstance()>
<synthetic.method.BlogMapperImpl: java.util.List findBlogList(com.site.blog.my.core.util.PageQueryUtil)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogtitle()>
<synthetic.method.BlogLinkMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogLink)>-><synthetic.method.datatable.TBLINK: void setcreatetime(java.util.Date)>
<synthetic.method.BlogCommentMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogComment)>-><synthetic.method.datatable.TBBLOGCOMMENT: void setcommentbody(java.lang.String)>
<synthetic.method.BlogCategoryMapperImpl: com.site.blog.my.core.entity.BlogCategory selectByCategoryName(java.lang.String)>-><synthetic.method.datatable.TBBLOGCATEGORY: java.lang.Integer getcategoryid()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectBySubUrl(java.lang.String)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogtags()>
<synthetic.method.BlogCommentMapperImpl: int insertSelective(com.site.blog.my.core.entity.BlogComment)>-><com.site.blog.my.core.entity.BlogComment: java.lang.Long getBlogId()>
<synthetic.method.BlogMapperImpl: com.site.blog.my.core.entity.Blog selectByPrimaryKey(java.lang.Long)>-><synthetic.method.datatable.TBBLOG: java.lang.String getblogcontent()>
<synthetic.method.BlogLinkMapperImpl: int updateByPrimaryKeySelective(com.site.blog.my.core.entity.BlogLink)>-><com.site.blog.my.core.entity.BlogLink: java.lang.Byte getLinkType()>
<synthetic.method.BlogLinkMapperImpl: com.site.blog.my.core.entity.BlogLink selectByPrimaryKey(java.lang.Integer)>-><com.site.blog.my.core.entity.BlogLink: void setIsDeleted(java.lang.Byte)>
<synthetic.method.BlogTagRelationMapperImpl: int batchInsert(java.util.List)>-><java.util.ArrayList: java.lang.Object get(int)>
